{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/react-hot-loader/babel.js\"],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/utils/addSVGDropShadowDef.js","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/utils/addSVGDropShadowDef.js","mtime":1543486759611},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/.babelrc","mtime":1548840716937},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nvar _default = function _default(svg) {\n  // filters go in defs element\n  var defs = svg.append('defs'); // create filter with id #drop-shadow\n  // height=130% so that the shadow is not clipped\n\n  var filter = defs.append('filter').attr('id', 'drop-shadow').attr('height', '180%'); // SourceAlpha refers to opacity of graphic that this filter will be applied to\n  // convolve that with a Gaussian with standard deviation 3 and store result\n  // in blur\n\n  filter.append('feGaussianBlur').attr('in', 'SourceAlpha').attr('stdDeviation', 3).attr('result', 'blur'); // translate output of Gaussian blur to the right and downwards with 2px\n  // store result in offsetBlur\n\n  filter.append('feOffset').attr('in', 'blur').attr('dx', 1).attr('dy', 1).attr('result', 'offsetBlur'); // overlay original SourceGraphic over translated blurred opacity by using\n  // feMerge filter. Order of specifying inputs is important!\n\n  var feMerge = filter.append('feMerge');\n  feMerge.append('feMergeNode').attr('in', 'offsetBlur');\n  feMerge.append('feMergeNode').attr('in', 'SourceGraphic');\n};\n\n// http://bl.ocks.org/cpbotha/5200394\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_default, \"default\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/utils/addSVGDropShadowDef.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/utils/addSVGDropShadowDef.js"],"names":["defs","svg","filter","feMerge"],"mappings":";;;;;;eAEe,kBAAA,GAAA,EAAO;AACpB;AACA,MAAMA,IAAI,GAAGC,GAAG,CAAHA,MAAAA,CAFO,MAEPA,CAAb,CAFoB,CAIpB;AACA;;AACA,MAAMC,MAAM,GAAGF,IAAI,CAAJA,MAAAA,CAAAA,QAAAA,EAAAA,IAAAA,CAAAA,IAAAA,EAAAA,aAAAA,EAAAA,IAAAA,CAAAA,QAAAA,EANK,MAMLA,CAAf,CANoB,CAWpB;AACA;AACA;;AACAE,EAAAA,MAAM,CAANA,MAAAA,CAAAA,gBAAAA,EAAAA,IAAAA,CAAAA,IAAAA,EAAAA,aAAAA,EAAAA,IAAAA,CAAAA,cAAAA,EAAAA,CAAAA,EAAAA,IAAAA,CAAAA,QAAAA,EAdoB,MAcpBA,EAdoB,CAoBpB;AACA;;AACAA,EAAAA,MAAM,CAANA,MAAAA,CAAAA,UAAAA,EAAAA,IAAAA,CAAAA,IAAAA,EAAAA,MAAAA,EAAAA,IAAAA,CAAAA,IAAAA,EAAAA,CAAAA,EAAAA,IAAAA,CAAAA,IAAAA,EAAAA,CAAAA,EAAAA,IAAAA,CAAAA,QAAAA,EAtBoB,YAsBpBA,EAtBoB,CA6BpB;AACA;;AACA,MAAMC,OAAO,GAAGD,MAAM,CAANA,MAAAA,CAAhB,SAAgBA,CAAhB;AAEAC,EAAAA,OAAO,CAAPA,MAAAA,CAAAA,aAAAA,EAAAA,IAAAA,CAAAA,IAAAA,EAAAA,YAAAA;AACAA,EAAAA,OAAO,CAAPA,MAAAA,CAAAA,aAAAA,EAAAA,IAAAA,CAAAA,IAAAA,EAAAA,eAAAA;AAlCF,C;;AAFA;AAEA","sourcesContent":["// http://bl.ocks.org/cpbotha/5200394\n\nexport default svg => {\n  // filters go in defs element\n  const defs = svg.append('defs');\n\n  // create filter with id #drop-shadow\n  // height=130% so that the shadow is not clipped\n  const filter = defs\n    .append('filter')\n    .attr('id', 'drop-shadow')\n    .attr('height', '180%');\n\n  // SourceAlpha refers to opacity of graphic that this filter will be applied to\n  // convolve that with a Gaussian with standard deviation 3 and store result\n  // in blur\n  filter\n    .append('feGaussianBlur')\n    .attr('in', 'SourceAlpha')\n    .attr('stdDeviation', 3)\n    .attr('result', 'blur');\n\n  // translate output of Gaussian blur to the right and downwards with 2px\n  // store result in offsetBlur\n  filter\n    .append('feOffset')\n    .attr('in', 'blur')\n    .attr('dx', 1)\n    .attr('dy', 1)\n    .attr('result', 'offsetBlur');\n\n  // overlay original SourceGraphic over translated blurred opacity by using\n  // feMerge filter. Order of specifying inputs is important!\n  const feMerge = filter.append('feMerge');\n\n  feMerge.append('feMergeNode').attr('in', 'offsetBlur');\n  feMerge.append('feMergeNode').attr('in', 'SourceGraphic');\n};\n"]}]}