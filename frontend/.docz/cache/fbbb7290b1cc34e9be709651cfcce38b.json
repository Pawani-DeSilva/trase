{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/react-hot-loader/babel.js\"],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/text/text.component.jsx","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/text/text.component.jsx","mtime":1548345115629},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport './text.scss';\n\nfunction Text(props) {\n  var _cx;\n\n  var as = props.as,\n      variant = props.variant,\n      color = props.color,\n      size = props.size,\n      align = props.align,\n      weight = props.weight,\n      children = props.children,\n      rest = _objectWithoutProperties(props, [\"as\", \"variant\", \"color\", \"size\", \"align\", \"weight\", \"children\"]);\n\n  var textProps = _objectSpread({}, rest, {\n    className: cx('c-text', variant, (_cx = {}, _defineProperty(_cx, \"color-\".concat(color), color), _defineProperty(_cx, \"size-\".concat(size), size), _defineProperty(_cx, \"weight-\".concat(weight), weight), _defineProperty(_cx, \"align-\".concat(align), align), _cx))\n  });\n\n  return React.createElement(as, textProps, children);\n}\n\nText.defaultProps = {\n  as: 'p',\n  size: 'rg',\n  color: 'grey',\n  weight: 'light',\n  variant: 'serif'\n};\nText.propTypes = {\n  size: PropTypes.string,\n  align: PropTypes.string,\n  color: PropTypes.string,\n  weight: PropTypes.string,\n  children: PropTypes.node,\n  variant: PropTypes.string,\n  as: PropTypes.oneOfType([PropTypes.string, PropTypes.element])\n};\nvar _default = Text;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Text, \"Text\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/text/text.component.jsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/text/text.component.jsx\");\n  leaveModule(module);\n})();\n\n;\nText.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Text\",\n  \"props\": {\n    \"as\": {\n      \"defaultValue\": {\n        \"value\": \"'p'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"string\"\n        }, {\n          \"name\": \"element\"\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"size\": {\n      \"defaultValue\": {\n        \"value\": \"'rg'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"color\": {\n      \"defaultValue\": {\n        \"value\": \"'grey'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"weight\": {\n      \"defaultValue\": {\n        \"value\": \"'light'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"variant\": {\n      \"defaultValue\": {\n        \"value\": \"'serif'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"align\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"children\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/text/text.component.jsx"],"names":["React","PropTypes","cx","Text","props","as","variant","color","size","align","weight","children","rest","textProps","className","createElement","defaultProps","propTypes","string","node","oneOfType","element"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,EAAP,MAAe,YAAf;AAEA,OAAO,aAAP;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAAA,MACXC,EADW,GACoDD,KADpD,CACXC,EADW;AAAA,MACPC,OADO,GACoDF,KADpD,CACPE,OADO;AAAA,MACEC,KADF,GACoDH,KADpD,CACEG,KADF;AAAA,MACSC,IADT,GACoDJ,KADpD,CACSI,IADT;AAAA,MACeC,KADf,GACoDL,KADpD,CACeK,KADf;AAAA,MACsBC,MADtB,GACoDN,KADpD,CACsBM,MADtB;AAAA,MAC8BC,QAD9B,GACoDP,KADpD,CAC8BO,QAD9B;AAAA,MAC2CC,IAD3C,4BACoDR,KADpD;;AAEnB,MAAMS,SAAS,qBACVD,IADU;AAEbE,IAAAA,SAAS,EAAEZ,EAAE,CAAC,QAAD,EAAWI,OAAX,kDACDC,KADC,GACSA,KADT,uCAEFC,IAFE,GAEOA,IAFP,yCAGAE,MAHA,GAGWA,MAHX,wCAIDD,KAJC,GAISA,KAJT;AAFA,IAAf;;AASA,SAAOT,KAAK,CAACe,aAAN,CAAoBV,EAApB,EAAwBQ,SAAxB,EAAmCF,QAAnC,CAAP;AACD;;AAEDR,IAAI,CAACa,YAAL,GAAoB;AAClBX,EAAAA,EAAE,EAAE,GADc;AAElBG,EAAAA,IAAI,EAAE,IAFY;AAGlBD,EAAAA,KAAK,EAAE,MAHW;AAIlBG,EAAAA,MAAM,EAAE,OAJU;AAKlBJ,EAAAA,OAAO,EAAE;AALS,CAApB;AAQAH,IAAI,CAACc,SAAL,GAAiB;AACfT,EAAAA,IAAI,EAAEP,SAAS,CAACiB,MADD;AAEfT,EAAAA,KAAK,EAAER,SAAS,CAACiB,MAFF;AAGfX,EAAAA,KAAK,EAAEN,SAAS,CAACiB,MAHF;AAIfR,EAAAA,MAAM,EAAET,SAAS,CAACiB,MAJH;AAKfP,EAAAA,QAAQ,EAAEV,SAAS,CAACkB,IALL;AAMfb,EAAAA,OAAO,EAAEL,SAAS,CAACiB,MANJ;AAOfb,EAAAA,EAAE,EAAEJ,SAAS,CAACmB,SAAV,CAAoB,CAACnB,SAAS,CAACiB,MAAX,EAAmBjB,SAAS,CAACoB,OAA7B,CAApB;AAPW,CAAjB;eAUelB,I;AAAf;;;;;;;;;;;;0BAhCSA,I","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport './text.scss';\n\nfunction Text(props) {\n  const { as, variant, color, size, align, weight, children, ...rest } = props;\n  const textProps = {\n    ...rest,\n    className: cx('c-text', variant, {\n      [`color-${color}`]: color,\n      [`size-${size}`]: size,\n      [`weight-${weight}`]: weight,\n      [`align-${align}`]: align\n    })\n  };\n  return React.createElement(as, textProps, children);\n}\n\nText.defaultProps = {\n  as: 'p',\n  size: 'rg',\n  color: 'grey',\n  weight: 'light',\n  variant: 'serif'\n};\n\nText.propTypes = {\n  size: PropTypes.string,\n  align: PropTypes.string,\n  color: PropTypes.string,\n  weight: PropTypes.string,\n  children: PropTypes.node,\n  variant: PropTypes.string,\n  as: PropTypes.oneOfType([PropTypes.string, PropTypes.element])\n};\n\nexport default Text;\n"]}]}