{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/react-hot-loader/babel.js\"],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.component.jsx","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.component.jsx","mtime":1548345115554},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/.babelrc","mtime":1548840716937},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types'; // leaflet import must be before map and layer-manager\n// eslint-disable-next-line\n\nimport L from 'leaflet';\nimport 'leaflet-utfgrid/L.UTFGrid-min';\nimport MapComponent, { MapControls, ZoomControl, MapPopup } from 'wri-api-components/dist/map';\nimport WRIIcons from 'wri-api-components/dist/icons';\nimport { Layer, LayerManager } from 'layer-manager/dist/components';\nimport { PluginLeaflet } from 'layer-manager';\nimport { BASEMAPS } from 'constants';\nimport UnitsTooltip from 'react-components/shared/units-tooltip/units-tooltip.component';\nimport SimpleModal from 'react-components/shared/simple-modal/simple-modal.component';\nimport LogisticsMapLegend from 'react-components/logistics-map/logistics-map-legend/logistics-map-legend.component';\nimport LogisticsMapPanel from 'react-components/logistics-map/logistics-map-panel/logistics-map-panel.container';\nimport LogisticsMapBar from 'react-components/logistics-map/logistics-map-bar/logistics-map-bar.container';\nimport LogisticsMapDownload from 'react-components/logistics-map/logistics-map-download/logistics-map-download.container';\nimport BRAZIL_COUNTRY from 'react-components/logistics-map/BRAZIL_COUNTRY.json';\nimport 'wri-api-components/dist/map.css';\nimport 'leaflet/dist/leaflet.css';\nimport 'scripts/react-components/logistics-map/logistics-map.scss';\n\nfunction LogisticsMap(props) {\n  var bounds = props.bounds,\n      layers = props.layers,\n      tooltips = props.tooltips,\n      mapPopUp = props.mapPopUp,\n      commodity = props.commodity,\n      openModal = props.openModal,\n      closeModal = props.closeModal,\n      activeModal = props.activeModal,\n      buildEvents = props.buildEvents,\n      activeLayers = props.activeLayers,\n      setLayerActive = props.setLayerActive,\n      getCurrentPopUp = props.getCurrentPopUp;\n\n  var Tooltip = function Tooltip(p) {\n    return React.createElement(UnitsTooltip, p.data);\n  };\n\n  var heading = commodity === 'soy' ? 'soy facilities' : 'slaughterhouses';\n  return React.createElement(\"div\", {\n    className: \"l-logistics-map\"\n  }, React.createElement(\"div\", {\n    className: \"c-logistics-map\"\n  }, React.createElement(WRIIcons, null), React.createElement(MapComponent, {\n    bounds: bounds,\n    basemap: BASEMAPS.default\n  }, function (map) {\n    return React.createElement(React.Fragment, null, React.createElement(MapControls, null, React.createElement(ZoomControl, {\n      map: map\n    })), React.createElement(LayerManager, {\n      map: map,\n      plugin: PluginLeaflet\n    }, activeLayers.map(function (layer) {\n      return React.createElement(Layer, _extends({\n        key: layer.id\n      }, layer, {\n        events: buildEvents(layer)\n      }));\n    }), React.createElement(Layer, LogisticsMap.BRAZIL_BORDER)), React.createElement(MapPopup, _extends({\n      map: map\n    }, mapPopUp, {\n      onReady: getCurrentPopUp\n    }), React.createElement(Tooltip, null)));\n  }), React.createElement(LogisticsMapLegend, {\n    layers: layers,\n    heading: heading,\n    tooltips: tooltips,\n    setLayerActive: setLayerActive\n  }), React.createElement(LogisticsMapBar, {\n    openModal: openModal\n  }), React.createElement(SimpleModal, {\n    isOpen: activeModal !== null,\n    onRequestClose: closeModal\n  }, activeModal === 'companies' && React.createElement(LogisticsMapPanel, {\n    close: closeModal\n  }), activeModal === 'download' && React.createElement(LogisticsMapDownload, {\n    close: closeModal\n  }))));\n}\n\nLogisticsMap.BRAZIL_BORDER = {\n  provider: 'leaflet',\n  layerConfig: {\n    type: 'geoJSON',\n    body: BRAZIL_COUNTRY,\n    options: {\n      style: {\n        weight: 1,\n        color: '#34444C',\n        opacity: 0.2,\n        fill: false\n      }\n    }\n  }\n};\nLogisticsMap.propTypes = {\n  layers: PropTypes.array,\n  openModal: PropTypes.func,\n  tooltips: PropTypes.object,\n  closeModal: PropTypes.func,\n  buildEvents: PropTypes.func,\n  commodity: PropTypes.string,\n  activeModal: PropTypes.string,\n  activeLayers: PropTypes.array\n};\nvar _default = LogisticsMap;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_extends, \"_extends\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.component.jsx\");\n  reactHotLoader.register(LogisticsMap, \"LogisticsMap\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.component.jsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.component.jsx\");\n  leaveModule(module);\n})();\n\n;\nLogisticsMap.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"LogisticsMap\",\n  \"props\": {\n    \"layers\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"openModal\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"tooltips\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"closeModal\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"buildEvents\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"commodity\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"activeModal\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"activeLayers\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.component.jsx"],"names":["bounds","layers","tooltips","mapPopUp","commodity","openModal","closeModal","activeModal","buildEvents","activeLayers","setLayerActive","getCurrentPopUp","props","Tooltip","p","heading","BASEMAPS","default","map","PluginLeaflet","layer","id","LogisticsMap","provider","layerConfig","type","body","options","style","weight","color","opacity","fill","PropTypes","array"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n// leaflet import must be before map and layer-manager\n// eslint-disable-next-line\nimport L from 'leaflet';\nimport 'leaflet-utfgrid/L.UTFGrid-min';\nimport MapComponent, { MapControls, ZoomControl, MapPopup } from 'wri-api-components/dist/map';\nimport WRIIcons from 'wri-api-components/dist/icons';\n\nimport { Layer, LayerManager } from 'layer-manager/dist/components';\nimport { PluginLeaflet } from 'layer-manager';\nimport { BASEMAPS } from 'constants';\nimport UnitsTooltip from 'react-components/shared/units-tooltip/units-tooltip.component';\nimport SimpleModal from 'react-components/shared/simple-modal/simple-modal.component';\nimport LogisticsMapLegend from 'react-components/logistics-map/logistics-map-legend/logistics-map-legend.component';\nimport LogisticsMapPanel from 'react-components/logistics-map/logistics-map-panel/logistics-map-panel.container';\nimport LogisticsMapBar from 'react-components/logistics-map/logistics-map-bar/logistics-map-bar.container';\nimport LogisticsMapDownload from 'react-components/logistics-map/logistics-map-download/logistics-map-download.container';\nimport BRAZIL_COUNTRY from 'react-components/logistics-map/BRAZIL_COUNTRY.json';\n\nimport 'wri-api-components/dist/map.css';\nimport 'leaflet/dist/leaflet.css';\nimport 'scripts/react-components/logistics-map/logistics-map.scss';\n\nfunction LogisticsMap(props) {\n  const {\n    bounds,\n    layers,\n    tooltips,\n    mapPopUp,\n    commodity,\n    openModal,\n    closeModal,\n    activeModal,\n    buildEvents,\n    activeLayers,\n    setLayerActive,\n    getCurrentPopUp\n  } = props;\n  const Tooltip = p => <UnitsTooltip {...p.data} />;\n  const heading = commodity === 'soy' ? 'soy facilities' : 'slaughterhouses';\n  return (\n    <div className=\"l-logistics-map\">\n      <div className=\"c-logistics-map\">\n        <WRIIcons />\n        <MapComponent bounds={bounds} basemap={BASEMAPS.default}>\n          {map => (\n            <>\n              <MapControls>\n                <ZoomControl map={map} />\n              </MapControls>\n              <LayerManager map={map} plugin={PluginLeaflet}>\n                {activeLayers.map(layer => (\n                  <Layer key={layer.id} {...layer} events={buildEvents(layer)} />\n                ))}\n                <Layer {...LogisticsMap.BRAZIL_BORDER} />\n              </LayerManager>\n              <MapPopup map={map} {...mapPopUp} onReady={getCurrentPopUp}>\n                <Tooltip />\n              </MapPopup>\n            </>\n          )}\n        </MapComponent>\n        <LogisticsMapLegend\n          layers={layers}\n          heading={heading}\n          tooltips={tooltips}\n          setLayerActive={setLayerActive}\n        />\n        <LogisticsMapBar openModal={openModal} />\n        <SimpleModal isOpen={activeModal !== null} onRequestClose={closeModal}>\n          {activeModal === 'companies' && <LogisticsMapPanel close={closeModal} />}\n          {activeModal === 'download' && <LogisticsMapDownload close={closeModal} />}\n        </SimpleModal>\n      </div>\n    </div>\n  );\n}\nLogisticsMap.BRAZIL_BORDER = {\n  provider: 'leaflet',\n  layerConfig: {\n    type: 'geoJSON',\n    body: BRAZIL_COUNTRY,\n    options: {\n      style: {\n        weight: 1,\n        color: '#34444C',\n        opacity: 0.2,\n        fill: false\n      }\n    }\n  }\n};\n\nLogisticsMap.propTypes = {\n  layers: PropTypes.array,\n  openModal: PropTypes.func,\n  tooltips: PropTypes.object,\n  closeModal: PropTypes.func,\n  buildEvents: PropTypes.func,\n  commodity: PropTypes.string,\n  activeModal: PropTypes.string,\n  activeLayers: PropTypes.array\n};\n\nexport default LogisticsMap;\n"]}]}