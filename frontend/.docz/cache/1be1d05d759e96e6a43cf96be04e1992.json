{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/react-hot-loader/babel.js\"],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/context-selector/context-selector.container.js","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/context-selector/context-selector.container.js","mtime":1548345115606},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/.babelrc","mtime":1548840716937},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport { connect } from 'react-redux';\nimport { toggleDropdown, selectContextById as _selectContextById } from 'actions/app.actions';\nimport ContextSelector from 'react-components/shared/context-selector/context-selector.component';\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  var selectedContext = ownProps.selectedContext,\n      _ownProps$selectConte = ownProps.selectContexts,\n      selectContexts = _ownProps$selectConte === void 0 ? function (i) {\n    return i;\n  } : _ownProps$selectConte;\n  var _state$app = state.app,\n      contexts = _state$app.contexts,\n      tooltips = _state$app.tooltips,\n      currentDropdown = _state$app.currentDropdown;\n  var selectorContexts = selectContexts(contexts || []);\n  var selectedContextCountry = selectedContext && selectedContext.countryName;\n  var selectedContextCommodity = selectedContext && selectedContext.commodityName;\n  var isContextSelected = !!selectedContextCountry && !!selectedContextCommodity;\n  var contextLabel = isContextSelected && \"\".concat(selectedContextCountry.toLowerCase(), \" - \").concat(selectedContextCommodity.toLowerCase());\n  return {\n    currentDropdown: currentDropdown,\n    isContextSelected: isContextSelected,\n    contexts: selectorContexts,\n    contextLabel: contextLabel || undefined,\n    tooltipText: tooltips && tooltips.sankey.nav.context.main\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    selectContextById: function selectContextById(selectedContextId) {\n      return dispatch(_selectContextById(selectedContextId));\n    },\n    toggleContextSelectorVisibility: function toggleContextSelectorVisibility(id) {\n      dispatch(toggleDropdown(id));\n    }\n  };\n};\n\nvar _default = connect(mapStateToProps, mapDispatchToProps)(ContextSelector);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/context-selector/context-selector.container.js\");\n  reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/context-selector/context-selector.container.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/context-selector/context-selector.container.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/context-selector/context-selector.container.js"],"names":["selectContextById","mapStateToProps","selectedContext","selectContexts","ownProps","contexts","tooltips","currentDropdown","state","selectorContexts","selectedContextCountry","selectedContextCommodity","isContextSelected","contextLabel","tooltipText","main","mapDispatchToProps","dispatch","toggleContextSelectorVisibility","toggleDropdown","connect"],"mappings":";;;;;;AAAA,SAAA,OAAA,QAAA,aAAA;AACA,SAAA,cAAA,EAAyBA,iBAAiB,IAA1C,kBAAA,QAAA,qBAAA;AACA,OAAA,eAAA,MAAA,qEAAA;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAA,KAAA,EAAA,QAAA,EAAqB;AAAA,MACnCC,eADmC,GACUE,QADV,CAAA,eAAA;AAAA,MAAA,qBAAA,GACUA,QADV,CAAA,cAAA;AAAA,MAClBD,cADkB,GAAA,qBAAA,KAAA,KAAA,CAAA,GACD,UAAA,CAAA,EAAC;AAAA,WAAA,CAAA;AADA,GAAA,GAAA,qBAAA;AAAA,MAAA,UAAA,GAEKK,KAAK,CAFV,GAAA;AAAA,MAEnCH,QAFmC,GAAA,UAAA,CAAA,QAAA;AAAA,MAEzBC,QAFyB,GAAA,UAAA,CAAA,QAAA;AAAA,MAEfC,eAFe,GAAA,UAAA,CAAA,eAAA;AAG3C,MAAME,gBAAgB,GAAGN,cAAc,CAACE,QAAQ,IAAhD,EAAuC,CAAvC;AAEA,MAAMK,sBAAsB,GAAGR,eAAe,IAAIA,eAAe,CAAjE,WAAA;AACA,MAAMS,wBAAwB,GAAGT,eAAe,IAAIA,eAAe,CAAnE,aAAA;AACA,MAAMU,iBAAiB,GAAG,CAAC,CAAD,sBAAA,IAA4B,CAAC,CAAvD,wBAAA;AACA,MAAMC,YAAY,GAChBD,iBAAiB,IAAA,GAAA,MAAA,CACdF,sBAAsB,CADR,WACdA,EADc,EAAA,KAAA,EAAA,MAAA,CAC4BC,wBAAwB,CAFvE,WAE+CA,EAD5B,CADnB;AAIA,SAAO;AACLJ,IAAAA,eAAe,EADV,eAAA;AAELK,IAAAA,iBAAiB,EAFZ,iBAAA;AAGLP,IAAAA,QAAQ,EAHH,gBAAA;AAILQ,IAAAA,YAAY,EAAEA,YAAY,IAJrB,SAAA;AAKLC,IAAAA,WAAW,EAAER,QAAQ,IAAIA,QAAQ,CAARA,MAAAA,CAAAA,GAAAA,CAAAA,OAAAA,CAA4BS;AALhD,GAAP;AAZF,CAAA;;AAqBA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAA,QAAA,EAAQ;AAAA,SAAK;AACtChB,IAAAA,iBAAiB,EAAE,SAAA,iBAAA,CAAA,iBAAA,EAAiB;AAAA,aAAIiB,QAAQ,CAACjB,kBAAiB,CAA9B,iBAA8B,CAAlB,CAAZ;AADE,KAAA;AAEtCkB,IAAAA,+BAA+B,EAAE,SAAA,+BAAA,CAAA,EAAA,EAAM;AACrCD,MAAAA,QAAQ,CAACE,cAAc,CAAvBF,EAAuB,CAAf,CAARA;AACD;AAJqC,GAAL;AAAnC,CAAA;;eAOeG,OAAO,CAAA,eAAA,EAAPA,kBAAO,CAAPA,CAAf,eAAeA,C;;AAAf;;;;;;;;;;;;0BA5BMnB,e;0BAqBAe,kB","sourcesContent":["import { connect } from 'react-redux';\nimport { toggleDropdown, selectContextById } from 'actions/app.actions';\nimport ContextSelector from 'react-components/shared/context-selector/context-selector.component';\n\nconst mapStateToProps = (state, ownProps) => {\n  const { selectedContext, selectContexts = i => i } = ownProps;\n  const { contexts, tooltips, currentDropdown } = state.app;\n  const selectorContexts = selectContexts(contexts || []);\n\n  const selectedContextCountry = selectedContext && selectedContext.countryName;\n  const selectedContextCommodity = selectedContext && selectedContext.commodityName;\n  const isContextSelected = !!selectedContextCountry && !!selectedContextCommodity;\n  const contextLabel =\n    isContextSelected &&\n    `${selectedContextCountry.toLowerCase()} - ${selectedContextCommodity.toLowerCase()}`;\n\n  return {\n    currentDropdown,\n    isContextSelected,\n    contexts: selectorContexts,\n    contextLabel: contextLabel || undefined,\n    tooltipText: tooltips && tooltips.sankey.nav.context.main\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  selectContextById: selectedContextId => dispatch(selectContextById(selectedContextId)),\n  toggleContextSelectorVisibility: id => {\n    dispatch(toggleDropdown(id));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ContextSelector);\n"]}]}