{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/react-hot-loader/babel.js\"],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.actions.js","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.actions.js","mtime":1548424841361},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/.babelrc","mtime":1548840716937},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { redirect } from 'redux-first-router';\nimport { defaultLayersIds } from 'react-components/logistics-map/logistics-map.selectors';\nexport var LOGISTICS_MAP__SET_COMPANIES = 'LOGISTICS_MAP__SET_COMPANIES';\nexport var LOGISTICS_MAP__SET_ACTIVE_MODAL = 'LOGISTICS_MAP__SET_ACTIVE_MODAL';\nexport var LOGISTICS_MAP__SET_COMPANY_SEARCH_TERM = 'LOGISTICS_MAP__SET_COMPANY_SEARCH_TERM';\nexport var updateQueryParams = function updateQueryParams(params) {\n  return function (dispatch, getState) {\n    var _getState$location$qu = getState().location.query,\n        query = _getState$location$qu === void 0 ? {} : _getState$location$qu;\n    return dispatch(redirect({\n      type: 'logisticsMap',\n      payload: {\n        query: _objectSpread({}, query, params)\n      }\n    }));\n  };\n};\nexport var selectLogisticsMapYear = function selectLogisticsMapYear(year) {\n  return updateQueryParams({\n    year: year\n  });\n};\nexport var selectLogisticsMapHub = function selectLogisticsMapHub(commodity) {\n  return updateQueryParams({\n    commodity: commodity,\n    layers: defaultLayersIds[commodity],\n    year: undefined,\n    inspection: undefined,\n    companies: undefined\n  });\n};\nexport var selectLogisticsMapInspectionLevel = function selectLogisticsMapInspectionLevel(inspection) {\n  return updateQueryParams({\n    inspection: inspection\n  });\n};\nexport var setLayerActive = function setLayerActive(layerId, active) {\n  return function (dispatch, getState) {\n    var _getState$location$qu2 = getState().location.query,\n        query = _getState$location$qu2 === void 0 ? {\n      commodity: 'soy'\n    } : _getState$location$qu2;\n    var _query$layers = query.layers,\n        layers = _query$layers === void 0 ? [] : _query$layers;\n    var newLayers;\n\n    if (active) {\n      newLayers = _toConsumableArray(layers).concat([layerId]);\n    } else {\n      var currentLayers = layers.length > 0 ? layers : defaultLayersIds[query.commodity];\n      newLayers = currentLayers.filter(function (l) {\n        return l !== layerId;\n      });\n    }\n\n    return dispatch(updateQueryParams({\n      layers: newLayers\n    }));\n  };\n};\nexport var getLogisticsMapCompanies = function getLogisticsMapCompanies() {\n  return function (dispatch, getState) {\n    var _getState = getState(),\n        logisticsMap = _getState.logisticsMap,\n        _getState$location$qu3 = _getState.location.query,\n        query = _getState$location$qu3 === void 0 ? {} : _getState$location$qu3;\n\n    var _query$commodity = query.commodity,\n        commodity = _query$commodity === void 0 ? 'soy' : _query$commodity;\n    var queries = {\n      soy: 'select distinct company from (SELECT company FROM brazil_crushing_facilities union all select company from brazil_storage_facilities_sample union all select company from brazil_refining_facilities) as companies order by company asc',\n      cattle: 'select distinct company FROM brazil_slaughterhouses_simple_2018_09_18 order by company asc'\n    };\n    var url = \"https://\".concat(CARTO_ACCOUNT, \".carto.com/api/v1/sql?q=\").concat(queries[commodity]);\n\n    if (!logisticsMap.companies[commodity]) {\n      fetch(url).then(function (res) {\n        return res.ok ? res.json() : Promise.reject(res.statusText);\n      }).then(function (data) {\n        return dispatch({\n          type: LOGISTICS_MAP__SET_COMPANIES,\n          payload: {\n            data: data,\n            commodity: commodity\n          }\n        });\n      }).catch(function (e) {\n        return console.error(e);\n      });\n    }\n  };\n};\nexport var setCompanyActive = function setCompanyActive(companyName, active) {\n  return function (dispatch, getState) {\n    var _getState$location$qu4 = getState().location.query,\n        query = _getState$location$qu4 === void 0 ? {} : _getState$location$qu4;\n    var _query$companies = query.companies,\n        companies = _query$companies === void 0 ? [] : _query$companies;\n    var newCompanies;\n\n    if (active) {\n      newCompanies = _toConsumableArray(companies).concat([companyName]);\n    } else {\n      newCompanies = companies.filter(function (l) {\n        return l !== companyName;\n      });\n    }\n\n    return dispatch(updateQueryParams({\n      companies: newCompanies\n    }));\n  };\n};\nexport var setCompanySearchTerm = function setCompanySearchTerm(term) {\n  return {\n    type: LOGISTICS_MAP__SET_COMPANY_SEARCH_TERM,\n    payload: term\n  };\n};\nexport var setLogisticsMapActiveModal = function setLogisticsMapActiveModal(modal) {\n  return {\n    type: LOGISTICS_MAP__SET_ACTIVE_MODAL,\n    payload: modal\n  };\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_toConsumableArray, \"_toConsumableArray\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.actions.js\");\n  reactHotLoader.register(_nonIterableSpread, \"_nonIterableSpread\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.actions.js\");\n  reactHotLoader.register(_iterableToArray, \"_iterableToArray\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.actions.js\");\n  reactHotLoader.register(_arrayWithoutHoles, \"_arrayWithoutHoles\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.actions.js\");\n  reactHotLoader.register(_objectSpread, \"_objectSpread\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.actions.js\");\n  reactHotLoader.register(_defineProperty, \"_defineProperty\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.actions.js\");\n  reactHotLoader.register(LOGISTICS_MAP__SET_COMPANIES, \"LOGISTICS_MAP__SET_COMPANIES\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.actions.js\");\n  reactHotLoader.register(LOGISTICS_MAP__SET_ACTIVE_MODAL, \"LOGISTICS_MAP__SET_ACTIVE_MODAL\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.actions.js\");\n  reactHotLoader.register(LOGISTICS_MAP__SET_COMPANY_SEARCH_TERM, \"LOGISTICS_MAP__SET_COMPANY_SEARCH_TERM\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.actions.js\");\n  reactHotLoader.register(updateQueryParams, \"updateQueryParams\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.actions.js\");\n  reactHotLoader.register(selectLogisticsMapYear, \"selectLogisticsMapYear\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.actions.js\");\n  reactHotLoader.register(selectLogisticsMapHub, \"selectLogisticsMapHub\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.actions.js\");\n  reactHotLoader.register(selectLogisticsMapInspectionLevel, \"selectLogisticsMapInspectionLevel\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.actions.js\");\n  reactHotLoader.register(setLayerActive, \"setLayerActive\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.actions.js\");\n  reactHotLoader.register(getLogisticsMapCompanies, \"getLogisticsMapCompanies\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.actions.js\");\n  reactHotLoader.register(setCompanyActive, \"setCompanyActive\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.actions.js\");\n  reactHotLoader.register(setCompanySearchTerm, \"setCompanySearchTerm\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.actions.js\");\n  reactHotLoader.register(setLogisticsMapActiveModal, \"setLogisticsMapActiveModal\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.actions.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.actions.js"],"names":["LOGISTICS_MAP__SET_COMPANIES","LOGISTICS_MAP__SET_ACTIVE_MODAL","LOGISTICS_MAP__SET_COMPANY_SEARCH_TERM","updateQueryParams","query","getState","dispatch","redirect","type","payload","selectLogisticsMapYear","year","selectLogisticsMapHub","commodity","layers","defaultLayersIds","inspection","companies","undefined","selectLogisticsMapInspectionLevel","setLayerActive","newLayers","currentLayers","l","getLogisticsMapCompanies","logisticsMap","queries","soy","cattle","url","fetch","res","Promise","data","console","setCompanyActive","newCompanies","setCompanySearchTerm","term","setLogisticsMapActiveModal","modal"],"mappings":"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","sourcesContent":["import { redirect } from 'redux-first-router';\nimport { defaultLayersIds } from 'react-components/logistics-map/logistics-map.selectors';\n\nexport const LOGISTICS_MAP__SET_COMPANIES = 'LOGISTICS_MAP__SET_COMPANIES';\nexport const LOGISTICS_MAP__SET_ACTIVE_MODAL = 'LOGISTICS_MAP__SET_ACTIVE_MODAL';\nexport const LOGISTICS_MAP__SET_COMPANY_SEARCH_TERM = 'LOGISTICS_MAP__SET_COMPANY_SEARCH_TERM';\n\nexport const updateQueryParams = params => (dispatch, getState) => {\n  const { query = {} } = getState().location;\n  return dispatch(\n    redirect({\n      type: 'logisticsMap',\n      payload: { query: { ...query, ...params } }\n    })\n  );\n};\n\nexport const selectLogisticsMapYear = year => updateQueryParams({ year });\nexport const selectLogisticsMapHub = commodity =>\n  updateQueryParams({\n    commodity,\n    layers: defaultLayersIds[commodity],\n    year: undefined,\n    inspection: undefined,\n    companies: undefined\n  });\nexport const selectLogisticsMapInspectionLevel = inspection => updateQueryParams({ inspection });\n\nexport const setLayerActive = (layerId, active) => (dispatch, getState) => {\n  const { query = { commodity: 'soy' } } = getState().location;\n  const { layers = [] } = query;\n  let newLayers;\n\n  if (active) {\n    newLayers = [...layers, layerId];\n  } else {\n    const currentLayers = layers.length > 0 ? layers : defaultLayersIds[query.commodity];\n    newLayers = currentLayers.filter(l => l !== layerId);\n  }\n  return dispatch(updateQueryParams({ layers: newLayers }));\n};\n\nexport const getLogisticsMapCompanies = () => (dispatch, getState) => {\n  const {\n    logisticsMap,\n    location: { query = {} }\n  } = getState();\n\n  const { commodity = 'soy' } = query;\n\n  const queries = {\n    soy:\n      'select distinct company from (SELECT company FROM brazil_crushing_facilities union all select company from brazil_storage_facilities_sample union all select company from brazil_refining_facilities) as companies order by company asc',\n    cattle:\n      'select distinct company FROM brazil_slaughterhouses_simple_2018_09_18 order by company asc'\n  };\n  const url = `https://${CARTO_ACCOUNT}.carto.com/api/v1/sql?q=${queries[commodity]}`;\n\n  if (!logisticsMap.companies[commodity]) {\n    fetch(url)\n      .then(res => (res.ok ? res.json() : Promise.reject(res.statusText)))\n      .then(data =>\n        dispatch({\n          type: LOGISTICS_MAP__SET_COMPANIES,\n          payload: { data, commodity }\n        })\n      )\n      .catch(e => console.error(e));\n  }\n};\n\nexport const setCompanyActive = (companyName, active) => (dispatch, getState) => {\n  const { query = {} } = getState().location;\n  const { companies = [] } = query;\n  let newCompanies;\n\n  if (active) {\n    newCompanies = [...companies, companyName];\n  } else {\n    newCompanies = companies.filter(l => l !== companyName);\n  }\n  return dispatch(updateQueryParams({ companies: newCompanies }));\n};\n\nexport const setCompanySearchTerm = term => ({\n  type: LOGISTICS_MAP__SET_COMPANY_SEARCH_TERM,\n  payload: term\n});\n\nexport const setLogisticsMapActiveModal = modal => ({\n  type: LOGISTICS_MAP__SET_ACTIVE_MODAL,\n  payload: modal\n});\n"]}]}