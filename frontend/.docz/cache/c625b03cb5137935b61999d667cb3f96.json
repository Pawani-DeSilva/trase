{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/react-hot-loader/babel.js\"],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/toggle/toggle.component.jsx","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/toggle/toggle.component.jsx","mtime":1548345115631},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/.babelrc","mtime":1548840716937},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './toggle.scss';\n\nfunction Toggle(props) {\n  var useColor = props.color && props.checked || undefined;\n  return React.createElement(\"input\", {\n    id: props.id,\n    className: \"c-toggle\",\n    type: \"checkbox\",\n    checked: props.checked,\n    onChange: props.onChange,\n    style: useColor && {\n      backgroundColor: props.color\n    }\n  });\n}\n\nToggle.propTypes = {\n  id: PropTypes.string,\n  color: PropTypes.string,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func\n};\nvar _default = Toggle;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Toggle, \"Toggle\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/toggle/toggle.component.jsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/toggle/toggle.component.jsx\");\n  leaveModule(module);\n})();\n\n;\nToggle.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Toggle\",\n  \"props\": {\n    \"id\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"color\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"checked\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/toggle/toggle.component.jsx"],"names":["useColor","props","backgroundColor","color","Toggle","id","PropTypes","checked","onChange","func"],"mappings":";;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AAEA,OAAA,eAAA;;AAEA,SAAA,MAAA,CAAA,KAAA,EAAuB;AACrB,MAAMA,QAAQ,GAAIC,KAAK,CAALA,KAAAA,IAAeA,KAAK,CAArB,OAACA,IAAlB,SAAA;AACA,SACE,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AACE,IAAA,EAAE,EAAEA,KAAK,CADX,EAAA;AAEE,IAAA,SAAS,EAFX,UAAA;AAGE,IAAA,IAAI,EAHN,UAAA;AAIE,IAAA,OAAO,EAAEA,KAAK,CAJhB,OAAA;AAKE,IAAA,QAAQ,EAAEA,KAAK,CALjB,QAAA;AAME,IAAA,KAAK,EAAED,QAAQ,IAAI;AAAEE,MAAAA,eAAe,EAAED,KAAK,CAACE;AAAzB;AANrB,GAAA,CADF;AAUD;;AAEDC,MAAM,CAANA,SAAAA,GAAmB;AACjBC,EAAAA,EAAE,EAAEC,SAAS,CADI,MAAA;AAEjBH,EAAAA,KAAK,EAAEG,SAAS,CAFC,MAAA;AAGjBC,EAAAA,OAAO,EAAED,SAAS,CAHD,IAAA;AAIjBE,EAAAA,QAAQ,EAAEF,SAAS,CAACG;AAJH,CAAnBL;eAOA,M;AAAA;;;;;;;;;;;;0BArBA,M","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './toggle.scss';\n\nfunction Toggle(props) {\n  const useColor = (props.color && props.checked) || undefined;\n  return (\n    <input\n      id={props.id}\n      className=\"c-toggle\"\n      type=\"checkbox\"\n      checked={props.checked}\n      onChange={props.onChange}\n      style={useColor && { backgroundColor: props.color }}\n    />\n  );\n}\n\nToggle.propTypes = {\n  id: PropTypes.string,\n  color: PropTypes.string,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func\n};\n\nexport default Toggle;\n"]}]}