{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/react-hot-loader/babel.js\"],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/sentence-selector/sentence-selector.selectors.js","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/sentence-selector/sentence-selector.selectors.js","mtime":1548345115624},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/.babelrc","mtime":1548840716937},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { createSelector } from 'reselect';\nimport sortBy from 'lodash/sortBy';\n\nvar getSelectedContext = function getSelectedContext(state) {\n  return state.app.selectedContext;\n};\n\nvar getContexts = function getContexts(state) {\n  return state.app.contexts;\n};\n\nexport var getSelectedCommodityPairs = createSelector([getSelectedContext, getContexts], function (selectedContext, contexts) {\n  return contexts.reduce(function (acc, next) {\n    return _objectSpread({}, acc, _defineProperty({}, next.commodityName, _toConsumableArray(acc[next.commodityName] || []).concat([next.countryName])));\n  }, {});\n});\nexport var getSelectedCountryPairs = createSelector([getSelectedContext, getContexts], function (selectedContext, contexts) {\n  return contexts.reduce(function (acc, next) {\n    return _objectSpread({}, acc, _defineProperty({}, next.countryName, _toConsumableArray(acc[next.countryName] || []).concat([next.commodityName])));\n  }, {});\n});\nexport var getSortedContexts = createSelector(getContexts, function (contexts) {\n  return sortBy(contexts, ['commodityName', 'countryName']);\n});\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_toConsumableArray, \"_toConsumableArray\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/sentence-selector/sentence-selector.selectors.js\");\n  reactHotLoader.register(_nonIterableSpread, \"_nonIterableSpread\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/sentence-selector/sentence-selector.selectors.js\");\n  reactHotLoader.register(_iterableToArray, \"_iterableToArray\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/sentence-selector/sentence-selector.selectors.js\");\n  reactHotLoader.register(_arrayWithoutHoles, \"_arrayWithoutHoles\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/sentence-selector/sentence-selector.selectors.js\");\n  reactHotLoader.register(_objectSpread, \"_objectSpread\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/sentence-selector/sentence-selector.selectors.js\");\n  reactHotLoader.register(_defineProperty, \"_defineProperty\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/sentence-selector/sentence-selector.selectors.js\");\n  reactHotLoader.register(getSelectedContext, \"getSelectedContext\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/sentence-selector/sentence-selector.selectors.js\");\n  reactHotLoader.register(getContexts, \"getContexts\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/sentence-selector/sentence-selector.selectors.js\");\n  reactHotLoader.register(getSelectedCommodityPairs, \"getSelectedCommodityPairs\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/sentence-selector/sentence-selector.selectors.js\");\n  reactHotLoader.register(getSelectedCountryPairs, \"getSelectedCountryPairs\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/sentence-selector/sentence-selector.selectors.js\");\n  reactHotLoader.register(getSortedContexts, \"getSortedContexts\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/sentence-selector/sentence-selector.selectors.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/sentence-selector/sentence-selector.selectors.js"],"names":["getSelectedContext","state","getContexts","getSelectedCommodityPairs","createSelector","next","acc","getSelectedCountryPairs","getSortedContexts","sortBy"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAA,cAAA,QAAA,UAAA;AACA,OAAA,MAAA,MAAA,eAAA;;AAEA,IAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,CAAA,KAAA,EAAK;AAAA,SAAIC,KAAK,CAALA,GAAAA,CAAJ,eAAA;AAAhC,CAAA;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAA,KAAA,EAAK;AAAA,SAAID,KAAK,CAALA,GAAAA,CAAJ,QAAA;AAAzB,CAAA;;AAEA,OAAO,IAAME,yBAAyB,GAAGC,cAAc,CACrD,CAAA,kBAAA,EADqD,WACrD,CADqD,EAErD,UAAA,eAAA,EAAA,QAAA,EAAA;AAAA,SACE,QAAQ,CAAR,MAAA,CACE,UAAA,GAAA,EAAA,IAAA,EAAA;AAAA,WAAA,aAAA,CAAA,EAAA,EAAA,GAAA,EAAA,eAAA,CAAA,EAAA,EAEGC,IAAI,CAFP,aAAA,EAAA,kBAAA,CAE6BC,GAAG,CAACD,IAAI,CAARC,aAAG,CAAHA,IAF7B,EAAA,CAAA,CAAA,MAAA,CAAA,CAE6DD,IAAI,CAFjE,WAAA,CAAA,CAAA,CAAA,CAAA;AADF,GAAA,EADF,EACE,CADF;AAFK,CAAgD,CAAhD;AAYP,OAAO,IAAME,uBAAuB,GAAGH,cAAc,CACnD,CAAA,kBAAA,EADmD,WACnD,CADmD,EAEnD,UAAA,eAAA,EAAA,QAAA,EAAA;AAAA,SACE,QAAQ,CAAR,MAAA,CACE,UAAA,GAAA,EAAA,IAAA,EAAA;AAAA,WAAA,aAAA,CAAA,EAAA,EAAA,GAAA,EAAA,eAAA,CAAA,EAAA,EAEGC,IAAI,CAFP,WAAA,EAAA,kBAAA,CAE2BC,GAAG,CAACD,IAAI,CAARC,WAAG,CAAHA,IAF3B,EAAA,CAAA,CAAA,MAAA,CAAA,CAEyDD,IAAI,CAF7D,aAAA,CAAA,CAAA,CAAA,CAAA;AADF,GAAA,EADF,EACE,CADF;AAFK,CAA8C,CAA9C;AAYP,OAAO,IAAMG,iBAAiB,GAAGJ,cAAc,CAAA,WAAA,EAE7C,UAAA,QAAA,EAAQ;AAAA,SAAIK,MAAM,CAAA,QAAA,EAAW,CAAA,eAAA,EAArB,aAAqB,CAAX,CAAV;AAFH,CAAwC,CAAxC;;;;;;;;;;;;;;;;;;0BA3BDT,kB;0BACAE,W;0BAEOC,yB;0BAYAI,uB;0BAYAC,iB","sourcesContent":["import { createSelector } from 'reselect';\nimport sortBy from 'lodash/sortBy';\n\nconst getSelectedContext = state => state.app.selectedContext;\nconst getContexts = state => state.app.contexts;\n\nexport const getSelectedCommodityPairs = createSelector(\n  [getSelectedContext, getContexts],\n  (selectedContext, contexts) =>\n    contexts.reduce(\n      (acc, next) => ({\n        ...acc,\n        [next.commodityName]: [...(acc[next.commodityName] || []), next.countryName]\n      }),\n      {}\n    )\n);\n\nexport const getSelectedCountryPairs = createSelector(\n  [getSelectedContext, getContexts],\n  (selectedContext, contexts) =>\n    contexts.reduce(\n      (acc, next) => ({\n        ...acc,\n        [next.countryName]: [...(acc[next.countryName] || []), next.commodityName]\n      }),\n      {}\n    )\n);\n\nexport const getSortedContexts = createSelector(\n  getContexts,\n  contexts => sortBy(contexts, ['commodityName', 'countryName'])\n);\n"]}]}