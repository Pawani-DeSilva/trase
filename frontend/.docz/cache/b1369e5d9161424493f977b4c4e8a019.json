{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/react-hot-loader/babel.js\"],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/actions/helpers/setGeoJSONMeta.js","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/actions/helpers/setGeoJSONMeta.js","mtime":1543486759486},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/.babelrc","mtime":1548840716937},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nvar _default = function _default(geoJSON, nodesDict, geoIdsDict, columnId) {\n  geoJSON.features.forEach(function (feature) {\n    if (feature.properties.GEO_ID !== undefined) {\n      feature.properties.geoid = feature.properties.GEO_ID;\n    }\n\n    var geoId = feature.properties.geoid;\n    var nodeId = geoIdsDict[\"\".concat(columnId, \"-\").concat(geoId)];\n    var node = nodesDict[nodeId];\n\n    if (node) {\n      feature.properties.hasFlows = node.hasFlows;\n    }\n  });\n  return geoJSON;\n};\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_default, \"default\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/actions/helpers/setGeoJSONMeta.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/actions/helpers/setGeoJSONMeta.js"],"names":["geoJSON","feature","geoId","nodeId","geoIdsDict","node","nodesDict"],"mappings":";;;;;;eAAe,kBAAA,OAAA,EAAA,SAAA,EAAA,UAAA,EAAA,QAAA,EAA8C;AAC3DA,EAAAA,OAAO,CAAPA,QAAAA,CAAAA,OAAAA,CAAyB,UAAA,OAAA,EAAW;AAClC,QAAIC,OAAO,CAAPA,UAAAA,CAAAA,MAAAA,KAAJ,SAAA,EAA6C;AAC3CA,MAAAA,OAAO,CAAPA,UAAAA,CAAAA,KAAAA,GAA2BA,OAAO,CAAPA,UAAAA,CAA3BA,MAAAA;AACD;;AACD,QAAMC,KAAK,GAAGD,OAAO,CAAPA,UAAAA,CAAd,KAAA;AACA,QAAME,MAAM,GAAGC,UAAU,CAAA,GAAA,MAAA,CAAA,QAAA,EAAA,GAAA,EAAA,MAAA,CAAzB,KAAyB,CAAA,CAAzB;AACA,QAAMC,IAAI,GAAGC,SAAS,CAAtB,MAAsB,CAAtB;;AACA,QAAA,IAAA,EAAU;AACRL,MAAAA,OAAO,CAAPA,UAAAA,CAAAA,QAAAA,GAA8BI,IAAI,CAAlCJ,QAAAA;AACD;AATHD,GAAAA;AAWA,SAAA,OAAA;AAZF,C;;AAAA","sourcesContent":["export default (geoJSON, nodesDict, geoIdsDict, columnId) => {\n  geoJSON.features.forEach(feature => {\n    if (feature.properties.GEO_ID !== undefined) {\n      feature.properties.geoid = feature.properties.GEO_ID;\n    }\n    const geoId = feature.properties.geoid;\n    const nodeId = geoIdsDict[`${columnId}-${geoId}`];\n    const node = nodesDict[nodeId];\n    if (node) {\n      feature.properties.hasFlows = node.hasFlows;\n    }\n  });\n  return geoJSON;\n};\n"]}]}