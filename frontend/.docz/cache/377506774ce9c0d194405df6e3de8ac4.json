{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/react-hot-loader/babel.js\"],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.reducer.js","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.reducer.js","mtime":1548345421632},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/.babelrc","mtime":1548840716937},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nvar _dashboardElementRedu;\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport createReducer from 'utils/createReducer';\nimport { DASHBOARD_ELEMENT__SET_PANEL_DATA, DASHBOARD_ELEMENT__SET_ACTIVE_TAB, DASHBOARD_ELEMENT__SET_ACTIVE_ITEM, DASHBOARD_ELEMENT__CLEAR_PANEL, DASHBOARD_ELEMENT__ADD_ACTIVE_INDICATOR, DASHBOARD_ELEMENT__REMOVE_ACTIVE_INDICATOR, DASHBOARD_ELEMENT__SET_ACTIVE_PANEL, DASHBOARD_ELEMENT__SET_PANEL_TABS, DASHBOARD_ELEMENT__SET_PANEL_PAGE, DASHBOARD_ELEMENT__SET_LOADING_ITEMS, DASHBOARD_ELEMENT__SET_MORE_PANEL_DATA, DASHBOARD_ELEMENT__SET_SEARCH_RESULTS, DASHBOARD_ELEMENT__SET_ACTIVE_ITEM_WITH_SEARCH } from './dashboard-element.actions';\nvar initialState = {\n  loading: false,\n  data: {\n    indicators: [],\n    countries: [],\n    companies: {},\n    sources: {},\n    destinations: [],\n    commodities: []\n  },\n  meta: {},\n  tabs: {},\n  activePanelId: null,\n  activeIndicatorsList: [],\n  countriesPanel: {\n    page: 1,\n    searchResults: [],\n    loadingItems: false,\n    activeItem: null,\n    activeTab: null\n  },\n  sourcesPanel: {\n    page: 1,\n    searchResults: [],\n    loadingItems: false,\n    activeItem: null,\n    activeTab: null\n  },\n  destinationsPanel: {\n    page: 1,\n    searchResults: [],\n    loadingItems: false,\n    activeItem: null,\n    activeTab: null\n  },\n  companiesPanel: {\n    page: 1,\n    searchResults: [],\n    loadingItems: false,\n    activeItem: null,\n    activeTab: null\n  },\n  commoditiesPanel: {\n    page: 1,\n    searchResults: [],\n    loadingItems: false,\n    activeItem: null,\n    activeTab: null\n  }\n};\nvar dashboardElementReducer = (_dashboardElementRedu = {}, _defineProperty(_dashboardElementRedu, DASHBOARD_ELEMENT__SET_ACTIVE_PANEL, function (state, action) {\n  var activePanelId = action.payload.activePanelId;\n  var prevActivePanelId = state.activePanelId;\n  var prevPanelName = \"\".concat(prevActivePanelId, \"Panel\");\n  var prevPanelState = prevActivePanelId ? _objectSpread({}, state[prevPanelName], {\n    page: initialState[prevPanelName].page\n  }) : undefined;\n  return _objectSpread({}, state, _defineProperty({\n    activePanelId: activePanelId\n  }, prevPanelName, prevPanelState));\n}), _defineProperty(_dashboardElementRedu, DASHBOARD_ELEMENT__SET_PANEL_PAGE, function (state, action) {\n  var activePanelId = state.activePanelId;\n  var panelName = \"\".concat(activePanelId, \"Panel\");\n  var page = action.payload.page;\n  return _objectSpread({}, state, _defineProperty({}, panelName, _objectSpread({}, state[panelName], {\n    page: page\n  })));\n}), _defineProperty(_dashboardElementRedu, DASHBOARD_ELEMENT__SET_PANEL_DATA, function (state, action) {\n  var _action$payload = action.payload,\n      key = _action$payload.key,\n      data = _action$payload.data,\n      meta = _action$payload.meta,\n      tab = _action$payload.tab,\n      loading = _action$payload.loading;\n  var initialData = initialState.data[key];\n  var newData;\n\n  if (Array.isArray(initialData)) {\n    newData = data || initialData;\n  } else {\n    newData = tab ? _objectSpread({}, state.data[key], _defineProperty({}, tab, data)) : initialData;\n  }\n\n  return _objectSpread({}, state, {\n    loading: loading,\n    data: _objectSpread({}, state.data, _defineProperty({}, key, newData)),\n    meta: _objectSpread({}, state.meta, _defineProperty({}, key, meta))\n  });\n}), _defineProperty(_dashboardElementRedu, DASHBOARD_ELEMENT__SET_MORE_PANEL_DATA, function (state, action) {\n  var _action$payload2 = action.payload,\n      key = _action$payload2.key,\n      data = _action$payload2.data,\n      tab = _action$payload2.tab,\n      direction = _action$payload2.direction;\n  var oldData = tab ? state.data[key][tab] : state.data[key];\n  var together;\n\n  if (direction === 'backwards') {\n    together = _toConsumableArray(data).concat(_toConsumableArray(oldData));\n  } else if (direction === 'forwards') {\n    together = _toConsumableArray(oldData).concat(_toConsumableArray(data));\n  }\n\n  var newData = tab ? _objectSpread({}, state.data[key], _defineProperty({}, tab, together)) : together;\n  return _objectSpread({}, state, {\n    data: _objectSpread({}, state.data, _defineProperty({}, key, newData))\n  });\n}), _defineProperty(_dashboardElementRedu, DASHBOARD_ELEMENT__SET_LOADING_ITEMS, function (state, action) {\n  var loadingItems = action.payload.loadingItems;\n  var panelName = \"\".concat(state.activePanelId, \"Panel\");\n  return _objectSpread({}, state, _defineProperty({}, panelName, _objectSpread({}, state[panelName], {\n    loadingItems: loadingItems\n  })));\n}), _defineProperty(_dashboardElementRedu, DASHBOARD_ELEMENT__SET_PANEL_TABS, function (state, action) {\n  var data = action.payload.data;\n\n  var getSection = function getSection(n) {\n    return n.section && n.section.toLowerCase();\n  };\n\n  var tabs = data.reduce(function (acc, next) {\n    return _objectSpread({}, acc, _defineProperty({}, getSection(next), next.tabs));\n  }, {});\n  var panelName = \"\".concat(state.activePanelId, \"Panel\");\n  var firstTab = tabs[state.activePanelId] && tabs[state.activePanelId][0];\n  return _objectSpread({}, state, _defineProperty({\n    tabs: tabs\n  }, panelName, _objectSpread({}, state[panelName], {\n    activeTab: state[panelName].activeTab || firstTab,\n    page: initialState[panelName].page\n  })));\n}), _defineProperty(_dashboardElementRedu, DASHBOARD_ELEMENT__SET_ACTIVE_ITEM, function (state, action) {\n  var _action$payload3 = action.payload,\n      panel = _action$payload3.panel,\n      activeItem = _action$payload3.activeItem;\n  var panelName = \"\".concat(panel, \"Panel\");\n  var sourcesPanelState = panel === 'countries' ? initialState.sourcesPanel : state.sourcesPanel;\n  return _objectSpread({}, state, _defineProperty({\n    activeIndicatorsList: [],\n    sourcesPanel: sourcesPanelState\n  }, panelName, _objectSpread({}, state[panelName], {\n    activeItem: activeItem\n  })));\n}), _defineProperty(_dashboardElementRedu, DASHBOARD_ELEMENT__SET_ACTIVE_TAB, function (state, action) {\n  var _action$payload4 = action.payload,\n      panel = _action$payload4.panel,\n      activeTab = _action$payload4.activeTab;\n  var panelName = \"\".concat(panel, \"Panel\");\n  return _objectSpread({}, state, _defineProperty({\n    activeIndicatorsList: []\n  }, panelName, _objectSpread({}, state[panelName], {\n    activeTab: activeTab,\n    page: initialState[panelName].page\n  })));\n}), _defineProperty(_dashboardElementRedu, DASHBOARD_ELEMENT__SET_ACTIVE_ITEM_WITH_SEARCH, function (state, action) {\n  var _action$payload5 = action.payload,\n      panel = _action$payload5.panel,\n      activeItem = _action$payload5.activeItem;\n  var panelName = \"\".concat(panel, \"Panel\");\n  var activeTab = state.tabs[panel].find(function (tab) {\n    return tab.id === activeItem.nodeTypeId;\n  });\n  return _objectSpread({}, state, _defineProperty({\n    activeIndicatorsList: []\n  }, panelName, _objectSpread({}, state[panelName], {\n    activeItem: activeItem,\n    activeTab: activeTab\n  })));\n}), _defineProperty(_dashboardElementRedu, DASHBOARD_ELEMENT__CLEAR_PANEL, function (state, action) {\n  var _objectSpread15;\n\n  var panel = action.payload.panel;\n  var panelName = \"\".concat(panel, \"Panel\");\n  var activeTab = state[panelName].activeTab;\n  var shouldResetCountries = ['countries', 'sources'].includes(panel);\n  var countriesState = shouldResetCountries ? initialState.countriesPanel : state.countriesPanel;\n  return _objectSpread({}, state, (_objectSpread15 = {}, _defineProperty(_objectSpread15, panelName, _objectSpread({}, initialState[panelName], {\n    activeTab: activeTab\n  })), _defineProperty(_objectSpread15, \"countriesPanel\", countriesState), _objectSpread15));\n}), _defineProperty(_dashboardElementRedu, DASHBOARD_ELEMENT__ADD_ACTIVE_INDICATOR, function (state, action) {\n  var active = action.payload.active;\n  return _objectSpread({}, state, {\n    activeIndicatorsList: _toConsumableArray(state.activeIndicatorsList).concat([active.id])\n  });\n}), _defineProperty(_dashboardElementRedu, DASHBOARD_ELEMENT__REMOVE_ACTIVE_INDICATOR, function (state, action) {\n  var toRemove = action.payload.toRemove;\n  return _objectSpread({}, state, {\n    activeIndicatorsList: state.activeIndicatorsList.filter(function (item) {\n      return item !== toRemove.id;\n    })\n  });\n}), _defineProperty(_dashboardElementRedu, DASHBOARD_ELEMENT__SET_SEARCH_RESULTS, function (state, action) {\n  var data = action.payload.data;\n  var panel = state.activePanelId;\n\n  if (state.activePanelId === 'sources' && state.countriesPanel.activeItem === null) {\n    panel = 'countries';\n  }\n\n  var panelName = \"\".concat(panel, \"Panel\");\n  return _objectSpread({}, state, _defineProperty({}, panelName, _objectSpread({}, state[panelName], {\n    searchResults: data\n  })));\n}), _dashboardElementRedu);\n\nvar dashboardElementReducerTypes = function dashboardElementReducerTypes(PropTypes) {\n  var PanelTypes = {\n    page: PropTypes.number,\n    searchResults: PropTypes.array,\n    loadingItems: PropTypes.bool,\n    activeItem: PropTypes.number,\n    activeTab: PropTypes.number\n  };\n  return {\n    meta: PropTypes.object.isRequired,\n    tabs: PropTypes.object.isRequired,\n    activePanelId: PropTypes.string,\n    activeIndicatorsList: PropTypes.array.isRequired,\n    data: PropTypes.shape({\n      indicators: PropTypes.array.isRequired,\n      countries: PropTypes.array.isRequired,\n      companies: PropTypes.object.isRequired,\n      sources: PropTypes.object.isRequired,\n      destinations: PropTypes.array.isRequired\n    }).isRequired,\n    countriesPanel: PropTypes.shape(PanelTypes).isRequired,\n    sourcesPanel: PropTypes.shape(PanelTypes).isRequired,\n    destinationsPanel: PropTypes.shape(PanelTypes).isRequired,\n    companiesPanel: PropTypes.shape(PanelTypes).isRequired,\n    commoditiesPanel: PropTypes.shape(PanelTypes).isRequired\n  };\n};\n\nexport { initialState };\n\nvar _default = createReducer(initialState, dashboardElementReducer, dashboardElementReducerTypes);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_dashboardElementRedu, \"_dashboardElementRedu\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.reducer.js\");\n  reactHotLoader.register(_toConsumableArray, \"_toConsumableArray\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.reducer.js\");\n  reactHotLoader.register(_nonIterableSpread, \"_nonIterableSpread\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.reducer.js\");\n  reactHotLoader.register(_iterableToArray, \"_iterableToArray\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.reducer.js\");\n  reactHotLoader.register(_arrayWithoutHoles, \"_arrayWithoutHoles\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.reducer.js\");\n  reactHotLoader.register(_objectSpread, \"_objectSpread\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.reducer.js\");\n  reactHotLoader.register(_defineProperty, \"_defineProperty\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.reducer.js\");\n  reactHotLoader.register(initialState, \"initialState\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.reducer.js\");\n  reactHotLoader.register(dashboardElementReducer, \"dashboardElementReducer\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.reducer.js\");\n  reactHotLoader.register(dashboardElementReducerTypes, \"dashboardElementReducerTypes\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.reducer.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.reducer.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.reducer.js"],"names":["initialState","loading","data","indicators","countries","companies","sources","destinations","commodities","meta","tabs","activePanelId","activeIndicatorsList","countriesPanel","page","searchResults","loadingItems","activeItem","activeTab","sourcesPanel","destinationsPanel","companiesPanel","commoditiesPanel","dashboardElementReducer","action","prevActivePanelId","state","prevPanelName","prevPanelState","panelName","key","tab","initialData","Array","newData","direction","oldData","together","getSection","n","next","firstTab","panel","sourcesPanelState","shouldResetCountries","countriesState","active","toRemove","item","dashboardElementReducerTypes","PanelTypes","PropTypes","number","isRequired","createReducer"],"mappings":"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","sourcesContent":["import createReducer from 'utils/createReducer';\nimport {\n  DASHBOARD_ELEMENT__SET_PANEL_DATA,\n  DASHBOARD_ELEMENT__SET_ACTIVE_TAB,\n  DASHBOARD_ELEMENT__SET_ACTIVE_ITEM,\n  DASHBOARD_ELEMENT__CLEAR_PANEL,\n  DASHBOARD_ELEMENT__ADD_ACTIVE_INDICATOR,\n  DASHBOARD_ELEMENT__REMOVE_ACTIVE_INDICATOR,\n  DASHBOARD_ELEMENT__SET_ACTIVE_PANEL,\n  DASHBOARD_ELEMENT__SET_PANEL_TABS,\n  DASHBOARD_ELEMENT__SET_PANEL_PAGE,\n  DASHBOARD_ELEMENT__SET_LOADING_ITEMS,\n  DASHBOARD_ELEMENT__SET_MORE_PANEL_DATA,\n  DASHBOARD_ELEMENT__SET_SEARCH_RESULTS,\n  DASHBOARD_ELEMENT__SET_ACTIVE_ITEM_WITH_SEARCH\n} from './dashboard-element.actions';\n\nconst initialState = {\n  loading: false,\n  data: {\n    indicators: [],\n    countries: [],\n    companies: {},\n    sources: {},\n    destinations: [],\n    commodities: []\n  },\n  meta: {},\n  tabs: {},\n  activePanelId: null,\n  activeIndicatorsList: [],\n  countriesPanel: {\n    page: 1,\n    searchResults: [],\n    loadingItems: false,\n    activeItem: null,\n    activeTab: null\n  },\n  sourcesPanel: {\n    page: 1,\n    searchResults: [],\n    loadingItems: false,\n    activeItem: null,\n    activeTab: null\n  },\n  destinationsPanel: {\n    page: 1,\n    searchResults: [],\n    loadingItems: false,\n    activeItem: null,\n    activeTab: null\n  },\n  companiesPanel: {\n    page: 1,\n    searchResults: [],\n    loadingItems: false,\n    activeItem: null,\n    activeTab: null\n  },\n  commoditiesPanel: {\n    page: 1,\n    searchResults: [],\n    loadingItems: false,\n    activeItem: null,\n    activeTab: null\n  }\n};\n\nconst dashboardElementReducer = {\n  [DASHBOARD_ELEMENT__SET_ACTIVE_PANEL](state, action) {\n    const { activePanelId } = action.payload;\n    const prevActivePanelId = state.activePanelId;\n    const prevPanelName = `${prevActivePanelId}Panel`;\n    const prevPanelState = prevActivePanelId\n      ? {\n          ...state[prevPanelName],\n          page: initialState[prevPanelName].page\n        }\n      : undefined;\n    return {\n      ...state,\n      activePanelId,\n      [prevPanelName]: prevPanelState\n    };\n  },\n  [DASHBOARD_ELEMENT__SET_PANEL_PAGE](state, action) {\n    const { activePanelId } = state;\n    const panelName = `${activePanelId}Panel`;\n    const { page } = action.payload;\n    return { ...state, [panelName]: { ...state[panelName], page } };\n  },\n  [DASHBOARD_ELEMENT__SET_PANEL_DATA](state, action) {\n    const { key, data, meta, tab, loading } = action.payload;\n    const initialData = initialState.data[key];\n    let newData;\n    if (Array.isArray(initialData)) {\n      newData = data || initialData;\n    } else {\n      newData = tab ? { ...state.data[key], [tab]: data } : initialData;\n    }\n    return {\n      ...state,\n      loading,\n      data: { ...state.data, [key]: newData },\n      meta: { ...state.meta, [key]: meta }\n    };\n  },\n  [DASHBOARD_ELEMENT__SET_MORE_PANEL_DATA](state, action) {\n    const { key, data, tab, direction } = action.payload;\n    const oldData = tab ? state.data[key][tab] : state.data[key];\n    let together;\n    if (direction === 'backwards') {\n      together = [...data, ...oldData];\n    } else if (direction === 'forwards') {\n      together = [...oldData, ...data];\n    }\n    const newData = tab ? { ...state.data[key], [tab]: together } : together;\n\n    return {\n      ...state,\n      data: { ...state.data, [key]: newData }\n    };\n  },\n  [DASHBOARD_ELEMENT__SET_LOADING_ITEMS](state, action) {\n    const { loadingItems } = action.payload;\n    const panelName = `${state.activePanelId}Panel`;\n    return {\n      ...state,\n      [panelName]: {\n        ...state[panelName],\n        loadingItems\n      }\n    };\n  },\n  [DASHBOARD_ELEMENT__SET_PANEL_TABS](state, action) {\n    const { data } = action.payload;\n    const getSection = n => n.section && n.section.toLowerCase();\n    const tabs = data.reduce((acc, next) => ({ ...acc, [getSection(next)]: next.tabs }), {});\n    const panelName = `${state.activePanelId}Panel`;\n    const firstTab = tabs[state.activePanelId] && tabs[state.activePanelId][0];\n    return {\n      ...state,\n      tabs,\n      [panelName]: {\n        ...state[panelName],\n        activeTab: state[panelName].activeTab || firstTab,\n        page: initialState[panelName].page\n      }\n    };\n  },\n  [DASHBOARD_ELEMENT__SET_ACTIVE_ITEM](state, action) {\n    const { panel, activeItem } = action.payload;\n    const panelName = `${panel}Panel`;\n    const sourcesPanelState =\n      panel === 'countries' ? initialState.sourcesPanel : state.sourcesPanel;\n    return {\n      ...state,\n      activeIndicatorsList: [],\n      sourcesPanel: sourcesPanelState,\n      [panelName]: {\n        ...state[panelName],\n        activeItem\n      }\n    };\n  },\n  [DASHBOARD_ELEMENT__SET_ACTIVE_TAB](state, action) {\n    const { panel, activeTab } = action.payload;\n    const panelName = `${panel}Panel`;\n    return {\n      ...state,\n      activeIndicatorsList: [],\n      [panelName]: {\n        ...state[panelName],\n        activeTab,\n        page: initialState[panelName].page\n      }\n    };\n  },\n  [DASHBOARD_ELEMENT__SET_ACTIVE_ITEM_WITH_SEARCH](state, action) {\n    const { panel, activeItem } = action.payload;\n    const panelName = `${panel}Panel`;\n    const activeTab = state.tabs[panel].find(tab => tab.id === activeItem.nodeTypeId);\n    return {\n      ...state,\n      activeIndicatorsList: [],\n      [panelName]: {\n        ...state[panelName],\n        activeItem,\n        activeTab\n      }\n    };\n  },\n  [DASHBOARD_ELEMENT__CLEAR_PANEL](state, action) {\n    const { panel } = action.payload;\n    const panelName = `${panel}Panel`;\n    const { activeTab } = state[panelName];\n    const shouldResetCountries = ['countries', 'sources'].includes(panel);\n    const countriesState = shouldResetCountries\n      ? initialState.countriesPanel\n      : state.countriesPanel;\n\n    return {\n      ...state,\n      [panelName]: { ...initialState[panelName], activeTab },\n      countriesPanel: countriesState\n    };\n  },\n  [DASHBOARD_ELEMENT__ADD_ACTIVE_INDICATOR](state, action) {\n    const { active } = action.payload;\n    return {\n      ...state,\n      activeIndicatorsList: [...state.activeIndicatorsList, active.id]\n    };\n  },\n  [DASHBOARD_ELEMENT__REMOVE_ACTIVE_INDICATOR](state, action) {\n    const { toRemove } = action.payload;\n    return {\n      ...state,\n      activeIndicatorsList: state.activeIndicatorsList.filter(item => item !== toRemove.id)\n    };\n  },\n  [DASHBOARD_ELEMENT__SET_SEARCH_RESULTS](state, action) {\n    const { data } = action.payload;\n    let panel = state.activePanelId;\n    if (state.activePanelId === 'sources' && state.countriesPanel.activeItem === null) {\n      panel = 'countries';\n    }\n    const panelName = `${panel}Panel`;\n    return {\n      ...state,\n      [panelName]: {\n        ...state[panelName],\n        searchResults: data\n      }\n    };\n  }\n};\n\nconst dashboardElementReducerTypes = PropTypes => {\n  const PanelTypes = {\n    page: PropTypes.number,\n    searchResults: PropTypes.array,\n    loadingItems: PropTypes.bool,\n    activeItem: PropTypes.number,\n    activeTab: PropTypes.number\n  };\n\n  return {\n    meta: PropTypes.object.isRequired,\n    tabs: PropTypes.object.isRequired,\n    activePanelId: PropTypes.string,\n    activeIndicatorsList: PropTypes.array.isRequired,\n    data: PropTypes.shape({\n      indicators: PropTypes.array.isRequired,\n      countries: PropTypes.array.isRequired,\n      companies: PropTypes.object.isRequired,\n      sources: PropTypes.object.isRequired,\n      destinations: PropTypes.array.isRequired\n    }).isRequired,\n    countriesPanel: PropTypes.shape(PanelTypes).isRequired,\n    sourcesPanel: PropTypes.shape(PanelTypes).isRequired,\n    destinationsPanel: PropTypes.shape(PanelTypes).isRequired,\n    companiesPanel: PropTypes.shape(PanelTypes).isRequired,\n    commoditiesPanel: PropTypes.shape(PanelTypes).isRequired\n  };\n};\n\nexport { initialState };\nexport default createReducer(initialState, dashboardElementReducer, dashboardElementReducerTypes);\n"]}]}