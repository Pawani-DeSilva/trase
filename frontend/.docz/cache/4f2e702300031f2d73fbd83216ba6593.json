{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/react-hot-loader/babel.js\"],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/context-selector/context-selector.component.jsx","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/context-selector/context-selector.component.jsx","mtime":1548345115605},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/.babelrc","mtime":1548840716937},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* eslint-disable jsx-a11y/no-static-element-interactions,jsx-a11y/no-noninteractive-element-interactions */\n\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport groupBy from 'lodash/groupBy';\nimport FiltersDropdown from 'react-components/nav/filters-nav/filters-dropdown.component';\nimport Tooltip from 'react-components/shared/help-tooltip/help-tooltip.component';\nimport 'scripts/react-components/shared/context-selector/context-selector.scss';\nimport 'styles/components/shared/dropdown.scss';\n\nvar ContextSelector =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ContextSelector, _Component);\n\n  function ContextSelector() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ContextSelector);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ContextSelector)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      newlySelectedCountryId: null,\n      newlySelectedCommodityId: null,\n      isSubnationalTabSelected: true,\n      featuredContext: null\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"closeFeaturedHeader\", function () {\n      return _this.setState({\n        featuredContext: null\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"resetSelection\", function (e) {\n      if (e) e.stopPropagation();\n\n      _this.setState({\n        newlySelectedCountryId: null,\n        newlySelectedCommodityId: null\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(ContextSelector, [{\n    key: \"getCountriesAndCommodities\",\n    value: function getCountriesAndCommodities() {\n      var _this$state = this.state,\n          newlySelectedCountryId = _this$state.newlySelectedCountryId,\n          newlySelectedCommodityId = _this$state.newlySelectedCommodityId,\n          isSubnationalTabSelected = _this$state.isSubnationalTabSelected;\n      var selectedContexts = this.props.contexts.filter(function (c) {\n        return c.isSubnational === isSubnationalTabSelected;\n      });\n      var countries = Object.values(groupBy(selectedContexts, 'countryId')).map(function (grouped) {\n        return {\n          id: grouped[0].countryId,\n          name: grouped[0].countryName,\n          commodityIds: grouped.map(function (c) {\n            return c.commodityId;\n          })\n        };\n      });\n      var commodities = Object.values(groupBy(selectedContexts, 'commodityId')).map(function (grouped) {\n        return {\n          id: grouped[0].commodityId,\n          name: grouped[0].commodityName,\n          countryIds: grouped.map(function (c) {\n            return c.countryId;\n          })\n        };\n      });\n      var newlySelectedCountry = countries.find(function (c) {\n        return c.id === newlySelectedCountryId;\n      }) || null;\n      var newlySelectedCommodity = commodities.find(function (c) {\n        return c.id === newlySelectedCommodityId;\n      }) || null;\n      return {\n        newlySelectedCountry: newlySelectedCountry,\n        newlySelectedCommodity: newlySelectedCommodity,\n        showSubnational: this.props.contexts.some(function (c) {\n          return c.isSubnational;\n        }),\n        showNational: this.props.contexts.some(function (c) {\n          return !c.isSubnational;\n        }),\n        countries: countries.map(function (c) {\n          return _objectSpread({}, c, {\n            isSelected: c.id === newlySelectedCountryId,\n            isDisabled: newlySelectedCountryId !== null && c.id !== newlySelectedCountryId || newlySelectedCommodity && !newlySelectedCommodity.countryIds.includes(c.id)\n          });\n        }),\n        commodities: commodities.map(function (c) {\n          return _objectSpread({}, c, {\n            isSelected: c.id === newlySelectedCommodityId,\n            isDisabled: newlySelectedCommodityId !== null && c.id !== newlySelectedCommodityId || newlySelectedCountry && !newlySelectedCountry.commodityIds.includes(c.id)\n          });\n        })\n      };\n    }\n  }, {\n    key: \"getFeaturedContext\",\n    value: function getFeaturedContext(_ref) {\n      var contexts = _ref.contexts;\n\n      var pickRandomOne = function pickRandomOne(ctxs) {\n        return ctxs[Math.floor(Math.random() * ctxs.length)];\n      };\n\n      return pickRandomOne(contexts.filter(function (c) {\n        return c.isHighlighted;\n      }));\n    }\n  }, {\n    key: \"selectElement\",\n    value: function selectElement(e, element, type) {\n      var _this2 = this;\n\n      if (e) e.stopPropagation();\n\n      if (element.isDisabled || element.isSelected) {\n        this.resetSelection();\n        return;\n      }\n\n      this.setState(_defineProperty({}, \"newlySelected\".concat(type, \"Id\"), element.id), function () {\n        var _this2$state = _this2.state,\n            newlySelectedCountryId = _this2$state.newlySelectedCountryId,\n            newlySelectedCommodityId = _this2$state.newlySelectedCommodityId;\n        if (newlySelectedCountryId === null || newlySelectedCommodityId === null) return;\n\n        var selectedContext = _this2.props.contexts.find(function (c) {\n          return c.countryId === newlySelectedCountryId && c.commodityId === newlySelectedCommodityId;\n        });\n\n        if (selectedContext) {\n          _this2.resetSelection();\n\n          _this2.props.selectContextById(selectedContext.id);\n\n          _this2.props.toggleContextSelectorVisibility();\n        }\n      });\n    }\n  }, {\n    key: \"renderDimension\",\n    value: function renderDimension(elements, type) {\n      var _this3 = this;\n\n      return React.createElement(\"ul\", {\n        className: \"dimension-list -medium\"\n      }, elements.map(function (element) {\n        return React.createElement(\"li\", {\n          key: element.id,\n          className: cx('dimension-list-item', {\n            '-selected': element.isSelected,\n            '-disabled': element.isDisabled\n          }),\n          onClick: function onClick(e) {\n            return _this3.selectElement(e, element, type);\n          }\n        }, element.name.toLowerCase());\n      }));\n    }\n  }, {\n    key: \"renderFeaturedContext\",\n    value: function renderFeaturedContext() {\n      var featuredContext = this.state.featuredContext;\n      if (!featuredContext) return null;\n      var title = \"New \".concat(featuredContext.isSubnational ? 'Subnational' : 'National', \" Data\");\n      var newContextName = \"\\n    \".concat(featuredContext.countryName.toLowerCase(), \" - \").concat(featuredContext.commodityName.toLowerCase(), \"\\n    \");\n      return React.createElement(\"div\", {\n        className: \"context-selector-featured-header\"\n      }, React.createElement(\"svg\", {\n        className: \"icon icon-close\",\n        onClick: this.closeFeaturedHeader\n      }, React.createElement(\"use\", {\n        xlinkHref: \"#icon-close\"\n      })), React.createElement(\"div\", null, React.createElement(\"span\", {\n        className: \"featured-header-title\"\n      }, title), React.createElement(\"span\", {\n        className: \"featured-header-new-context-name\"\n      }, newContextName)));\n    }\n  }, {\n    key: \"renderContextList\",\n    value: function renderContextList(_ref2) {\n      var _this4 = this;\n\n      var countries = _ref2.countries,\n          commodities = _ref2.commodities,\n          showNational = _ref2.showNational,\n          showSubnational = _ref2.showSubnational;\n      var isSubnationalTabSelected = this.state.isSubnationalTabSelected;\n      return React.createElement(\"div\", {\n        className: \"context-list-container\"\n      }, React.createElement(\"ul\", {\n        className: \"context-list-tabs\"\n      }, React.createElement(\"li\", {\n        className: cx('tab', {\n          '-selected': isSubnationalTabSelected,\n          'is-hidden': !showSubnational\n        }),\n        onClick: function onClick() {\n          return _this4.setState({\n            isSubnationalTabSelected: true\n          });\n        }\n      }, \"Subnational Data\"), React.createElement(\"li\", {\n        className: cx('tab', {\n          '-selected': !isSubnationalTabSelected,\n          'is-hidden': !showNational\n        }),\n        onClick: function onClick() {\n          return _this4.setState({\n            isSubnationalTabSelected: false\n          });\n        }\n      }, \"National Data\")), React.createElement(\"div\", {\n        className: \"dimension-container\"\n      }, this.renderDimension(countries, 'Country'), this.renderDimension(commodities, 'Commodity')));\n    }\n  }, {\n    key: \"renderFooterText\",\n    value: function renderFooterText(newlySelectedCountry, newlySelectedCommodity) {\n      if (newlySelectedCountry !== null && newlySelectedCommodity !== null) return null;\n\n      if (newlySelectedCountry === null && newlySelectedCommodity === null) {\n        return 'Select both a country and a commodity';\n      }\n\n      if (newlySelectedCommodity === null) {\n        return \"Select a commodity for \".concat(newlySelectedCountry.name);\n      }\n\n      return \"Select a country for \".concat(newlySelectedCommodity.name);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          dropdownClassName = _this$props.dropdownClassName,\n          toggleContextSelectorVisibility = _this$props.toggleContextSelectorVisibility,\n          tooltipText = _this$props.tooltipText,\n          currentDropdown = _this$props.currentDropdown,\n          contextLabel = _this$props.contextLabel,\n          isContextSelected = _this$props.isContextSelected,\n          defaultContextLabel = _this$props.defaultContextLabel;\n\n      var _this$getCountriesAnd = this.getCountriesAndCommodities(),\n          countries = _this$getCountriesAnd.countries,\n          commodities = _this$getCountriesAnd.commodities,\n          showNational = _this$getCountriesAnd.showNational,\n          showSubnational = _this$getCountriesAnd.showSubnational,\n          newlySelectedCountry = _this$getCountriesAnd.newlySelectedCountry,\n          newlySelectedCommodity = _this$getCountriesAnd.newlySelectedCommodity;\n\n      return React.createElement(\"div\", {\n        className: cx('c-context-selector', 'js-dropdown', className),\n        onClick: function onClick() {\n          return toggleContextSelectorVisibility(ContextSelector.id);\n        }\n      }, React.createElement(\"div\", {\n        className: cx('c-dropdown', '-capitalize', dropdownClassName)\n      }, isContextSelected && React.createElement(\"span\", {\n        className: \"dropdown-label\"\n      }, \"Country - Commodity\", tooltipText && React.createElement(Tooltip, {\n        constraint: \"window\",\n        text: tooltipText\n      })), React.createElement(\"span\", {\n        className: cx('dropdown-title', {\n          '-label': !contextLabel\n        })\n      }, contextLabel || defaultContextLabel), React.createElement(FiltersDropdown, {\n        id: ContextSelector.id,\n        currentDropdown: currentDropdown,\n        onClickOutside: toggleContextSelectorVisibility\n      }, React.createElement(\"div\", {\n        className: \"context-selector-content\",\n        onClick: this.resetSelection\n      }, this.renderFeaturedContext(), this.renderContextList({\n        countries: countries,\n        commodities: commodities,\n        showNational: showNational,\n        showSubnational: showSubnational\n      }), React.createElement(\"div\", {\n        className: \"context-selector-footer\"\n      }, React.createElement(\"span\", {\n        className: \"context-selector-footer-text\"\n      }, this.renderFooterText(newlySelectedCountry, newlySelectedCommodity)))))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var isOpening = nextProps.currentDropdown === ContextSelector.id && prevState.featuredContext !== null;\n\n      if (isOpening) {\n        return {\n          featuredContext: this.getFeaturedContext(nextProps)\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return ContextSelector;\n}(Component);\n\n_defineProperty(ContextSelector, \"id\", 'country-commodity');\n\nContextSelector.propTypes = {\n  contexts: PropTypes.array,\n  className: PropTypes.string,\n  tooltipText: PropTypes.string,\n  contextLabel: PropTypes.string,\n  selectContextById: PropTypes.func,\n  currentDropdown: PropTypes.string,\n  dropdownClassName: PropTypes.string,\n  defaultContextLabel: PropTypes.string,\n  isContextSelected: PropTypes.bool.isRequired,\n  toggleContextSelectorVisibility: PropTypes.func\n};\nContextSelector.defaultProps = {\n  defaultContextLabel: 'Select a country and commodity'\n};\nvar _default = ContextSelector;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_typeof, \"_typeof\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/context-selector/context-selector.component.jsx\");\n  reactHotLoader.register(_objectSpread, \"_objectSpread\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/context-selector/context-selector.component.jsx\");\n  reactHotLoader.register(_classCallCheck, \"_classCallCheck\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/context-selector/context-selector.component.jsx\");\n  reactHotLoader.register(_defineProperties, \"_defineProperties\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/context-selector/context-selector.component.jsx\");\n  reactHotLoader.register(_createClass, \"_createClass\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/context-selector/context-selector.component.jsx\");\n  reactHotLoader.register(_possibleConstructorReturn, \"_possibleConstructorReturn\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/context-selector/context-selector.component.jsx\");\n  reactHotLoader.register(_getPrototypeOf, \"_getPrototypeOf\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/context-selector/context-selector.component.jsx\");\n  reactHotLoader.register(_inherits, \"_inherits\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/context-selector/context-selector.component.jsx\");\n  reactHotLoader.register(_setPrototypeOf, \"_setPrototypeOf\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/context-selector/context-selector.component.jsx\");\n  reactHotLoader.register(_assertThisInitialized, \"_assertThisInitialized\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/context-selector/context-selector.component.jsx\");\n  reactHotLoader.register(_defineProperty, \"_defineProperty\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/context-selector/context-selector.component.jsx\");\n  reactHotLoader.register(ContextSelector, \"ContextSelector\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/context-selector/context-selector.component.jsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/context-selector/context-selector.component.jsx\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/context-selector/context-selector.component.jsx"],"names":["ContextSelector","Component","nextProps","prevState","isOpening","featuredContext","newlySelectedCountryId","newlySelectedCommodityId","isSubnationalTabSelected","selectedContexts","c","countries","groupBy","id","grouped","name","commodityIds","commodities","countryIds","newlySelectedCountry","newlySelectedCommodity","showSubnational","showNational","isSelected","isDisabled","contexts","pickRandomOne","ctxs","Math","e","element","type","selectedContext","elements","cx","title","newContextName","closeFeaturedHeader","className","dropdownClassName","toggleContextSelectorVisibility","tooltipText","currentDropdown","contextLabel","isContextSelected","defaultContextLabel","resetSelection","PropTypes","selectContextById","func"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/no-static-element-interactions,jsx-a11y/no-noninteractive-element-interactions */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport groupBy from 'lodash/groupBy';\n\nimport FiltersDropdown from 'react-components/nav/filters-nav/filters-dropdown.component';\nimport Tooltip from 'react-components/shared/help-tooltip/help-tooltip.component';\n\nimport 'scripts/react-components/shared/context-selector/context-selector.scss';\nimport 'styles/components/shared/dropdown.scss';\n\nclass ContextSelector extends Component {\n  static id = 'country-commodity';\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const isOpening =\n      nextProps.currentDropdown === ContextSelector.id && prevState.featuredContext !== null;\n    if (isOpening) {\n      return {\n        featuredContext: this.getFeaturedContext(nextProps)\n      };\n    }\n    return null;\n  }\n\n  state = {\n    newlySelectedCountryId: null,\n    newlySelectedCommodityId: null,\n    isSubnationalTabSelected: true,\n    featuredContext: null\n  };\n\n  getCountriesAndCommodities() {\n    const {\n      newlySelectedCountryId,\n      newlySelectedCommodityId,\n      isSubnationalTabSelected\n    } = this.state;\n    const selectedContexts = this.props.contexts.filter(\n      c => c.isSubnational === isSubnationalTabSelected\n    );\n    const countries = Object.values(groupBy(selectedContexts, 'countryId')).map(grouped => ({\n      id: grouped[0].countryId,\n      name: grouped[0].countryName,\n      commodityIds: grouped.map(c => c.commodityId)\n    }));\n    const commodities = Object.values(groupBy(selectedContexts, 'commodityId')).map(grouped => ({\n      id: grouped[0].commodityId,\n      name: grouped[0].commodityName,\n      countryIds: grouped.map(c => c.countryId)\n    }));\n    const newlySelectedCountry = countries.find(c => c.id === newlySelectedCountryId) || null;\n    const newlySelectedCommodity = commodities.find(c => c.id === newlySelectedCommodityId) || null;\n\n    return {\n      newlySelectedCountry,\n      newlySelectedCommodity,\n      showSubnational: this.props.contexts.some(c => c.isSubnational),\n      showNational: this.props.contexts.some(c => !c.isSubnational),\n      countries: countries.map(c => ({\n        ...c,\n        isSelected: c.id === newlySelectedCountryId,\n        isDisabled:\n          (newlySelectedCountryId !== null && c.id !== newlySelectedCountryId) ||\n          (newlySelectedCommodity && !newlySelectedCommodity.countryIds.includes(c.id))\n      })),\n      commodities: commodities.map(c => ({\n        ...c,\n        isSelected: c.id === newlySelectedCommodityId,\n        isDisabled:\n          (newlySelectedCommodityId !== null && c.id !== newlySelectedCommodityId) ||\n          (newlySelectedCountry && !newlySelectedCountry.commodityIds.includes(c.id))\n      }))\n    };\n  }\n\n  getFeaturedContext({ contexts }) {\n    const pickRandomOne = ctxs => ctxs[Math.floor(Math.random() * ctxs.length)];\n\n    return pickRandomOne(contexts.filter(c => c.isHighlighted));\n  }\n\n  closeFeaturedHeader = () => this.setState({ featuredContext: null });\n\n  resetSelection = e => {\n    if (e) e.stopPropagation();\n    this.setState({\n      newlySelectedCountryId: null,\n      newlySelectedCommodityId: null\n    });\n  };\n\n  selectElement(e, element, type) {\n    if (e) e.stopPropagation();\n    if (element.isDisabled || element.isSelected) {\n      this.resetSelection();\n      return;\n    }\n\n    this.setState({ [`newlySelected${type}Id`]: element.id }, () => {\n      const { newlySelectedCountryId, newlySelectedCommodityId } = this.state;\n      if (newlySelectedCountryId === null || newlySelectedCommodityId === null) return;\n\n      const selectedContext = this.props.contexts.find(\n        c => c.countryId === newlySelectedCountryId && c.commodityId === newlySelectedCommodityId\n      );\n\n      if (selectedContext) {\n        this.resetSelection();\n        this.props.selectContextById(selectedContext.id);\n        this.props.toggleContextSelectorVisibility();\n      }\n    });\n  }\n\n  renderDimension(elements, type) {\n    return (\n      <ul className=\"dimension-list -medium\">\n        {elements.map(element => (\n          <li\n            key={element.id}\n            className={cx('dimension-list-item', {\n              '-selected': element.isSelected,\n              '-disabled': element.isDisabled\n            })}\n            onClick={e => this.selectElement(e, element, type)}\n          >\n            {element.name.toLowerCase()}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  renderFeaturedContext() {\n    const { featuredContext } = this.state;\n\n    if (!featuredContext) return null;\n\n    const title = `New ${featuredContext.isSubnational ? 'Subnational' : 'National'} Data`;\n    const newContextName = `\n    ${featuredContext.countryName.toLowerCase()} - ${featuredContext.commodityName.toLowerCase()}\n    `;\n\n    return (\n      <div className=\"context-selector-featured-header\">\n        <svg className=\"icon icon-close\" onClick={this.closeFeaturedHeader}>\n          <use xlinkHref=\"#icon-close\" />\n        </svg>\n        <div>\n          <span className=\"featured-header-title\">{title}</span>\n          <span className=\"featured-header-new-context-name\">{newContextName}</span>\n        </div>\n      </div>\n    );\n  }\n\n  renderContextList({ countries, commodities, showNational, showSubnational }) {\n    const { isSubnationalTabSelected } = this.state;\n    return (\n      <div className=\"context-list-container\">\n        <ul className=\"context-list-tabs\">\n          <li\n            className={cx('tab', {\n              '-selected': isSubnationalTabSelected,\n              'is-hidden': !showSubnational\n            })}\n            onClick={() => this.setState({ isSubnationalTabSelected: true })}\n          >\n            Subnational Data\n          </li>\n          <li\n            className={cx('tab', {\n              '-selected': !isSubnationalTabSelected,\n              'is-hidden': !showNational\n            })}\n            onClick={() => this.setState({ isSubnationalTabSelected: false })}\n          >\n            National Data\n          </li>\n        </ul>\n        <div className=\"dimension-container\">\n          {this.renderDimension(countries, 'Country')}\n          {this.renderDimension(commodities, 'Commodity')}\n        </div>\n      </div>\n    );\n  }\n\n  renderFooterText(newlySelectedCountry, newlySelectedCommodity) {\n    if (newlySelectedCountry !== null && newlySelectedCommodity !== null) return null;\n    if (newlySelectedCountry === null && newlySelectedCommodity === null) {\n      return 'Select both a country and a commodity';\n    }\n    if (newlySelectedCommodity === null) {\n      return `Select a commodity for ${newlySelectedCountry.name}`;\n    }\n    return `Select a country for ${newlySelectedCommodity.name}`;\n  }\n\n  render() {\n    const {\n      className,\n      dropdownClassName,\n      toggleContextSelectorVisibility,\n      tooltipText,\n      currentDropdown,\n      contextLabel,\n      isContextSelected,\n      defaultContextLabel\n    } = this.props;\n    const {\n      countries,\n      commodities,\n      showNational,\n      showSubnational,\n      newlySelectedCountry,\n      newlySelectedCommodity\n    } = this.getCountriesAndCommodities();\n\n    return (\n      <div\n        className={cx('c-context-selector', 'js-dropdown', className)}\n        onClick={() => toggleContextSelectorVisibility(ContextSelector.id)}\n      >\n        <div className={cx('c-dropdown', '-capitalize', dropdownClassName)}>\n          {isContextSelected && (\n            <span className=\"dropdown-label\">\n              Country - Commodity\n              {tooltipText && <Tooltip constraint=\"window\" text={tooltipText} />}\n            </span>\n          )}\n          <span className={cx('dropdown-title', { '-label': !contextLabel })}>\n            {contextLabel || defaultContextLabel}\n          </span>\n          <FiltersDropdown\n            id={ContextSelector.id}\n            currentDropdown={currentDropdown}\n            onClickOutside={toggleContextSelectorVisibility}\n          >\n            <div className=\"context-selector-content\" onClick={this.resetSelection}>\n              {this.renderFeaturedContext()}\n              {this.renderContextList({ countries, commodities, showNational, showSubnational })}\n              <div className=\"context-selector-footer\">\n                <span className=\"context-selector-footer-text\">\n                  {this.renderFooterText(newlySelectedCountry, newlySelectedCommodity)}\n                </span>\n              </div>\n            </div>\n          </FiltersDropdown>\n        </div>\n      </div>\n    );\n  }\n}\n\nContextSelector.propTypes = {\n  contexts: PropTypes.array,\n  className: PropTypes.string,\n  tooltipText: PropTypes.string,\n  contextLabel: PropTypes.string,\n  selectContextById: PropTypes.func,\n  currentDropdown: PropTypes.string,\n  dropdownClassName: PropTypes.string,\n  defaultContextLabel: PropTypes.string,\n  isContextSelected: PropTypes.bool.isRequired,\n  toggleContextSelectorVisibility: PropTypes.func\n};\n\nContextSelector.defaultProps = {\n  defaultContextLabel: 'Select a country and commodity'\n};\n\nexport default ContextSelector;\n"]}]}