{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/react-hot-loader/babel.js\"],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/analytics/tool.events.js","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/analytics/tool.events.js","mtime":1548840708257},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/.babelrc","mtime":1548840716937},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport { TOGGLE_MAP_LAYERS_MENU, SET_CONTEXT } from 'actions/app.actions';\nimport { SELECT_BIOME_FILTER, SELECT_COLUMN, SELECT_CONTEXTUAL_LAYERS, SELECT_RECOLOR_BY, SELECT_RESIZE_BY, SELECT_VIEW, SELECT_YEARS, TOGGLE_MAP, UPDATE_NODE_SELECTION } from 'actions/tool.actions';\nvar _default = [{\n  type: SET_CONTEXT,\n  category: 'Sankey',\n  action: 'Switch context',\n  getPayload: function getPayload(action, state) {\n    var actionContext = state.app.contexts.find(function (context) {\n      return context.id === action.payload.id;\n    });\n    return \"\".concat(actionContext.countryName, \" \").concat(actionContext.commodityName);\n  }\n}, {\n  type: UPDATE_NODE_SELECTION,\n  category: 'Sankey',\n  action: 'Update node selection',\n  getPayload: function getPayload(action, state) {\n    var nodeNames = [];\n    action.ids.forEach(function (d) {\n      var node = state.tool.nodesDict[d];\n\n      if (typeof node !== 'undefined') {\n        nodeNames.push(node.name);\n      }\n    });\n    return nodeNames.join(',');\n  }\n}, {\n  type: SELECT_BIOME_FILTER,\n  category: 'Sankey',\n  action: 'Update biome filter',\n  getPayload: function getPayload(action) {\n    return action.biomeFilter;\n  }\n}, {\n  type: SELECT_YEARS,\n  action: 'Select years',\n  category: 'Sankey',\n  getPayload: function getPayload(action) {\n    return action.years.join(',');\n  }\n}, {\n  type: SELECT_RECOLOR_BY,\n  action: 'Select recolor by',\n  category: 'Sankey',\n  getPayload: function getPayload(action) {\n    return action.payload.name;\n  }\n}, {\n  type: SELECT_RESIZE_BY,\n  action: 'Select resize by',\n  category: 'Sankey',\n  getPayload: function getPayload(action) {\n    return action.payload.name;\n  }\n}, {\n  type: SELECT_VIEW,\n  action: 'Select view',\n  category: 'Sankey',\n  getPayload: function getPayload(action) {\n    return action.detailedView ? 'detailed' : 'overview';\n  }\n}, {\n  type: SELECT_COLUMN,\n  category: 'Sankey',\n  action: 'Select column',\n  getPayload: function getPayload(action, state) {\n    return state.tool.columns.find(function (col) {\n      return col.id === action.columnId;\n    }).name;\n  }\n}, {\n  type: TOGGLE_MAP,\n  action: 'Toggle map',\n  category: 'Sankey'\n}, {\n  type: TOGGLE_MAP_LAYERS_MENU,\n  action: 'Toggle map layers menu',\n  category: 'Sankey'\n}, {\n  type: SELECT_CONTEXTUAL_LAYERS,\n  action: 'Select contextual layers',\n  category: 'Sankey',\n  getPayload: function getPayload(action) {\n    return action.contextualLayers.join(', ');\n  }\n}];\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_default, \"default\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/analytics/tool.events.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/analytics/tool.events.js"],"names":["type","category","action","getPayload","actionContext","context","nodeNames","node","state","col"],"mappings":"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","sourcesContent":["import { TOGGLE_MAP_LAYERS_MENU, SET_CONTEXT } from 'actions/app.actions';\nimport {\n  SELECT_BIOME_FILTER,\n  SELECT_COLUMN,\n  SELECT_CONTEXTUAL_LAYERS,\n  SELECT_RECOLOR_BY,\n  SELECT_RESIZE_BY,\n  SELECT_VIEW,\n  SELECT_YEARS,\n  TOGGLE_MAP,\n  UPDATE_NODE_SELECTION\n} from 'actions/tool.actions';\n\nexport default [\n  {\n    type: SET_CONTEXT,\n    category: 'Sankey',\n    action: 'Switch context',\n    getPayload: (action, state) => {\n      const actionContext = state.app.contexts.find(context => context.id === action.payload.id);\n      return `${actionContext.countryName} ${actionContext.commodityName}`;\n    }\n  },\n  {\n    type: UPDATE_NODE_SELECTION,\n    category: 'Sankey',\n    action: 'Update node selection',\n    getPayload: (action, state) => {\n      const nodeNames = [];\n\n      action.ids.forEach(d => {\n        const node = state.tool.nodesDict[d];\n        if (typeof node !== 'undefined') {\n          nodeNames.push(node.name);\n        }\n      });\n\n      return nodeNames.join(',');\n    }\n  },\n  {\n    type: SELECT_BIOME_FILTER,\n    category: 'Sankey',\n    action: 'Update biome filter',\n    getPayload: action => action.biomeFilter\n  },\n  {\n    type: SELECT_YEARS,\n    action: 'Select years',\n    category: 'Sankey',\n    getPayload: action => action.years.join(',')\n  },\n  {\n    type: SELECT_RECOLOR_BY,\n    action: 'Select recolor by',\n    category: 'Sankey',\n    getPayload: action => action.payload.name\n  },\n  {\n    type: SELECT_RESIZE_BY,\n    action: 'Select resize by',\n    category: 'Sankey',\n    getPayload: action => action.payload.name\n  },\n  {\n    type: SELECT_VIEW,\n    action: 'Select view',\n    category: 'Sankey',\n    getPayload: action => (action.detailedView ? 'detailed' : 'overview')\n  },\n  {\n    type: SELECT_COLUMN,\n    category: 'Sankey',\n    action: 'Select column',\n    getPayload: (action, state) => state.tool.columns.find(col => col.id === action.columnId).name\n  },\n  {\n    type: TOGGLE_MAP,\n    action: 'Toggle map',\n    category: 'Sankey'\n  },\n  {\n    type: TOGGLE_MAP_LAYERS_MENU,\n    action: 'Toggle map layers menu',\n    category: 'Sankey'\n  },\n  {\n    type: SELECT_CONTEXTUAL_LAYERS,\n    action: 'Select contextual layers',\n    category: 'Sankey',\n    getPayload: action => action.contextualLayers.join(', ')\n  }\n];\n"]}]}