{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/react-hot-loader/babel.js\"],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/nav/global-search/global-search.container.js","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/nav/global-search/global-search.container.js","mtime":1548345115568},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/.babelrc","mtime":1548840716937},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport { loadSearchResults } from 'actions/app.actions';\nimport GlobalSearch from 'react-components/nav/global-search/global-search.component';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport groupBy from 'lodash/groupBy';\n\nfunction getNodeTypeText(nodes, contexts) {\n  var nodeType = nodes.map(function (n) {\n    return n.nodeType;\n  }).join(' & ');\n  var ctx = contexts.find(function (c) {\n    return c.id === nodes[0].contextId;\n  });\n  if (!ctx) return nodeType;\n  return \"\".concat(nodeType, \" - \").concat(ctx.commodityName, \" - \").concat(ctx.countryName);\n}\n\nfunction byContextMainIdAndNodeType(_ref) {\n  var mainId = _ref.mainId,\n      contextId = _ref.contextId,\n      nodeType = _ref.nodeType;\n  var nodeTypeGroup = ['IMPORTER', 'EXPORTER'].includes(nodeType.toUpperCase()) ? 'IM_EX' : nodeType;\n  return \"\".concat(contextId, \"_\").concat(mainId, \"_\").concat(nodeTypeGroup);\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var _state$app = state.app,\n      search = _state$app.search,\n      contexts = _state$app.contexts;\n  var searchResults = Object.values(groupBy(search.results, byContextMainIdAndNodeType)).map(function (nodes) {\n    var node = nodes[0];\n\n    var _ref2 = contexts.find(function (c) {\n      return c.id === node.contextId;\n    }) || {},\n        _ref2$defaultYear = _ref2.defaultYear,\n        defaultYear = _ref2$defaultYear === void 0 ? null : _ref2$defaultYear;\n\n    return {\n      nodes: nodes,\n      defaultYear: defaultYear,\n      name: node.name,\n      contextId: node.contextId,\n      isSubnational: node.isSubnational,\n      nodeTypeText: getNodeTypeText(nodes, contexts)\n    };\n  });\n  return {\n    isLoading: search.isLoading,\n    searchTerm: search.term,\n    searchResults: searchResults\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    onInputValueChange: function onInputValueChange(inputValue) {\n      return loadSearchResults(inputValue);\n    },\n    onItemSelected: function onItemSelected(item) {\n      return dispatch({\n        type: 'tool',\n        payload: {\n          query: {\n            state: {\n              isMapVisible: false,\n              selectedContextId: item.contextId,\n              selectedNodesIds: item.nodes.map(function (i) {\n                return i.id;\n              }),\n              expandedNodesIds: item.nodes.map(function (i) {\n                return i.id;\n              })\n            }\n          }\n        }\n      });\n    }\n  }, dispatch);\n};\n\nvar _default = connect(mapStateToProps, mapDispatchToProps)(GlobalSearch);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(getNodeTypeText, \"getNodeTypeText\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/nav/global-search/global-search.container.js\");\n  reactHotLoader.register(byContextMainIdAndNodeType, \"byContextMainIdAndNodeType\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/nav/global-search/global-search.container.js\");\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/nav/global-search/global-search.container.js\");\n  reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/nav/global-search/global-search.container.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/nav/global-search/global-search.container.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/nav/global-search/global-search.container.js"],"names":["nodeType","n","ctx","c","nodes","mainId","contextId","nodeTypeGroup","mapStateToProps","search","contexts","state","searchResults","groupBy","node","defaultYear","name","isSubnational","nodeTypeText","getNodeTypeText","isLoading","searchTerm","mapDispatchToProps","bindActionCreators","onInputValueChange","loadSearchResults","onItemSelected","dispatch","type","payload","query","isMapVisible","selectedContextId","item","selectedNodesIds","i","expandedNodesIds","connect"],"mappings":"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","sourcesContent":["import { loadSearchResults } from 'actions/app.actions';\nimport GlobalSearch from 'react-components/nav/global-search/global-search.component';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport groupBy from 'lodash/groupBy';\n\nfunction getNodeTypeText(nodes, contexts) {\n  const nodeType = nodes.map(n => n.nodeType).join(' & ');\n  const ctx = contexts.find(c => c.id === nodes[0].contextId);\n\n  if (!ctx) return nodeType;\n\n  return `${nodeType} - ${ctx.commodityName} - ${ctx.countryName}`;\n}\n\nfunction byContextMainIdAndNodeType({ mainId, contextId, nodeType }) {\n  const nodeTypeGroup = ['IMPORTER', 'EXPORTER'].includes(nodeType.toUpperCase())\n    ? 'IM_EX'\n    : nodeType;\n  return `${contextId}_${mainId}_${nodeTypeGroup}`;\n}\n\nconst mapStateToProps = state => {\n  const { search, contexts } = state.app;\n\n  const searchResults = Object.values(groupBy(search.results, byContextMainIdAndNodeType)).map(\n    nodes => {\n      const node = nodes[0];\n      const { defaultYear = null } = contexts.find(c => c.id === node.contextId) || {};\n\n      return {\n        nodes,\n        defaultYear,\n        name: node.name,\n        contextId: node.contextId,\n        isSubnational: node.isSubnational,\n        nodeTypeText: getNodeTypeText(nodes, contexts)\n      };\n    }\n  );\n\n  return {\n    isLoading: search.isLoading,\n    searchTerm: search.term,\n    searchResults\n  };\n};\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      onInputValueChange: inputValue => loadSearchResults(inputValue),\n      onItemSelected: item =>\n        dispatch({\n          type: 'tool',\n          payload: {\n            query: {\n              state: {\n                isMapVisible: false,\n                selectedContextId: item.contextId,\n                selectedNodesIds: item.nodes.map(i => i.id),\n                expandedNodesIds: item.nodes.map(i => i.id)\n              }\n            }\n          }\n        })\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(GlobalSearch);\n"]}]}