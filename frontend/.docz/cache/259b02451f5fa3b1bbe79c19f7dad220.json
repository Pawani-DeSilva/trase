{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/react-hot-loader/babel.js\"],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.selectors.js","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.selectors.js","mtime":1548345115557},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/.babelrc","mtime":1548840716937},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport deburr from 'lodash/deburr';\nimport { createSelector, defaultMemoize } from 'reselect';\nimport templates from 'react-components/logistics-map/logistics-map-layers';\nexport var defaultLayersIds = {\n  soy: ['crushing_facilities', 'refining_facilities', 'storage_facilities'],\n  cattle: ['confirmed_slaughterhouse', 'unconfirmed_slaughterhouse_multifunctional_facility', 'probable_slaughterhouse', 'unconfirmed_slaughterhouse']\n};\n\nvar getSelectedCommodity = function getSelectedCommodity(state) {\n  return state.location.query && state.location.query.commodity || 'soy';\n};\n\nvar getSelectedYear = function getSelectedYear(state) {\n  return state.location.query && state.location.query.year || 2016;\n};\n\nvar getSelectedInspection = function getSelectedInspection(state) {\n  return state.location.query && state.location.query.inspection;\n};\n\nvar getActiveLayersIds = function getActiveLayersIds(state) {\n  return state.location.query && state.location.query.layers;\n};\n\nvar getCompanies = function getCompanies(state) {\n  return state.logisticsMap.companies || {};\n};\n\nvar getActiveCompanies = function getActiveCompanies(state) {\n  return state.location.query && state.location.query.companies || [];\n};\n\nvar getLogisticsMapSearchTerm = function getLogisticsMapSearchTerm(state) {\n  return state.logisticsMap.searchTerm;\n};\n\nexport var getActiveParams = createSelector([getSelectedYear, getSelectedCommodity, getSelectedInspection, getActiveCompanies], function (year, commodity, inspection, companies) {\n  return {\n    year: year,\n    commodity: commodity,\n    companies: companies,\n    inspection: inspection\n  };\n});\nexport var getLogisticsMapLayers = createSelector([getActiveLayersIds, getActiveParams], function (layersIds, activeParams) {\n  return templates.filter(function (template) {\n    return activeParams.commodity === template.commodity;\n  }).map(function (template) {\n    return {\n      name: template.name,\n      opacity: 1,\n      id: template.name,\n      active: layersIds ? layersIds.includes(template.name) : true,\n      type: 'layer',\n      provider: 'carto',\n      color: template.color,\n      layerConfig: {\n        account: CARTO_ACCOUNT,\n        body: {\n          layers: template.layers,\n          minzoom: 2,\n          maxzoom: 20\n        },\n        type: 'carto',\n        service: 'carto'\n      },\n      interactivity: template.layers[0].options.interactivity,\n      params: template.params_config && template.params_config.reduce(function (acc, next) {\n        return _objectSpread({}, acc, _defineProperty({}, next.key, activeParams[next.key] || next.default));\n      }, {}),\n      sqlParams: template.sql_config && template.sql_config.reduce(function (acc, next) {\n        return _objectSpread({}, acc, _defineProperty({}, next.type, _objectSpread({}, acc[next.type], _defineProperty({}, next.key, (activeParams[next.name || next.key] || next.default) && activeParams[next.name || next.key] || next.default))));\n      }, {})\n    };\n  });\n});\nvar getActiveDefaultLayersIds = createSelector([getActiveParams], function (params) {\n  return defaultLayersIds[params.commodity];\n});\nexport var getActiveLayers = createSelector([getActiveLayersIds, getLogisticsMapLayers, getActiveDefaultLayersIds], function (layersIds, layers, activeDefaultLayersIds) {\n  var currentLayers = layersIds || activeDefaultLayersIds;\n  return layers.filter(function (layer) {\n    return !!currentLayers.includes(layer.name);\n  });\n});\nexport var getCurrentCompanies = createSelector([getCompanies, getSelectedCommodity], function (companies, commodity) {\n  return companies[commodity] || [];\n});\nexport var getCurrentSearchedCompanies = createSelector([getCurrentCompanies, getLogisticsMapSearchTerm], function (currentCompanies, searchTerm) {\n  return currentCompanies.filter(function (i) {\n    var term = typeof i.name === 'string' ? i.name.toLowerCase() : i.name;\n    return deburr(term).includes(searchTerm);\n  });\n});\nexport var getLogisticsMapDownloadUrls = defaultMemoize(function () {\n  return templates.reduce(function (acc, template) {\n    return _objectSpread({}, acc, _defineProperty({}, template.commodity, _toConsumableArray(acc[template.commodity] || []).concat([{\n      name: template.name,\n      downloadUrl: template.downloadUrl\n    }])));\n  }, {});\n});\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_toConsumableArray, \"_toConsumableArray\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.selectors.js\");\n  reactHotLoader.register(_nonIterableSpread, \"_nonIterableSpread\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.selectors.js\");\n  reactHotLoader.register(_iterableToArray, \"_iterableToArray\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.selectors.js\");\n  reactHotLoader.register(_arrayWithoutHoles, \"_arrayWithoutHoles\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.selectors.js\");\n  reactHotLoader.register(_objectSpread, \"_objectSpread\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.selectors.js\");\n  reactHotLoader.register(_defineProperty, \"_defineProperty\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.selectors.js\");\n  reactHotLoader.register(defaultLayersIds, \"defaultLayersIds\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.selectors.js\");\n  reactHotLoader.register(getSelectedCommodity, \"getSelectedCommodity\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.selectors.js\");\n  reactHotLoader.register(getSelectedYear, \"getSelectedYear\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.selectors.js\");\n  reactHotLoader.register(getSelectedInspection, \"getSelectedInspection\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.selectors.js\");\n  reactHotLoader.register(getActiveLayersIds, \"getActiveLayersIds\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.selectors.js\");\n  reactHotLoader.register(getCompanies, \"getCompanies\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.selectors.js\");\n  reactHotLoader.register(getActiveCompanies, \"getActiveCompanies\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.selectors.js\");\n  reactHotLoader.register(getLogisticsMapSearchTerm, \"getLogisticsMapSearchTerm\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.selectors.js\");\n  reactHotLoader.register(getActiveParams, \"getActiveParams\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.selectors.js\");\n  reactHotLoader.register(getLogisticsMapLayers, \"getLogisticsMapLayers\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.selectors.js\");\n  reactHotLoader.register(getActiveDefaultLayersIds, \"getActiveDefaultLayersIds\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.selectors.js\");\n  reactHotLoader.register(getActiveLayers, \"getActiveLayers\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.selectors.js\");\n  reactHotLoader.register(getCurrentCompanies, \"getCurrentCompanies\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.selectors.js\");\n  reactHotLoader.register(getCurrentSearchedCompanies, \"getCurrentSearchedCompanies\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.selectors.js\");\n  reactHotLoader.register(getLogisticsMapDownloadUrls, \"getLogisticsMapDownloadUrls\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.selectors.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/logistics-map/logistics-map.selectors.js"],"names":["defaultLayersIds","soy","cattle","getSelectedCommodity","state","getSelectedYear","getSelectedInspection","getActiveLayersIds","getCompanies","getActiveCompanies","getLogisticsMapSearchTerm","getActiveParams","createSelector","year","commodity","companies","inspection","getLogisticsMapLayers","activeParams","template","name","opacity","id","active","layersIds","type","provider","color","layerConfig","account","body","layers","minzoom","maxzoom","service","interactivity","params","next","sqlParams","acc","getActiveDefaultLayersIds","getActiveLayers","currentLayers","layer","getCurrentCompanies","getCurrentSearchedCompanies","term","i","deburr","getLogisticsMapDownloadUrls","defaultMemoize","downloadUrl"],"mappings":"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","sourcesContent":["import deburr from 'lodash/deburr';\nimport { createSelector, defaultMemoize } from 'reselect';\nimport templates from 'react-components/logistics-map/logistics-map-layers';\n\nexport const defaultLayersIds = {\n  soy: ['crushing_facilities', 'refining_facilities', 'storage_facilities'],\n  cattle: [\n    'confirmed_slaughterhouse',\n    'unconfirmed_slaughterhouse_multifunctional_facility',\n    'probable_slaughterhouse',\n    'unconfirmed_slaughterhouse'\n  ]\n};\n\nconst getSelectedCommodity = state =>\n  (state.location.query && state.location.query.commodity) || 'soy';\nconst getSelectedYear = state => (state.location.query && state.location.query.year) || 2016;\nconst getSelectedInspection = state => state.location.query && state.location.query.inspection;\nconst getActiveLayersIds = state => state.location.query && state.location.query.layers;\nconst getCompanies = state => state.logisticsMap.companies || {};\nconst getActiveCompanies = state => (state.location.query && state.location.query.companies) || [];\nconst getLogisticsMapSearchTerm = state => state.logisticsMap.searchTerm;\n\nexport const getActiveParams = createSelector(\n  [getSelectedYear, getSelectedCommodity, getSelectedInspection, getActiveCompanies],\n  (year, commodity, inspection, companies) => ({\n    year,\n    commodity,\n    companies,\n    inspection\n  })\n);\n\nexport const getLogisticsMapLayers = createSelector(\n  [getActiveLayersIds, getActiveParams],\n  (layersIds, activeParams) =>\n    templates\n      .filter(template => activeParams.commodity === template.commodity)\n      .map(template => ({\n        name: template.name,\n        opacity: 1,\n        id: template.name,\n        active: layersIds ? layersIds.includes(template.name) : true,\n        type: 'layer',\n        provider: 'carto',\n        color: template.color,\n        layerConfig: {\n          account: CARTO_ACCOUNT,\n          body: {\n            layers: template.layers,\n            minzoom: 2,\n            maxzoom: 20\n          },\n          type: 'carto',\n          service: 'carto'\n        },\n        interactivity: template.layers[0].options.interactivity,\n        params:\n          template.params_config &&\n          template.params_config.reduce(\n            (acc, next) => ({ ...acc, [next.key]: activeParams[next.key] || next.default }),\n            {}\n          ),\n        sqlParams:\n          template.sql_config &&\n          template.sql_config.reduce(\n            (acc, next) => ({\n              ...acc,\n              [next.type]: {\n                ...acc[next.type],\n                [next.key]:\n                  ((activeParams[next.name || next.key] || next.default) &&\n                    activeParams[next.name || next.key]) ||\n                  next.default\n              }\n            }),\n            {}\n          )\n      }))\n);\n\nconst getActiveDefaultLayersIds = createSelector(\n  [getActiveParams],\n  params => defaultLayersIds[params.commodity]\n);\n\nexport const getActiveLayers = createSelector(\n  [getActiveLayersIds, getLogisticsMapLayers, getActiveDefaultLayersIds],\n  (layersIds, layers, activeDefaultLayersIds) => {\n    const currentLayers = layersIds || activeDefaultLayersIds;\n    return layers.filter(layer => !!currentLayers.includes(layer.name));\n  }\n);\n\nexport const getCurrentCompanies = createSelector(\n  [getCompanies, getSelectedCommodity],\n  (companies, commodity) => companies[commodity] || []\n);\n\nexport const getCurrentSearchedCompanies = createSelector(\n  [getCurrentCompanies, getLogisticsMapSearchTerm],\n  (currentCompanies, searchTerm) =>\n    currentCompanies.filter(i => {\n      const term = typeof i.name === 'string' ? i.name.toLowerCase() : i.name;\n      return deburr(term).includes(searchTerm);\n    })\n);\n\nexport const getLogisticsMapDownloadUrls = defaultMemoize(() =>\n  templates.reduce(\n    (acc, template) => ({\n      ...acc,\n      [template.commodity]: [\n        ...(acc[template.commodity] || []),\n        {\n          name: template.name,\n          downloadUrl: template.downloadUrl\n        }\n      ]\n    }),\n    {}\n  )\n);\n"]}]}