{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/react-hot-loader/babel.js\"],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/node-title/node-title.component.jsx","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/node-title/node-title.component.jsx","mtime":1548345115617},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/.babelrc","mtime":1548840716937},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\n/* eslint-disable jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport 'react-components/shared/node-title/node-title.scss';\nexport default function NodeTitle(props) {\n  var _props$columns = props.columns,\n      columns = _props$columns === void 0 ? [] : _props$columns,\n      recolorGroup = props.recolorGroup,\n      onClose = props.onClose,\n      className = props.className;\n  return React.createElement(\"div\", {\n    className: cx('c-node-title', className, \"-recolorgroup-\".concat(recolorGroup))\n  }, columns.map(function (column, key) {\n    return React.createElement(\"div\", {\n      className: \"node-title-column\",\n      key: key\n    }, column.title && React.createElement(\"div\", {\n      className: \"column-title\"\n    }, column.title), React.createElement(\"div\", {\n      className: \"column-content\"\n    }, \"\".concat(column.content, \" \"), column.unit && React.createElement(\"span\", {\n      className: \"unit\"\n    }, column.unit)));\n  }), React.createElement(\"div\", {\n    className: \"node-title-column\"\n  }, React.createElement(\"div\", {\n    className: \"column-content\",\n    onClick: onClose\n  }, React.createElement(\"svg\", {\n    className: \"icon icon-close\"\n  }, React.createElement(\"use\", {\n    xlinkHref: \"#icon-close\"\n  })))));\n}\nNodeTitle.propTypes = {\n  columns: PropTypes.array,\n  onClose: PropTypes.func,\n  className: PropTypes.string,\n  recolorGroup: PropTypes.number\n};\nNodeTitle.defaultProps = {\n  recolorGroup: -1\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(NodeTitle, \"NodeTitle\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/node-title/node-title.component.jsx\");\n  leaveModule(module);\n})();\n\n;\nNodeTitle.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"NodeTitle\",\n  \"props\": {\n    \"recolorGroup\": {\n      \"defaultValue\": {\n        \"value\": \"-1\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"columns\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onClose\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"className\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/node-title/node-title.component.jsx"],"names":["columns","recolorGroup","onClose","className","props","cx","key","column","NodeTitle","PropTypes","number"],"mappings":";;;;;;AAAA;AACA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,EAAA,MAAA,YAAA;AACA,OAAA,SAAA,MAAA,YAAA;AAEA,OAAA,oDAAA;AAEA,eAAe,SAAA,SAAA,CAAA,KAAA,EAA0B;AAAA,MAAA,cAAA,GACoBI,KADpB,CAAA,OAAA;AAAA,MAC/BJ,OAD+B,GAAA,cAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,cAAA;AAAA,MACjBC,YADiB,GACoBG,KADpB,CAAA,YAAA;AAAA,MACHF,OADG,GACoBE,KADpB,CAAA,OAAA;AAAA,MACMD,SADN,GACoBC,KADpB,CAAA,SAAA;AAEvC,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAEC,EAAE,CAAA,cAAA,EAAA,SAAA,EAAA,iBAAA,MAAA,CAAA,YAAA,CAAA;AAAlB,GAAA,EACG,OAAO,CAAP,GAAA,CAAY,UAAA,MAAA,EAAA,GAAA,EAAA;AAAA,WACX,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAd,mBAAA;AAAmC,MAAA,GAAG,EAAEC;AAAxC,KAAA,EACGC,MAAM,CAANA,KAAAA,IAAgB,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAC;AAAf,KAAA,EAA+BA,MAAM,CADxD,KACmB,CADnB,EAEE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAC;AAAf,KAAA,EAAA,GAAA,MAAA,CACMA,MAAM,CADZ,OAAA,EAAA,GAAA,CAAA,EAEGA,MAAM,CAANA,IAAAA,IAAe,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,MAAA,SAAS,EAAC;AAAhB,KAAA,EAAwBA,MAAM,CALvC,IAKS,CAFlB,CAFF,CADW;AADf,GACG,CADH,EAUE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAd,gBAAA;AAAgC,IAAA,OAAO,EAAEL;AAAzC,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,CADF,CADF,CADF,CAVF,CADF;AAoBD;AAEDM,SAAS,CAATA,SAAAA,GAAsB;AACpBR,EAAAA,OAAO,EAAES,SAAS,CADE,KAAA;AAEpBP,EAAAA,OAAO,EAAEO,SAAS,CAFE,IAAA;AAGpBN,EAAAA,SAAS,EAAEM,SAAS,CAHA,MAAA;AAIpBR,EAAAA,YAAY,EAAEQ,SAAS,CAACC;AAJJ,CAAtBF;AAOAA,SAAS,CAATA,YAAAA,GAAyB;AACvBP,EAAAA,YAAY,EAAE,CAAC;AADQ,CAAzBO;;;;;;;;;;;;0BA/Be,S","sourcesContent":["/* eslint-disable jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport 'react-components/shared/node-title/node-title.scss';\n\nexport default function NodeTitle(props) {\n  const { columns = [], recolorGroup, onClose, className } = props;\n  return (\n    <div className={cx('c-node-title', className, `-recolorgroup-${recolorGroup}`)}>\n      {columns.map((column, key) => (\n        <div className=\"node-title-column\" key={key}>\n          {column.title && <div className=\"column-title\">{column.title}</div>}\n          <div className=\"column-content\">\n            {`${column.content} `}\n            {column.unit && <span className=\"unit\">{column.unit}</span>}\n          </div>\n        </div>\n      ))}\n      <div className=\"node-title-column\">\n        <div className=\"column-content\" onClick={onClose}>\n          <svg className=\"icon icon-close\">\n            <use xlinkHref=\"#icon-close\" />\n          </svg>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nNodeTitle.propTypes = {\n  columns: PropTypes.array,\n  onClose: PropTypes.func,\n  className: PropTypes.string,\n  recolorGroup: PropTypes.number\n};\n\nNodeTitle.defaultProps = {\n  recolorGroup: -1\n};\n"]}]}