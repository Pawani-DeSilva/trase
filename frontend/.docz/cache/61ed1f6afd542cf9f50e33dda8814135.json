{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/react-hot-loader/babel.js\"],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.actions.js","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.actions.js","mtime":1548424841357},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/.babelrc","mtime":1548840716937},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* eslint-disable camelcase */\n\n\nimport { getURLFromParams, GET_DASHBOARD_OPTIONS_URL, GET_DASHBOARD_OPTIONS_TABS_URL, GET_DASHBOARD_SEARCH_RESULTS_URL } from 'utils/getURLFromParams';\nexport var DASHBOARD_ELEMENT__SET_MORE_PANEL_DATA = 'DASHBOARD_ELEMENT__SET_MORE_PANEL_DATA';\nexport var DASHBOARD_ELEMENT__SET_PANEL_DATA = 'DASHBOARD_ELEMENT__SET_PANEL_DATA';\nexport var DASHBOARD_ELEMENT__SET_ACTIVE_PANEL = 'DASHBOARD_ELEMENT__SET_ACTIVE_PANEL';\nexport var DASHBOARD_ELEMENT__SET_ACTIVE_ITEM = 'DASHBOARD_ELEMENT__SET_ACTIVE_ITEM';\nexport var DASHBOARD_ELEMENT__SET_ACTIVE_TAB = 'DASHBOARD_ELEMENT__SET_ACTIVE_TAB';\nexport var DASHBOARD_ELEMENT__CLEAR_PANEL = 'DASHBOARD_ELEMENT__CLEAR_PANEL';\nexport var DASHBOARD_ELEMENT__ADD_ACTIVE_INDICATOR = 'DASHBOARD_ELEMENT__ADD_ACTIVE_INDICATOR';\nexport var DASHBOARD_ELEMENT__REMOVE_ACTIVE_INDICATOR = 'DASHBOARD_ELEMENT__REMOVE_ACTIVE_INDICATOR';\nexport var DASHBOARD_ELEMENT__SET_PANEL_TABS = 'DASHBOARD_ELEMENT__SET_PANEL_TABS';\nexport var DASHBOARD_ELEMENT__SET_PANEL_PAGE = 'DASHBOARD_ELEMENT__SET_PANEL_PAGE';\nexport var DASHBOARD_ELEMENT__SET_LOADING_ITEMS = 'DASHBOARD_ELEMENT__SET_LOADING_ITEMS';\nexport var DASHBOARD_ELEMENT__SET_SEARCH_RESULTS = 'DASHBOARD_ELEMENT__SET_SEARCH_RESULTS';\nexport var DASHBOARD_ELEMENT__SET_ACTIVE_ITEM_WITH_SEARCH = 'DASHBOARD_ELEMENT__SET_ACTIVE_ITEM_WITH_SEARCH';\n\nvar getDashboardPanelParams = function getDashboardPanelParams(state, options_type) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var countriesPanel = state.countriesPanel,\n      sourcesPanel = state.sourcesPanel,\n      companiesPanel = state.companiesPanel,\n      destinationsPanel = state.destinationsPanel,\n      commoditiesPanel = state.commoditiesPanel;\n  var page = options.page;\n  var sourcesTab = sourcesPanel.activeTab && sourcesPanel.activeTab.id;\n  var companiesTab = companiesPanel.activeTab && companiesPanel.activeTab.id;\n  var node_types_ids = {\n    sources: sourcesTab,\n    companies: companiesTab\n  }[options_type];\n  var params = {\n    page: page,\n    options_type: options_type,\n    node_types_ids: node_types_ids,\n    countries_ids: countriesPanel.activeItem && countriesPanel.activeItem.id\n  };\n\n  if (options_type !== 'sources') {\n    params.sources_ids = sourcesPanel.activeItem && sourcesPanel.activeItem.id;\n  }\n\n  if (options_type !== 'commodities') {\n    params.commodities_ids = commoditiesPanel.activeItem && commoditiesPanel.activeItem.id;\n  }\n\n  if (options_type !== 'destinations') {\n    params.destinations_ids = destinationsPanel.activeItem && destinationsPanel.activeItem.id;\n  }\n\n  if (options_type !== 'companies') {\n    params.companies_ids = companiesPanel.activeItem && companiesPanel.activeItem.id;\n  }\n\n  return params;\n};\n\nexport var getDashboardPanelData = function getDashboardPanelData(optionsType, options) {\n  return function (dispatch, getState) {\n    var _getState = getState(),\n        dashboardElement = _getState.dashboardElement;\n\n    var _dashboardElement$ = dashboardElement[\"\".concat(dashboardElement.activePanelId, \"Panel\")],\n        page = _dashboardElement$.page,\n        activeTab = _dashboardElement$.activeTab;\n    var tab = activeTab && activeTab.id;\n    var params = getDashboardPanelParams(dashboardElement, optionsType, _objectSpread({\n      page: page\n    }, options));\n    var url = getURLFromParams(GET_DASHBOARD_OPTIONS_URL, params);\n    var key = optionsType !== 'attributes' ? optionsType : 'indicators'; // FIXME\n\n    dispatch({\n      type: DASHBOARD_ELEMENT__SET_PANEL_DATA,\n      payload: {\n        key: key,\n        tab: tab,\n        data: null,\n        meta: null,\n        loading: true\n      }\n    });\n    fetch(url).then(function (res) {\n      return res.ok ? res.json() : Promise.reject(res.statusText);\n    }).then(function (json) {\n      return dispatch({\n        type: DASHBOARD_ELEMENT__SET_PANEL_DATA,\n        payload: {\n          key: key,\n          tab: tab,\n          data: json.data,\n          meta: json.meta,\n          loading: false\n        }\n      });\n    });\n  };\n};\nexport var getDashboardPanelSectionTabs = function getDashboardPanelSectionTabs(options_type) {\n  return function (dispatch, getState) {\n    var params = getDashboardPanelParams(getState().dashboardElement, options_type);\n    var url = getURLFromParams(GET_DASHBOARD_OPTIONS_TABS_URL, params);\n    fetch(url).then(function (res) {\n      return res.ok ? res.json() : Promise.reject(res.statusText);\n    }).then(function (json) {\n      return dispatch({\n        type: DASHBOARD_ELEMENT__SET_PANEL_TABS,\n        payload: {\n          data: json.data\n        }\n      });\n    });\n  };\n};\nexport var setDashboardActivePanel = function setDashboardActivePanel(activePanelId) {\n  return {\n    type: DASHBOARD_ELEMENT__SET_ACTIVE_PANEL,\n    payload: {\n      activePanelId: activePanelId\n    }\n  };\n};\nexport var setDashboardPanelActiveItemWithSearch = function setDashboardPanelActiveItemWithSearch(activeItem, panel) {\n  return {\n    type: DASHBOARD_ELEMENT__SET_ACTIVE_ITEM_WITH_SEARCH,\n    payload: {\n      panel: panel,\n      activeItem: activeItem\n    }\n  };\n};\nexport var setDashboardPanelActiveItem = function setDashboardPanelActiveItem(activeItem, panel) {\n  return {\n    type: DASHBOARD_ELEMENT__SET_ACTIVE_ITEM,\n    payload: {\n      panel: panel,\n      activeItem: activeItem\n    }\n  };\n};\nexport var setDashboardPanelActiveTab = function setDashboardPanelActiveTab(activeTab, panel) {\n  return {\n    type: DASHBOARD_ELEMENT__SET_ACTIVE_TAB,\n    payload: {\n      panel: panel,\n      activeTab: activeTab\n    }\n  };\n};\nexport var clearDashboardPanel = function clearDashboardPanel(panel) {\n  return {\n    type: DASHBOARD_ELEMENT__CLEAR_PANEL,\n    payload: {\n      panel: panel\n    }\n  };\n};\nexport var addActiveIndicator = function addActiveIndicator(active) {\n  return {\n    type: DASHBOARD_ELEMENT__ADD_ACTIVE_INDICATOR,\n    payload: {\n      active: active\n    }\n  };\n};\nexport var removeActiveIndicator = function removeActiveIndicator(toRemove) {\n  return {\n    type: DASHBOARD_ELEMENT__REMOVE_ACTIVE_INDICATOR,\n    payload: {\n      toRemove: toRemove\n    }\n  };\n};\nexport var setDashboardPanelPage = function setDashboardPanelPage(page, direction) {\n  return {\n    type: DASHBOARD_ELEMENT__SET_PANEL_PAGE,\n    payload: {\n      page: page,\n      direction: direction\n    }\n  };\n};\nexport var setDashboardPanelLoadingItems = function setDashboardPanelLoadingItems(loadingItems) {\n  return {\n    type: DASHBOARD_ELEMENT__SET_LOADING_ITEMS,\n    payload: {\n      loadingItems: loadingItems\n    }\n  };\n};\nexport var getMoreDashboardPanelData = function getMoreDashboardPanelData(optionsType, activeTab, direction) {\n  return function (dispatch, getState) {\n    var _getState2 = getState(),\n        dashboardElement = _getState2.dashboardElement;\n\n    var page = dashboardElement[\"\".concat(dashboardElement.activePanelId, \"Panel\")].page;\n    var params = getDashboardPanelParams(dashboardElement, optionsType, {\n      page: page\n    });\n    var url = getURLFromParams(GET_DASHBOARD_OPTIONS_URL, params);\n    var key = optionsType !== 'attributes' ? optionsType : 'indicators'; // FIXME\n\n    var timeoutId = setTimeout(function () {\n      return dispatch(setDashboardPanelLoadingItems(true));\n    }, 300);\n    fetch(url).then(function (res) {\n      return res.ok ? res.json() : Promise.reject(res.statusText);\n    }).then(function (json) {\n      clearTimeout(timeoutId);\n      setTimeout(function () {\n        return dispatch(setDashboardPanelLoadingItems(false));\n      }, 1000);\n      dispatch({\n        type: DASHBOARD_ELEMENT__SET_MORE_PANEL_DATA,\n        payload: {\n          key: key,\n          tab: activeTab && activeTab.id,\n          direction: direction,\n          data: json.data\n        }\n      });\n    }).catch(function (err) {\n      console.error(err);\n      dispatch(setDashboardPanelLoadingItems(false));\n    });\n  };\n};\nexport var getDashboardPanelSearchResults = function getDashboardPanelSearchResults(query) {\n  return function (dispatch, getState) {\n    if (!query) return;\n\n    var _getState3 = getState(),\n        dashboardElement = _getState3.dashboardElement;\n\n    var optionsType = dashboardElement.activePanelId;\n\n    if (optionsType === 'sources' && dashboardElement.sourcesPanel.activeItem === null && dashboardElement.sourcesPanel.activeTab === null) {\n      optionsType = 'countries';\n    }\n\n    var filters = _objectSpread({}, getDashboardPanelParams(dashboardElement, optionsType), {\n      node_types_ids: undefined\n    });\n\n    var params = _objectSpread({}, filters, {\n      q: query\n    });\n\n    var url = getURLFromParams(GET_DASHBOARD_SEARCH_RESULTS_URL, params);\n    fetch(url).then(function (res) {\n      return res.ok ? res.json() : Promise.reject(res.statusText);\n    }).then(function (json) {\n      return dispatch({\n        type: DASHBOARD_ELEMENT__SET_SEARCH_RESULTS,\n        payload: {\n          data: json.data\n        }\n      });\n    }).catch(function (err) {\n      return console.error(err);\n    });\n  };\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_objectSpread, \"_objectSpread\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.actions.js\");\n  reactHotLoader.register(_defineProperty, \"_defineProperty\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.actions.js\");\n  reactHotLoader.register(DASHBOARD_ELEMENT__SET_MORE_PANEL_DATA, \"DASHBOARD_ELEMENT__SET_MORE_PANEL_DATA\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.actions.js\");\n  reactHotLoader.register(DASHBOARD_ELEMENT__SET_PANEL_DATA, \"DASHBOARD_ELEMENT__SET_PANEL_DATA\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.actions.js\");\n  reactHotLoader.register(DASHBOARD_ELEMENT__SET_ACTIVE_PANEL, \"DASHBOARD_ELEMENT__SET_ACTIVE_PANEL\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.actions.js\");\n  reactHotLoader.register(DASHBOARD_ELEMENT__SET_ACTIVE_ITEM, \"DASHBOARD_ELEMENT__SET_ACTIVE_ITEM\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.actions.js\");\n  reactHotLoader.register(DASHBOARD_ELEMENT__SET_ACTIVE_TAB, \"DASHBOARD_ELEMENT__SET_ACTIVE_TAB\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.actions.js\");\n  reactHotLoader.register(DASHBOARD_ELEMENT__CLEAR_PANEL, \"DASHBOARD_ELEMENT__CLEAR_PANEL\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.actions.js\");\n  reactHotLoader.register(DASHBOARD_ELEMENT__ADD_ACTIVE_INDICATOR, \"DASHBOARD_ELEMENT__ADD_ACTIVE_INDICATOR\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.actions.js\");\n  reactHotLoader.register(DASHBOARD_ELEMENT__REMOVE_ACTIVE_INDICATOR, \"DASHBOARD_ELEMENT__REMOVE_ACTIVE_INDICATOR\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.actions.js\");\n  reactHotLoader.register(DASHBOARD_ELEMENT__SET_PANEL_TABS, \"DASHBOARD_ELEMENT__SET_PANEL_TABS\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.actions.js\");\n  reactHotLoader.register(DASHBOARD_ELEMENT__SET_PANEL_PAGE, \"DASHBOARD_ELEMENT__SET_PANEL_PAGE\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.actions.js\");\n  reactHotLoader.register(DASHBOARD_ELEMENT__SET_LOADING_ITEMS, \"DASHBOARD_ELEMENT__SET_LOADING_ITEMS\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.actions.js\");\n  reactHotLoader.register(DASHBOARD_ELEMENT__SET_SEARCH_RESULTS, \"DASHBOARD_ELEMENT__SET_SEARCH_RESULTS\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.actions.js\");\n  reactHotLoader.register(DASHBOARD_ELEMENT__SET_ACTIVE_ITEM_WITH_SEARCH, \"DASHBOARD_ELEMENT__SET_ACTIVE_ITEM_WITH_SEARCH\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.actions.js\");\n  reactHotLoader.register(getDashboardPanelParams, \"getDashboardPanelParams\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.actions.js\");\n  reactHotLoader.register(getDashboardPanelData, \"getDashboardPanelData\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.actions.js\");\n  reactHotLoader.register(getDashboardPanelSectionTabs, \"getDashboardPanelSectionTabs\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.actions.js\");\n  reactHotLoader.register(setDashboardActivePanel, \"setDashboardActivePanel\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.actions.js\");\n  reactHotLoader.register(setDashboardPanelActiveItemWithSearch, \"setDashboardPanelActiveItemWithSearch\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.actions.js\");\n  reactHotLoader.register(setDashboardPanelActiveItem, \"setDashboardPanelActiveItem\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.actions.js\");\n  reactHotLoader.register(setDashboardPanelActiveTab, \"setDashboardPanelActiveTab\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.actions.js\");\n  reactHotLoader.register(clearDashboardPanel, \"clearDashboardPanel\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.actions.js\");\n  reactHotLoader.register(addActiveIndicator, \"addActiveIndicator\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.actions.js\");\n  reactHotLoader.register(removeActiveIndicator, \"removeActiveIndicator\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.actions.js\");\n  reactHotLoader.register(setDashboardPanelPage, \"setDashboardPanelPage\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.actions.js\");\n  reactHotLoader.register(setDashboardPanelLoadingItems, \"setDashboardPanelLoadingItems\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.actions.js\");\n  reactHotLoader.register(getMoreDashboardPanelData, \"getMoreDashboardPanelData\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.actions.js\");\n  reactHotLoader.register(getDashboardPanelSearchResults, \"getDashboardPanelSearchResults\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.actions.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-element.actions.js"],"names":["DASHBOARD_ELEMENT__SET_MORE_PANEL_DATA","DASHBOARD_ELEMENT__SET_PANEL_DATA","DASHBOARD_ELEMENT__SET_ACTIVE_PANEL","DASHBOARD_ELEMENT__SET_ACTIVE_ITEM","DASHBOARD_ELEMENT__SET_ACTIVE_TAB","DASHBOARD_ELEMENT__CLEAR_PANEL","DASHBOARD_ELEMENT__ADD_ACTIVE_INDICATOR","DASHBOARD_ELEMENT__REMOVE_ACTIVE_INDICATOR","DASHBOARD_ELEMENT__SET_PANEL_TABS","DASHBOARD_ELEMENT__SET_PANEL_PAGE","DASHBOARD_ELEMENT__SET_LOADING_ITEMS","DASHBOARD_ELEMENT__SET_SEARCH_RESULTS","DASHBOARD_ELEMENT__SET_ACTIVE_ITEM_WITH_SEARCH","getDashboardPanelParams","options","countriesPanel","sourcesPanel","companiesPanel","destinationsPanel","commoditiesPanel","state","page","sourcesTab","companiesTab","node_types_ids","sources","companies","params","options_type","countries_ids","id","getDashboardPanelData","dashboardElement","getState","activeTab","tab","url","getURLFromParams","key","optionsType","dispatch","type","payload","data","meta","loading","fetch","res","Promise","json","getDashboardPanelSectionTabs","setDashboardActivePanel","activePanelId","setDashboardPanelActiveItemWithSearch","panel","activeItem","setDashboardPanelActiveItem","setDashboardPanelActiveTab","clearDashboardPanel","addActiveIndicator","active","removeActiveIndicator","toRemove","setDashboardPanelPage","direction","setDashboardPanelLoadingItems","loadingItems","getMoreDashboardPanelData","timeoutId","setTimeout","clearTimeout","console","getDashboardPanelSearchResults","filters","undefined","q","query"],"mappings":"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","sourcesContent":["/* eslint-disable camelcase */\nimport {\n  getURLFromParams,\n  GET_DASHBOARD_OPTIONS_URL,\n  GET_DASHBOARD_OPTIONS_TABS_URL,\n  GET_DASHBOARD_SEARCH_RESULTS_URL\n} from 'utils/getURLFromParams';\n\nexport const DASHBOARD_ELEMENT__SET_MORE_PANEL_DATA = 'DASHBOARD_ELEMENT__SET_MORE_PANEL_DATA';\nexport const DASHBOARD_ELEMENT__SET_PANEL_DATA = 'DASHBOARD_ELEMENT__SET_PANEL_DATA';\nexport const DASHBOARD_ELEMENT__SET_ACTIVE_PANEL = 'DASHBOARD_ELEMENT__SET_ACTIVE_PANEL';\nexport const DASHBOARD_ELEMENT__SET_ACTIVE_ITEM = 'DASHBOARD_ELEMENT__SET_ACTIVE_ITEM';\nexport const DASHBOARD_ELEMENT__SET_ACTIVE_TAB = 'DASHBOARD_ELEMENT__SET_ACTIVE_TAB';\nexport const DASHBOARD_ELEMENT__CLEAR_PANEL = 'DASHBOARD_ELEMENT__CLEAR_PANEL';\nexport const DASHBOARD_ELEMENT__ADD_ACTIVE_INDICATOR = 'DASHBOARD_ELEMENT__ADD_ACTIVE_INDICATOR';\nexport const DASHBOARD_ELEMENT__REMOVE_ACTIVE_INDICATOR =\n  'DASHBOARD_ELEMENT__REMOVE_ACTIVE_INDICATOR';\nexport const DASHBOARD_ELEMENT__SET_PANEL_TABS = 'DASHBOARD_ELEMENT__SET_PANEL_TABS';\nexport const DASHBOARD_ELEMENT__SET_PANEL_PAGE = 'DASHBOARD_ELEMENT__SET_PANEL_PAGE';\nexport const DASHBOARD_ELEMENT__SET_LOADING_ITEMS = 'DASHBOARD_ELEMENT__SET_LOADING_ITEMS';\nexport const DASHBOARD_ELEMENT__SET_SEARCH_RESULTS = 'DASHBOARD_ELEMENT__SET_SEARCH_RESULTS';\nexport const DASHBOARD_ELEMENT__SET_ACTIVE_ITEM_WITH_SEARCH =\n  'DASHBOARD_ELEMENT__SET_ACTIVE_ITEM_WITH_SEARCH';\n\nconst getDashboardPanelParams = (state, options_type, options = {}) => {\n  const {\n    countriesPanel,\n    sourcesPanel,\n    companiesPanel,\n    destinationsPanel,\n    commoditiesPanel\n  } = state;\n  const { page } = options;\n  const sourcesTab = sourcesPanel.activeTab && sourcesPanel.activeTab.id;\n  const companiesTab = companiesPanel.activeTab && companiesPanel.activeTab.id;\n\n  const node_types_ids = {\n    sources: sourcesTab,\n    companies: companiesTab\n  }[options_type];\n  const params = {\n    page,\n    options_type,\n    node_types_ids,\n    countries_ids: countriesPanel.activeItem && countriesPanel.activeItem.id\n  };\n\n  if (options_type !== 'sources') {\n    params.sources_ids = sourcesPanel.activeItem && sourcesPanel.activeItem.id;\n  }\n\n  if (options_type !== 'commodities') {\n    params.commodities_ids = commoditiesPanel.activeItem && commoditiesPanel.activeItem.id;\n  }\n\n  if (options_type !== 'destinations') {\n    params.destinations_ids = destinationsPanel.activeItem && destinationsPanel.activeItem.id;\n  }\n\n  if (options_type !== 'companies') {\n    params.companies_ids = companiesPanel.activeItem && companiesPanel.activeItem.id;\n  }\n  return params;\n};\n\nexport const getDashboardPanelData = (optionsType, options) => (dispatch, getState) => {\n  const { dashboardElement } = getState();\n  const { page, activeTab } = dashboardElement[`${dashboardElement.activePanelId}Panel`];\n  const tab = activeTab && activeTab.id;\n  const params = getDashboardPanelParams(dashboardElement, optionsType, { page, ...options });\n  const url = getURLFromParams(GET_DASHBOARD_OPTIONS_URL, params);\n  const key = optionsType !== 'attributes' ? optionsType : 'indicators'; // FIXME\n\n  dispatch({\n    type: DASHBOARD_ELEMENT__SET_PANEL_DATA,\n    payload: { key, tab, data: null, meta: null, loading: true }\n  });\n\n  fetch(url)\n    .then(res => (res.ok ? res.json() : Promise.reject(res.statusText)))\n    .then(json =>\n      dispatch({\n        type: DASHBOARD_ELEMENT__SET_PANEL_DATA,\n        payload: {\n          key,\n          tab,\n          data: json.data,\n          meta: json.meta,\n          loading: false\n        }\n      })\n    );\n};\n\nexport const getDashboardPanelSectionTabs = options_type => (dispatch, getState) => {\n  const params = getDashboardPanelParams(getState().dashboardElement, options_type);\n  const url = getURLFromParams(GET_DASHBOARD_OPTIONS_TABS_URL, params);\n\n  fetch(url)\n    .then(res => (res.ok ? res.json() : Promise.reject(res.statusText)))\n    .then(json =>\n      dispatch({\n        type: DASHBOARD_ELEMENT__SET_PANEL_TABS,\n        payload: {\n          data: json.data\n        }\n      })\n    );\n};\n\nexport const setDashboardActivePanel = activePanelId => ({\n  type: DASHBOARD_ELEMENT__SET_ACTIVE_PANEL,\n  payload: { activePanelId }\n});\n\nexport const setDashboardPanelActiveItemWithSearch = (activeItem, panel) => ({\n  type: DASHBOARD_ELEMENT__SET_ACTIVE_ITEM_WITH_SEARCH,\n  payload: { panel, activeItem }\n});\n\nexport const setDashboardPanelActiveItem = (activeItem, panel) => ({\n  type: DASHBOARD_ELEMENT__SET_ACTIVE_ITEM,\n  payload: { panel, activeItem }\n});\n\nexport const setDashboardPanelActiveTab = (activeTab, panel) => ({\n  type: DASHBOARD_ELEMENT__SET_ACTIVE_TAB,\n  payload: { panel, activeTab }\n});\n\nexport const clearDashboardPanel = panel => ({\n  type: DASHBOARD_ELEMENT__CLEAR_PANEL,\n  payload: { panel }\n});\n\nexport const addActiveIndicator = active => ({\n  type: DASHBOARD_ELEMENT__ADD_ACTIVE_INDICATOR,\n  payload: { active }\n});\n\nexport const removeActiveIndicator = toRemove => ({\n  type: DASHBOARD_ELEMENT__REMOVE_ACTIVE_INDICATOR,\n  payload: { toRemove }\n});\n\nexport const setDashboardPanelPage = (page, direction) => ({\n  type: DASHBOARD_ELEMENT__SET_PANEL_PAGE,\n  payload: { page, direction }\n});\n\nexport const setDashboardPanelLoadingItems = loadingItems => ({\n  type: DASHBOARD_ELEMENT__SET_LOADING_ITEMS,\n  payload: { loadingItems }\n});\n\nexport const getMoreDashboardPanelData = (optionsType, activeTab, direction) => (\n  dispatch,\n  getState\n) => {\n  const { dashboardElement } = getState();\n  const { page } = dashboardElement[`${dashboardElement.activePanelId}Panel`];\n  const params = getDashboardPanelParams(dashboardElement, optionsType, { page });\n  const url = getURLFromParams(GET_DASHBOARD_OPTIONS_URL, params);\n  const key = optionsType !== 'attributes' ? optionsType : 'indicators'; // FIXME\n\n  const timeoutId = setTimeout(() => dispatch(setDashboardPanelLoadingItems(true)), 300);\n\n  fetch(url)\n    .then(res => (res.ok ? res.json() : Promise.reject(res.statusText)))\n    .then(json => {\n      clearTimeout(timeoutId);\n      setTimeout(() => dispatch(setDashboardPanelLoadingItems(false)), 1000);\n      dispatch({\n        type: DASHBOARD_ELEMENT__SET_MORE_PANEL_DATA,\n        payload: {\n          key,\n          tab: activeTab && activeTab.id,\n          direction,\n          data: json.data\n        }\n      });\n    })\n    .catch(err => {\n      console.error(err);\n      dispatch(setDashboardPanelLoadingItems(false));\n    });\n};\n\nexport const getDashboardPanelSearchResults = query => (dispatch, getState) => {\n  if (!query) return;\n  const { dashboardElement } = getState();\n  let optionsType = dashboardElement.activePanelId;\n  if (\n    optionsType === 'sources' &&\n    dashboardElement.sourcesPanel.activeItem === null &&\n    dashboardElement.sourcesPanel.activeTab === null\n  ) {\n    optionsType = 'countries';\n  }\n  const filters = {\n    ...getDashboardPanelParams(dashboardElement, optionsType),\n    node_types_ids: undefined\n  };\n  const params = { ...filters, q: query };\n  const url = getURLFromParams(GET_DASHBOARD_SEARCH_RESULTS_URL, params);\n\n  fetch(url)\n    .then(res => (res.ok ? res.json() : Promise.reject(res.statusText)))\n    .then(json =>\n      dispatch({\n        type: DASHBOARD_ELEMENT__SET_SEARCH_RESULTS,\n        payload: {\n          data: json.data\n        }\n      })\n    )\n    .catch(err => console.error(err));\n};\n"]}]}