{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/react-hot-loader/babel.js\"],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/tool/tool-search/tool-search-result/tool-search-result.component.jsx","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/tool/tool-search/tool-search-result/tool-search-result.component.jsx","mtime":1548345115646},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/.babelrc","mtime":1548840716937},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport LinkButton from '../../../shared/link-button.component';\nimport HighlightTextFragments from '../../../shared/highlight-text-fragments.component';\nimport Button from '../../../shared/button/button.component';\n\nfunction ToolSearchResult(_ref) {\n  var value = _ref.value,\n      onClickAdd = _ref.onClickAdd,\n      selected = _ref.selected,\n      exporterNotSelected = _ref.exporterNotSelected,\n      importerNotSelected = _ref.importerNotSelected,\n      itemProps = _ref.itemProps,\n      isHighlighted = _ref.isHighlighted,\n      item = _ref.item,\n      contextId = _ref.contextId,\n      defaultYear = _ref.defaultYear,\n      isMapVisible = _ref.isMapVisible;\n  var buttonList = [];\n\n  if (selected) {\n    buttonList.push(React.createElement(Button, {\n      key: \"alreadyInSupplyChain\",\n      size: \"rg\",\n      disabled: true\n    }, \"Already in \", isMapVisible ? 'map' : 'supply chain'));\n  } else if (exporterNotSelected === importerNotSelected) {// The weird \"if\" above means that we only do NOT show this button if\n    // node is both importer and exporter, and is added as one of them but no the other to the supply chain.\n    // The \"if\" statement above that ensures it's also not shown if node is both and is selected\n    // Commented out to hide the \"add to supply chain\"/\"add to map\" button\n    // buttonList.push(\n    //   <Button\n    //     key=\"addToSupplyChain\"\n    //     size=\"rg\"\n    //     onClick={e => onClickAdd(e, item)}\n    //   >\n    //     Add to {isMapVisible ? 'map' : 'supply chain'}\n    //   </Button>\n    // );\n  }\n\n  if (!(exporterNotSelected && !importerNotSelected)) {\n    if (exporterNotSelected) {\n      buttonList.push(React.createElement(Button, {\n        key: \"addAsExporter\",\n        onClick: function onClick(e) {\n          return onClickAdd(e, item.exporter);\n        },\n        size: \"rg\"\n      }, \"Add as exporter\"));\n    }\n\n    if (importerNotSelected) {\n      buttonList.push(React.createElement(Button, {\n        key: \"addAsImporter\",\n        onClick: function onClick(e) {\n          return onClickAdd(e, item.importer);\n        },\n        size: \"rg\"\n      }, \"Add as importer\"));\n    }\n  }\n\n  return React.createElement(\"li\", _extends({}, itemProps, {\n    className: cx('c-search-result', {\n      '-highlighted': isHighlighted\n    })\n  }), React.createElement(\"div\", {\n    className: \"search-node-text-container\"\n  }, React.createElement(\"span\", {\n    className: \"search-node-type\"\n  }, item.type), React.createElement(\"span\", {\n    className: \"search-node-name\"\n  }, React.createElement(HighlightTextFragments, {\n    text: item.name,\n    highlight: value\n  }))), React.createElement(\"div\", {\n    className: \"search-node-actions-container\"\n  }, buttonList, item.profileType && item.type.split(' & ').map(function (type) {\n    return React.createElement(LinkButton, {\n      className: \"-medium-large\",\n      key: item.name + type,\n      to: {\n        type: 'profileNode',\n        payload: {\n          profileType: item.profileType,\n          query: {\n            contextId: contextId,\n            year: defaultYear,\n            nodeId: (item[type.toLowerCase()] || item).id\n          }\n        }\n      }\n    }, type, \" profile\");\n  })));\n}\n\nToolSearchResult.propTypes = {\n  item: PropTypes.object,\n  value: PropTypes.string,\n  selected: PropTypes.bool,\n  onClickAdd: PropTypes.func,\n  itemProps: PropTypes.object,\n  isMapVisible: PropTypes.bool,\n  isHighlighted: PropTypes.bool,\n  defaultYear: PropTypes.number,\n  exporterNotSelected: PropTypes.bool,\n  importerNotSelected: PropTypes.bool,\n  contextId: PropTypes.number.isRequired\n};\nvar _default = ToolSearchResult;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_extends, \"_extends\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/tool/tool-search/tool-search-result/tool-search-result.component.jsx\");\n  reactHotLoader.register(ToolSearchResult, \"ToolSearchResult\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/tool/tool-search/tool-search-result/tool-search-result.component.jsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/tool/tool-search/tool-search-result/tool-search-result.component.jsx\");\n  leaveModule(module);\n})();\n\n;\nToolSearchResult.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ToolSearchResult\",\n  \"props\": {\n    \"item\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"value\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"selected\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onClickAdd\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"itemProps\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isMapVisible\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isHighlighted\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"defaultYear\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"exporterNotSelected\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"importerNotSelected\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"contextId\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/tool/tool-search/tool-search-result/tool-search-result.component.jsx"],"names":["value","onClickAdd","selected","exporterNotSelected","importerNotSelected","itemProps","isHighlighted","item","contextId","defaultYear","isMapVisible","buttonList","cx","type","payload","profileType","query","year","nodeId","id","ToolSearchResult","PropTypes","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport LinkButton from '../../../shared/link-button.component';\nimport HighlightTextFragments from '../../../shared/highlight-text-fragments.component';\nimport Button from '../../../shared/button/button.component';\n\nfunction ToolSearchResult({\n  value,\n  onClickAdd,\n  selected,\n  exporterNotSelected,\n  importerNotSelected,\n  itemProps,\n  isHighlighted,\n  item,\n  contextId,\n  defaultYear,\n  isMapVisible\n}) {\n  const buttonList = [];\n\n  if (selected) {\n    buttonList.push(\n      <Button key=\"alreadyInSupplyChain\" size=\"rg\" disabled>\n        Already in {isMapVisible ? 'map' : 'supply chain'}\n      </Button>\n    );\n  } else if (exporterNotSelected === importerNotSelected) {\n    // The weird \"if\" above means that we only do NOT show this button if\n    // node is both importer and exporter, and is added as one of them but no the other to the supply chain.\n    // The \"if\" statement above that ensures it's also not shown if node is both and is selected\n    // Commented out to hide the \"add to supply chain\"/\"add to map\" button\n    // buttonList.push(\n    //   <Button\n    //     key=\"addToSupplyChain\"\n    //     size=\"rg\"\n    //     onClick={e => onClickAdd(e, item)}\n    //   >\n    //     Add to {isMapVisible ? 'map' : 'supply chain'}\n    //   </Button>\n    // );\n  }\n\n  if (!(exporterNotSelected && !importerNotSelected)) {\n    if (exporterNotSelected) {\n      buttonList.push(\n        <Button key=\"addAsExporter\" onClick={e => onClickAdd(e, item.exporter)} size=\"rg\">\n          Add as exporter\n        </Button>\n      );\n    }\n\n    if (importerNotSelected) {\n      buttonList.push(\n        <Button key=\"addAsImporter\" onClick={e => onClickAdd(e, item.importer)} size=\"rg\">\n          Add as importer\n        </Button>\n      );\n    }\n  }\n\n  return (\n    <li {...itemProps} className={cx('c-search-result', { '-highlighted': isHighlighted })}>\n      <div className=\"search-node-text-container\">\n        <span className=\"search-node-type\">{item.type}</span>\n        <span className=\"search-node-name\">\n          <HighlightTextFragments text={item.name} highlight={value} />\n        </span>\n      </div>\n      <div className=\"search-node-actions-container\">\n        {buttonList}\n        {item.profileType &&\n          item.type.split(' & ').map(type => (\n            <LinkButton\n              className=\"-medium-large\"\n              key={item.name + type}\n              to={{\n                type: 'profileNode',\n                payload: {\n                  profileType: item.profileType,\n                  query: {\n                    contextId,\n                    year: defaultYear,\n                    nodeId: (item[type.toLowerCase()] || item).id\n                  }\n                }\n              }}\n            >\n              {type} profile\n            </LinkButton>\n          ))}\n      </div>\n    </li>\n  );\n}\n\nToolSearchResult.propTypes = {\n  item: PropTypes.object,\n  value: PropTypes.string,\n  selected: PropTypes.bool,\n  onClickAdd: PropTypes.func,\n  itemProps: PropTypes.object,\n  isMapVisible: PropTypes.bool,\n  isHighlighted: PropTypes.bool,\n  defaultYear: PropTypes.number,\n  exporterNotSelected: PropTypes.bool,\n  importerNotSelected: PropTypes.bool,\n  contextId: PropTypes.number.isRequired\n};\n\nexport default ToolSearchResult;\n"]}]}