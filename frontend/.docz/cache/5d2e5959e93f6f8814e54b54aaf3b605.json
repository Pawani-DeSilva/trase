{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/react-hot-loader/babel.js\"],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/tool/column-selector/column-selector.component.jsx","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/tool/column-selector/column-selector.component.jsx","mtime":1548345115642},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/.babelrc","mtime":1548840716937},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions,jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport FiltersDropdown from 'react-components/nav/filters-nav/filters-dropdown.component';\nimport RecolorByNodeLegendSummary from 'react-components/nav/filters-nav/recolor-by-selector/recolor-by-node-legend-summary/recolor-by-node-legend-summary.container';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\n\nfunction columnSelector(_ref) {\n  var onToggle = _ref.onToggle,\n      onColumnSelected = _ref.onColumnSelected,\n      currentDropdown = _ref.currentDropdown,\n      group = _ref.group,\n      allColumns = _ref.allColumns,\n      selectedColumnsIds = _ref.selectedColumnsIds,\n      nodesColoredAtColumn = _ref.nodesColoredAtColumn;\n  var id = \"column\".concat(group);\n  var columnItems = allColumns.filter(function (column) {\n    return column.group === group;\n  });\n  var selectedColumnItem = columnItems.filter(function (column) {\n    return column.id === selectedColumnsIds[group];\n  })[0];\n\n  if (typeof selectedColumnItem === 'undefined') {\n    return null;\n  }\n\n  var hasSingleElement = columnItems.length <= 1;\n  return React.createElement(\"div\", {\n    className: cx('js-dropdown c-dropdown -column-selector', {\n      '-hide-only-child': hasSingleElement\n    }),\n    onClick: function onClick() {\n      onToggle(id);\n    }\n  }, React.createElement(\"span\", {\n    className: cx('dropdown-title', {\n      '-is-open': currentDropdown === id\n    })\n  }, selectedColumnItem.name), nodesColoredAtColumn === group && React.createElement(RecolorByNodeLegendSummary, null), React.createElement(FiltersDropdown, {\n    id: id,\n    currentDropdown: currentDropdown,\n    onClickOutside: onToggle\n  }, React.createElement(\"ul\", {\n    className: \"dropdown-list\"\n  }, columnItems.map(function (columnItem, index) {\n    return React.createElement(\"li\", {\n      key: index,\n      className: \"dropdown-item\",\n      onClick: function onClick() {\n        return onColumnSelected(group, columnItem.id);\n      }\n    }, columnItem.name);\n  }))));\n}\n\ncolumnSelector.propTypes = {\n  onToggle: PropTypes.func,\n  onColumnSelected: PropTypes.func,\n  currentDropdown: PropTypes.string,\n  group: PropTypes.number,\n  allColumns: PropTypes.array,\n  selectedColumnsIds: PropTypes.array,\n  nodesColoredAtColumn: PropTypes.number\n};\nvar _default = columnSelector;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(columnSelector, \"columnSelector\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/tool/column-selector/column-selector.component.jsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/tool/column-selector/column-selector.component.jsx\");\n  leaveModule(module);\n})();\n\n;\ncolumnSelector.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"columnSelector\",\n  \"props\": {\n    \"onToggle\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onColumnSelected\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"currentDropdown\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"group\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"allColumns\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"selectedColumnsIds\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"nodesColoredAtColumn\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/tool/column-selector/column-selector.component.jsx"],"names":["onToggle","onColumnSelected","currentDropdown","group","allColumns","selectedColumnsIds","nodesColoredAtColumn","id","columnItems","column","selectedColumnItem","hasSingleElement","cx","columnItem","columnSelector","PropTypes","number"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/no-noninteractive-element-interactions,jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport FiltersDropdown from 'react-components/nav/filters-nav/filters-dropdown.component';\nimport RecolorByNodeLegendSummary from 'react-components/nav/filters-nav/recolor-by-selector/recolor-by-node-legend-summary/recolor-by-node-legend-summary.container';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\n\nfunction columnSelector({\n  onToggle,\n  onColumnSelected,\n  currentDropdown,\n  group,\n  allColumns,\n  selectedColumnsIds,\n  nodesColoredAtColumn\n}) {\n  const id = `column${group}`;\n  const columnItems = allColumns.filter(column => column.group === group);\n  const selectedColumnItem = columnItems.filter(\n    column => column.id === selectedColumnsIds[group]\n  )[0];\n\n  if (typeof selectedColumnItem === 'undefined') {\n    return null;\n  }\n\n  const hasSingleElement = columnItems.length <= 1;\n\n  return (\n    <div\n      className={cx('js-dropdown c-dropdown -column-selector', {\n        '-hide-only-child': hasSingleElement\n      })}\n      onClick={() => {\n        onToggle(id);\n      }}\n    >\n      <span className={cx('dropdown-title', { '-is-open': currentDropdown === id })}>\n        {selectedColumnItem.name}\n      </span>\n      {nodesColoredAtColumn === group && <RecolorByNodeLegendSummary />}\n      <FiltersDropdown id={id} currentDropdown={currentDropdown} onClickOutside={onToggle}>\n        <ul className=\"dropdown-list\">\n          {columnItems.map((columnItem, index) => (\n            <li\n              key={index}\n              className=\"dropdown-item\"\n              onClick={() => onColumnSelected(group, columnItem.id)}\n            >\n              {columnItem.name}\n            </li>\n          ))}\n        </ul>\n      </FiltersDropdown>\n    </div>\n  );\n}\n\ncolumnSelector.propTypes = {\n  onToggle: PropTypes.func,\n  onColumnSelected: PropTypes.func,\n  currentDropdown: PropTypes.string,\n  group: PropTypes.number,\n  allColumns: PropTypes.array,\n  selectedColumnsIds: PropTypes.array,\n  nodesColoredAtColumn: PropTypes.number\n};\n\nexport default columnSelector;\n"]}]}