{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/react-hot-loader/babel.js\"],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/reducers/helpers/splitVisibleNodesByColumn.js","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/reducers/helpers/splitVisibleNodesByColumn.js","mtime":1543486759574},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/.babelrc","mtime":1548840716937},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\n/* eslint-disable camelcase,import/no-extraneous-dependencies */\nimport { nest as d3_nest } from 'd3-collection';\n\nvar _default = function _default(nodes) {\n  var columns = d3_nest().key(function (el) {\n    return el.columnGroup;\n  }).sortKeys(function (a, b) {\n    return parseInt(a, 10) < parseInt(b, 10) ? -1 : 1;\n  }).entries(nodes);\n  columns.forEach(function (column) {\n    column.columnId = parseInt(column.key, 10); // flag node as belonging to a single-node column\n\n    column.values[0].isAloneInColumn = column.values.length === 1;\n  });\n  return columns;\n};\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_default, \"default\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/reducers/helpers/splitVisibleNodesByColumn.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/reducers/helpers/splitVisibleNodesByColumn.js"],"names":["nest","columns","el","parseInt","column"],"mappings":";;;;;;AAAA;AACA,SAASA,IAAI,IAAb,OAAA,QAAA,eAAA;;eAEe,kBAAA,KAAA,EAAgB;AAC7B,MAAMC,OAAO,GAAG,OAAO,GAAP,GAAA,CACT,UAAA,EAAA,EAAE;AAAA,WAAIC,EAAE,CAAN,WAAA;AADO,GAAA,EAAA,QAAA,CAEJ,UAAA,CAAA,EAAA,CAAA,EAAA;AAAA,WAAWC,QAAQ,CAAA,CAAA,EAARA,EAAQ,CAARA,GAAkBA,QAAQ,CAAA,CAAA,EAA1BA,EAA0B,CAA1BA,GAAoC,CAApCA,CAAAA,GAAX,CAAA;AAFI,GAAA,EAAA,OAAA,CAAhB,KAAgB,CAAhB;AAKAF,EAAAA,OAAO,CAAPA,OAAAA,CAAgB,UAAA,MAAA,EAAU;AACxBG,IAAAA,MAAM,CAANA,QAAAA,GAAkBD,QAAQ,CAACC,MAAM,CAAP,GAAA,EADF,EACE,CAA1BA,CADwB,CAGxB;;AACAA,IAAAA,MAAM,CAANA,MAAAA,CAAAA,CAAAA,EAAAA,eAAAA,GAAmCA,MAAM,CAANA,MAAAA,CAAAA,MAAAA,KAAnCA,CAAAA;AAJFH,GAAAA;AAOA,SAAA,OAAA;AACD,C;;AAdD","sourcesContent":["/* eslint-disable camelcase,import/no-extraneous-dependencies */\nimport { nest as d3_nest } from 'd3-collection';\n\nexport default function(nodes) {\n  const columns = d3_nest()\n    .key(el => el.columnGroup)\n    .sortKeys((a, b) => (parseInt(a, 10) < parseInt(b, 10) ? -1 : 1))\n    .entries(nodes);\n\n  columns.forEach(column => {\n    column.columnId = parseInt(column.key, 10);\n\n    // flag node as belonging to a single-node column\n    column.values[0].isAloneInColumn = column.values.length === 1;\n  });\n\n  return columns;\n}\n"]}]}