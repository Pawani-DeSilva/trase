{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/react-hot-loader/babel.js\"],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/utils/stateURL.js","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/utils/stateURL.js","mtime":1548840716987},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/.babelrc","mtime":1548840716937},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* eslint-disable */\n\n\nimport isEmpty from 'lodash/isEmpty';\nimport pickBy from 'lodash/pickBy';\nimport qs from 'qs';\nimport { LOAD_STATE_FROM_URL } from 'scripts/actions/app.actions';\nimport { getContextById } from 'scripts/reducers/helpers/contextHelper';\nimport getPageTitle from 'scripts/router/page-title'; // remove all params that are now in the state\n\nvar removeEmptyParams = function removeEmptyParams(params) {\n  return pickBy(params, function (param) {\n    return typeof param !== 'undefined';\n  });\n};\n\nvar appStateToURLParams = function appStateToURLParams(state) {\n  if (isEmpty(state.app) || isEmpty(state.tool)) {\n    return {};\n  }\n\n  return {\n    selectedContextId: state.app.selectedContext ? state.app.selectedContext.id : null,\n    selectedYears: state.app.selectedYears,\n    detailedView: state.tool.detailedView,\n    selectedNodesIds: state.tool.selectedNodesIds,\n    expandedNodesIds: state.tool.expandedNodesIds,\n    areNodesExpanded: state.tool.areNodesExpanded,\n    selectedColumnsIds: state.tool.selectedColumnsIds,\n    selectedMapDimensions: state.tool.selectedMapDimensions,\n    isMapVisible: state.tool.isMapVisible,\n    mapView: state.tool.mapView,\n    expandedMapSidebarGroupsIds: state.tool.expandedMapSidebarGroupsIds,\n    selectedMapContextualLayers: state.tool.selectedMapContextualLayers,\n    selectedMapBasemap: state.tool.selectedMapBasemap,\n    selectedResizeByName: state.tool.selectedResizeBy ? state.tool.selectedResizeBy.name : state.tool.selectedResizeByName,\n    selectedRecolorByName: state.tool.selectedRecolorBy ? state.tool.selectedRecolorBy.name : state.tool.selectedRecolorByName,\n    selectedBiomeFilterName: state.tool.selectedBiomeFilter ? state.tool.selectedBiomeFilter.name : state.tool.selectedBiomeFilterName\n  };\n};\n\nvar _getBoolValue = function _getBoolValue(value) {\n  if (typeof value === 'undefined') {\n    return undefined;\n  }\n\n  return value === true || value === 'true';\n};\n\nvar _getIntValue = function _getIntValue(value) {\n  if (typeof value === 'undefined') {\n    return undefined;\n  }\n\n  return parseInt(value, 10);\n};\n\nvar _getIntArrayValue = function _getIntArrayValue(value) {\n  if (typeof value === 'undefined') {\n    return undefined;\n  }\n\n  return value.map(function (i) {\n    return parseInt(i, 10);\n  });\n};\n\nvar URLParamsToAppState = function URLParamsToAppState(params, state) {\n  var appReducerState = removeEmptyParams({\n    initialSelectedContextIdFromURL: _getIntValue(params.selectedContextId),\n    selectedYears: _getIntArrayValue(params.selectedYears)\n  });\n\n  if (typeof appReducerState.initialSelectedContextIdFromURL !== 'undefined' && state.app.contexts.length > 0) {\n    appReducerState.selectedContext = getContextById(state, appReducerState.initialSelectedContextIdFromURL);\n  }\n\n  var toolReducerState = removeEmptyParams({\n    detailedView: _getBoolValue(params.detailedView),\n    selectedNodesIds: _getIntArrayValue(params.selectedNodesIds),\n    expandedNodesIds: _getIntArrayValue(params.expandedNodesIds),\n    areNodesExpanded: _getBoolValue(params.areNodesExpanded),\n    selectedColumnsIds: _getIntArrayValue(params.selectedColumnsIds),\n    selectedMapDimensions: params.selectedMapDimensions,\n    isMapVisible: _getBoolValue(params.isMapVisible),\n    mapView: params.mapView,\n    expandedMapSidebarGroupsIds: _getIntArrayValue(params.expandedMapSidebarGroupsIds),\n    selectedMapContextualLayers: params.selectedMapContextualLayers,\n    selectedMapBasemap: params.selectedMapBasemap,\n    selectedResizeByName: params.selectedResizeByName,\n    selectedRecolorByName: params.selectedRecolorByName,\n    selectedBiomeFilterName: params.selectedBiomeFilterName\n  });\n  return {\n    app: appReducerState,\n    tool: toolReducerState\n  };\n};\n\nexport var filterStateToURL = function filterStateToURL(state) {\n  if (isEmpty(state)) {\n    return {};\n  }\n\n  return appStateToURLParams(state);\n};\nexport var encodeStateToURL = function encodeStateToURL(state) {\n  var urlProps = JSON.stringify(filterStateToURL(state));\n  return USE_PLAIN_URL_STATE ? urlProps : btoa(urlProps);\n};\nexport var decodeStateFromURL = function decodeStateFromURL(state) {\n  if (typeof state === 'string') {\n    return USE_PLAIN_URL_STATE ? JSON.parse(state) : JSON.parse(atob(state));\n  }\n\n  return state;\n};\nexport var parse = function parse(url) {\n  var params = qs.parse(url, {\n    arrayLimit: 1000\n  });\n\n  if (params.state) {\n    return decodeStateFromURL(params.state);\n  }\n\n  return params;\n};\nexport var stringify = function stringify(params) {\n  return qs.stringify(params, {\n    encodeValuesOnly: true\n  });\n};\n\nvar stateToURLObject = function stateToURLObject(state, location) {\n  if (location.type === 'tool') {\n    return {\n      state: encodeStateToURL(state)\n    };\n  }\n\n  return _objectSpread({}, location.query);\n};\n\nexport var rehydrateAppStateFromToolURL = function rehydrateAppStateFromToolURL(action, next, state) {\n  var urlState = null;\n\n  if (action.payload && action.payload.query && action.payload.query.state) {\n    // Loads state from internal calls (like \"map\" menu link)\n    urlState = _objectSpread({}, action.payload.query.state);\n  } else if (action && action.meta && action.meta.query) {\n    // Loads state from URL query param on page load\n    urlState = _objectSpread({}, action.meta.query);\n  } // need to rehydrate state\n\n\n  if (urlState) {\n    next({\n      type: LOAD_STATE_FROM_URL,\n      payload: URLParamsToAppState(urlState, state)\n    });\n  }\n};\nexport var toolUrlStateMiddleware = function toolUrlStateMiddleware(store) {\n  return function (next) {\n    return function (action) {\n      if (action.type === 'tool') {\n        rehydrateAppStateFromToolURL(action, next, store.getState());\n      }\n\n      var result = next(action);\n      var state = store.getState();\n      var location = state.location; // next state\n\n      window.history.replaceState(filterStateToURL(state), getPageTitle(state), location.pathname + '?' + stringify(stateToURLObject(state, location)));\n      return result;\n    };\n  };\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_objectSpread, \"_objectSpread\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/utils/stateURL.js\");\n  reactHotLoader.register(_defineProperty, \"_defineProperty\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/utils/stateURL.js\");\n  reactHotLoader.register(removeEmptyParams, \"removeEmptyParams\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/utils/stateURL.js\");\n  reactHotLoader.register(appStateToURLParams, \"appStateToURLParams\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/utils/stateURL.js\");\n  reactHotLoader.register(_getBoolValue, \"_getBoolValue\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/utils/stateURL.js\");\n  reactHotLoader.register(_getIntValue, \"_getIntValue\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/utils/stateURL.js\");\n  reactHotLoader.register(_getIntArrayValue, \"_getIntArrayValue\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/utils/stateURL.js\");\n  reactHotLoader.register(URLParamsToAppState, \"URLParamsToAppState\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/utils/stateURL.js\");\n  reactHotLoader.register(filterStateToURL, \"filterStateToURL\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/utils/stateURL.js\");\n  reactHotLoader.register(encodeStateToURL, \"encodeStateToURL\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/utils/stateURL.js\");\n  reactHotLoader.register(decodeStateFromURL, \"decodeStateFromURL\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/utils/stateURL.js\");\n  reactHotLoader.register(parse, \"parse\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/utils/stateURL.js\");\n  reactHotLoader.register(stringify, \"stringify\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/utils/stateURL.js\");\n  reactHotLoader.register(stateToURLObject, \"stateToURLObject\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/utils/stateURL.js\");\n  reactHotLoader.register(rehydrateAppStateFromToolURL, \"rehydrateAppStateFromToolURL\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/utils/stateURL.js\");\n  reactHotLoader.register(toolUrlStateMiddleware, \"toolUrlStateMiddleware\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/utils/stateURL.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/utils/stateURL.js"],"names":["removeEmptyParams","pickBy","appStateToURLParams","isEmpty","state","selectedContextId","selectedYears","detailedView","selectedNodesIds","expandedNodesIds","areNodesExpanded","selectedColumnsIds","selectedMapDimensions","isMapVisible","mapView","expandedMapSidebarGroupsIds","selectedMapContextualLayers","selectedMapBasemap","selectedResizeByName","selectedRecolorByName","selectedBiomeFilterName","_getBoolValue","value","_getIntValue","parseInt","_getIntArrayValue","URLParamsToAppState","appReducerState","initialSelectedContextIdFromURL","params","getContextById","toolReducerState","app","tool","filterStateToURL","encodeStateToURL","urlProps","JSON","USE_PLAIN_URL_STATE","btoa","decodeStateFromURL","atob","parse","arrayLimit","stringify","encodeValuesOnly","stateToURLObject","location","rehydrateAppStateFromToolURL","urlState","action","next","type","payload","toolUrlStateMiddleware","store","result","window","getPageTitle"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport isEmpty from 'lodash/isEmpty';\nimport pickBy from 'lodash/pickBy';\nimport qs from 'qs';\nimport { LOAD_STATE_FROM_URL } from 'scripts/actions/app.actions';\nimport { getContextById } from 'scripts/reducers/helpers/contextHelper';\nimport getPageTitle from 'scripts/router/page-title';\n\n// remove all params that are now in the state\nconst removeEmptyParams = params => pickBy(params, param => typeof param !== 'undefined');\n\nconst appStateToURLParams = state => {\n  if (isEmpty(state.app) || isEmpty(state.tool)) {\n    return {};\n  }\n\n  return {\n    selectedContextId: state.app.selectedContext ? state.app.selectedContext.id : null,\n    selectedYears: state.app.selectedYears,\n    detailedView: state.tool.detailedView,\n    selectedNodesIds: state.tool.selectedNodesIds,\n    expandedNodesIds: state.tool.expandedNodesIds,\n    areNodesExpanded: state.tool.areNodesExpanded,\n    selectedColumnsIds: state.tool.selectedColumnsIds,\n    selectedMapDimensions: state.tool.selectedMapDimensions,\n    isMapVisible: state.tool.isMapVisible,\n    mapView: state.tool.mapView,\n    expandedMapSidebarGroupsIds: state.tool.expandedMapSidebarGroupsIds,\n    selectedMapContextualLayers: state.tool.selectedMapContextualLayers,\n    selectedMapBasemap: state.tool.selectedMapBasemap,\n    selectedResizeByName: state.tool.selectedResizeBy\n      ? state.tool.selectedResizeBy.name\n      : state.tool.selectedResizeByName,\n    selectedRecolorByName: state.tool.selectedRecolorBy\n      ? state.tool.selectedRecolorBy.name\n      : state.tool.selectedRecolorByName,\n    selectedBiomeFilterName: state.tool.selectedBiomeFilter\n      ? state.tool.selectedBiomeFilter.name\n      : state.tool.selectedBiomeFilterName\n  };\n};\n\nconst _getBoolValue = value => {\n  if (typeof value === 'undefined') {\n    return undefined;\n  }\n\n  return value === true || value === 'true';\n};\n\nconst _getIntValue = value => {\n  if (typeof value === 'undefined') {\n    return undefined;\n  }\n\n  return parseInt(value, 10);\n};\n\nconst _getIntArrayValue = value => {\n  if (typeof value === 'undefined') {\n    return undefined;\n  }\n\n  return value.map(i => parseInt(i, 10));\n};\n\nconst URLParamsToAppState = (params, state) => {\n  const appReducerState = removeEmptyParams({\n    initialSelectedContextIdFromURL: _getIntValue(params.selectedContextId),\n    selectedYears: _getIntArrayValue(params.selectedYears)\n  });\n\n  if (\n    typeof appReducerState.initialSelectedContextIdFromURL !== 'undefined' &&\n    state.app.contexts.length > 0\n  ) {\n    appReducerState.selectedContext = getContextById(\n      state,\n      appReducerState.initialSelectedContextIdFromURL\n    );\n  }\n\n  const toolReducerState = removeEmptyParams({\n    detailedView: _getBoolValue(params.detailedView),\n    selectedNodesIds: _getIntArrayValue(params.selectedNodesIds),\n    expandedNodesIds: _getIntArrayValue(params.expandedNodesIds),\n    areNodesExpanded: _getBoolValue(params.areNodesExpanded),\n    selectedColumnsIds: _getIntArrayValue(params.selectedColumnsIds),\n    selectedMapDimensions: params.selectedMapDimensions,\n    isMapVisible: _getBoolValue(params.isMapVisible),\n    mapView: params.mapView,\n    expandedMapSidebarGroupsIds: _getIntArrayValue(params.expandedMapSidebarGroupsIds),\n    selectedMapContextualLayers: params.selectedMapContextualLayers,\n    selectedMapBasemap: params.selectedMapBasemap,\n    selectedResizeByName: params.selectedResizeByName,\n    selectedRecolorByName: params.selectedRecolorByName,\n    selectedBiomeFilterName: params.selectedBiomeFilterName\n  });\n\n  return {\n    app: appReducerState,\n    tool: toolReducerState\n  };\n};\n\nexport const filterStateToURL = state => {\n  if (isEmpty(state)) {\n    return {};\n  }\n\n  return appStateToURLParams(state);\n};\n\nexport const encodeStateToURL = state => {\n  const urlProps = JSON.stringify(filterStateToURL(state));\n  return USE_PLAIN_URL_STATE ? urlProps : btoa(urlProps);\n};\n\nexport const decodeStateFromURL = state => {\n  if (typeof state === 'string') {\n    return USE_PLAIN_URL_STATE ? JSON.parse(state) : JSON.parse(atob(state));\n  }\n  return state;\n};\n\nexport const parse = url => {\n  const params = qs.parse(url, { arrayLimit: 1000 });\n  if (params.state) {\n    return decodeStateFromURL(params.state);\n  }\n  return params;\n};\n\nexport const stringify = params => {\n  return qs.stringify(params, { encodeValuesOnly: true });\n};\n\nconst stateToURLObject = (state, location) => {\n  if (location.type === 'tool') {\n    return { state: encodeStateToURL(state) };\n  }\n\n  return { ...location.query };\n};\n\nexport const rehydrateAppStateFromToolURL = (action, next, state) => {\n  let urlState = null;\n  if (action.payload && action.payload.query && action.payload.query.state) {\n    // Loads state from internal calls (like \"map\" menu link)\n    urlState = { ...action.payload.query.state };\n  } else if (action && action.meta && action.meta.query) {\n    // Loads state from URL query param on page load\n    urlState = { ...action.meta.query };\n  }\n  // need to rehydrate state\n  if (urlState) {\n    next({\n      type: LOAD_STATE_FROM_URL,\n      payload: URLParamsToAppState(urlState, state)\n    });\n  }\n};\n\nexport const toolUrlStateMiddleware = store => next => action => {\n  if (action.type === 'tool') {\n    rehydrateAppStateFromToolURL(action, next, store.getState());\n  }\n\n  const result = next(action);\n  const state = store.getState();\n  const { location } = state; // next state\n\n  window.history.replaceState(\n    filterStateToURL(state),\n    getPageTitle(state),\n    location.pathname + '?' + stringify(stateToURLObject(state, location))\n  );\n\n  return result;\n};\n"]}]}