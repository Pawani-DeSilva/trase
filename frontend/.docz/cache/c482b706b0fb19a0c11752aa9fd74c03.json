{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/react-hot-loader/babel.js\"],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-panel/companies-panel.component.jsx","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-panel/companies-panel.component.jsx","mtime":1548345115506},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/.babelrc","mtime":1548840716937},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SearchInput from 'react-components/shared/search-input/search-input.component';\nimport GridList from 'react-components/shared/grid-list/grid-list.component';\nimport GridListItem from 'react-components/shared/grid-list-item/grid-list-item.component';\nimport Tabs from 'react-components/shared/tabs/tabs.component';\n\nfunction CompaniesPanel(props) {\n  var tabs = props.tabs,\n      page = props.page,\n      loadingMoreItems = props.loadingMoreItems,\n      loading = props.loading,\n      searchCompanies = props.searchCompanies,\n      companies = props.companies,\n      getMoreItems = props.getMoreItems,\n      setSearchResult = props.setSearchResult,\n      getSearchResults = props.getSearchResults,\n      nodeTypeRenderer = props.nodeTypeRenderer,\n      onSelectNodeTypeTab = props.onSelectNodeTypeTab,\n      onSelectCompany = props.onSelectCompany,\n      activeNodeTypeTab = props.activeNodeTypeTab,\n      activeCompany = props.activeCompany;\n  return React.createElement(React.Fragment, null, React.createElement(SearchInput, {\n    variant: \"secondary\",\n    size: \"sm\",\n    className: \"dashboard-panel-search\",\n    items: searchCompanies,\n    placeholder: \"Search company\",\n    onSelect: setSearchResult,\n    nodeTypeRenderer: nodeTypeRenderer,\n    onSearchTermChange: getSearchResults\n  }), React.createElement(Tabs, {\n    tabs: tabs,\n    onSelectTab: onSelectNodeTypeTab,\n    selectedTab: activeNodeTypeTab && activeNodeTypeTab.id,\n    itemTabRenderer: function itemTabRenderer(i) {\n      return i.name;\n    },\n    getTabId: function getTabId(item) {\n      return item.id;\n    }\n  }, activeNodeTypeTab && React.createElement(GridList, {\n    className: \"dashboard-panel-pill-list\",\n    items: companies,\n    height: companies.length > 5 ? 200 : 50,\n    width: 950,\n    rowHeight: 50,\n    columnWidth: 190,\n    columnCount: 5,\n    getMoreItems: getMoreItems,\n    page: page,\n    loadingMoreItems: loadingMoreItems,\n    loading: loading\n  }, function (itemProps) {\n    return React.createElement(GridListItem, _extends({}, itemProps, {\n      isActive: (activeCompany && activeCompany.id) === (itemProps.item && itemProps.item.id),\n      enableItem: onSelectCompany,\n      disableItem: function disableItem() {\n        return onSelectCompany(null);\n      }\n    }));\n  })));\n}\n\nCompaniesPanel.propTypes = {\n  companies: PropTypes.array,\n  tabs: PropTypes.array.isRequired,\n  activeCompany: PropTypes.object,\n  page: PropTypes.number.isRequired,\n  loadingMoreItems: PropTypes.bool,\n  loading: PropTypes.bool,\n  activeNodeTypeTab: PropTypes.object,\n  getMoreItems: PropTypes.func.isRequired,\n  setSearchResult: PropTypes.func.isRequired,\n  getSearchResults: PropTypes.func.isRequired,\n  onSelectCompany: PropTypes.func.isRequired,\n  searchCompanies: PropTypes.array.isRequired,\n  nodeTypeRenderer: PropTypes.func.isRequired,\n  onSelectNodeTypeTab: PropTypes.func.isRequired\n};\nCompaniesPanel.defaultProps = {\n  companies: [],\n  activeNodeTypeTab: null\n};\nvar _default = CompaniesPanel;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_extends, \"_extends\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-panel/companies-panel.component.jsx\");\n  reactHotLoader.register(CompaniesPanel, \"CompaniesPanel\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-panel/companies-panel.component.jsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-panel/companies-panel.component.jsx\");\n  leaveModule(module);\n})();\n\n;\nCompaniesPanel.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"CompaniesPanel\",\n  \"props\": {\n    \"companies\": {\n      \"defaultValue\": {\n        \"value\": \"[]\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"activeNodeTypeTab\": {\n      \"defaultValue\": {\n        \"value\": \"null\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"tabs\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"activeCompany\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"page\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"loadingMoreItems\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"loading\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"getMoreItems\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"setSearchResult\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"getSearchResults\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"onSelectCompany\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"searchCompanies\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"nodeTypeRenderer\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"onSelectNodeTypeTab\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-panel/companies-panel.component.jsx"],"names":["tabs","page","loadingMoreItems","loading","searchCompanies","companies","getMoreItems","setSearchResult","getSearchResults","nodeTypeRenderer","onSelectNodeTypeTab","onSelectCompany","activeNodeTypeTab","activeCompany","props","i","item","itemProps","CompaniesPanel","PropTypes","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport SearchInput from 'react-components/shared/search-input/search-input.component';\nimport GridList from 'react-components/shared/grid-list/grid-list.component';\nimport GridListItem from 'react-components/shared/grid-list-item/grid-list-item.component';\nimport Tabs from 'react-components/shared/tabs/tabs.component';\n\nfunction CompaniesPanel(props) {\n  const {\n    tabs,\n    page,\n    loadingMoreItems,\n    loading,\n    searchCompanies,\n    companies,\n    getMoreItems,\n    setSearchResult,\n    getSearchResults,\n    nodeTypeRenderer,\n    onSelectNodeTypeTab,\n    onSelectCompany,\n    activeNodeTypeTab,\n    activeCompany\n  } = props;\n  return (\n    <React.Fragment>\n      <SearchInput\n        variant=\"secondary\"\n        size=\"sm\"\n        className=\"dashboard-panel-search\"\n        items={searchCompanies}\n        placeholder=\"Search company\"\n        onSelect={setSearchResult}\n        nodeTypeRenderer={nodeTypeRenderer}\n        onSearchTermChange={getSearchResults}\n      />\n      <Tabs\n        tabs={tabs}\n        onSelectTab={onSelectNodeTypeTab}\n        selectedTab={activeNodeTypeTab && activeNodeTypeTab.id}\n        itemTabRenderer={i => i.name}\n        getTabId={item => item.id}\n      >\n        {activeNodeTypeTab && (\n          <GridList\n            className=\"dashboard-panel-pill-list\"\n            items={companies}\n            height={companies.length > 5 ? 200 : 50}\n            width={950}\n            rowHeight={50}\n            columnWidth={190}\n            columnCount={5}\n            getMoreItems={getMoreItems}\n            page={page}\n            loadingMoreItems={loadingMoreItems}\n            loading={loading}\n          >\n            {itemProps => (\n              <GridListItem\n                {...itemProps}\n                isActive={\n                  (activeCompany && activeCompany.id) === (itemProps.item && itemProps.item.id)\n                }\n                enableItem={onSelectCompany}\n                disableItem={() => onSelectCompany(null)}\n              />\n            )}\n          </GridList>\n        )}\n      </Tabs>\n    </React.Fragment>\n  );\n}\n\nCompaniesPanel.propTypes = {\n  companies: PropTypes.array,\n  tabs: PropTypes.array.isRequired,\n  activeCompany: PropTypes.object,\n  page: PropTypes.number.isRequired,\n  loadingMoreItems: PropTypes.bool,\n  loading: PropTypes.bool,\n  activeNodeTypeTab: PropTypes.object,\n  getMoreItems: PropTypes.func.isRequired,\n  setSearchResult: PropTypes.func.isRequired,\n  getSearchResults: PropTypes.func.isRequired,\n  onSelectCompany: PropTypes.func.isRequired,\n  searchCompanies: PropTypes.array.isRequired,\n  nodeTypeRenderer: PropTypes.func.isRequired,\n  onSelectNodeTypeTab: PropTypes.func.isRequired\n};\n\nCompaniesPanel.defaultProps = {\n  companies: [],\n  activeNodeTypeTab: null\n};\n\nexport default CompaniesPanel;\n"]}]}