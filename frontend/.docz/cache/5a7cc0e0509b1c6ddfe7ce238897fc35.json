{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/react-hot-loader/babel.js\"],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/data-portal/data-portal-page.component.jsx","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/data-portal/data-portal-page.component.jsx","mtime":1548345115527},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/.babelrc","mtime":1548840716937},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n\nimport React, { Component } from 'react';\nimport cx from 'classnames';\nimport xor from 'lodash/xor';\nimport uniqBy from 'lodash/uniqBy';\nimport union from 'lodash/union';\nimport { GET_CSV_DATA_DOWNLOAD_FILE_URL, GET_JSON_DATA_DOWNLOAD_FILE_URL, getURLFromParams } from 'utils/getURLFromParams';\nimport BulkDownloadsBlock from 'react-components/data-portal/bulk-downloads-block/bulk-downloads-block.component';\nimport DownloadSelector from 'react-components/data-portal/download-selector.component';\nimport PropTypes from 'prop-types';\nimport DataPortalDisabledMessage from 'react-components/data-portal/data-portal-disabled-message.component';\nimport DataPortalForm from 'react-components/data-portal/data-portal-form/data-portal-form.component';\nimport RadioButton from 'react-components/shared/radio-button/radio-button.component';\n\nvar DataContent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DataContent, _Component);\n\n  function DataContent(props) {\n    var _this;\n\n    _classCallCheck(this, DataContent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DataContent).call(this, props));\n    var selectedCountry = props.selectedContext ? props.selectedContext.countryId : null; // This may look weird but it is indeed intended behavior\n    // This component's internal state uses the context id as the id of the commodity.\n\n    var selectedCommodity = props.selectedContext ? props.selectedContext.id : null;\n    _this.state = {\n      formVisible: false,\n      selectedCountry: selectedCountry,\n      selectedCommodity: selectedCommodity,\n      selectedYears: [],\n      selectedExporters: [],\n      selectedConsumptionCountries: [],\n      selectedIndicators: [],\n      selectedIndicatorsFilters: {},\n      allYearsSelected: false,\n      allExportersSelected: false,\n      allConsumptionCountriesSelected: false,\n      allIndicatorsSelected: false,\n      outputType: 'pivot',\n      fileExtension: '.csv',\n      fileSeparator: 'comma',\n      currentDownloadParams: null,\n      currentDownloadType: null,\n      downloaded: false\n    };\n    _this.onOptionFilterChange = _this.onOptionFilterChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onOptionFilterClear = _this.onOptionFilterClear.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onClickEventHandler = _this.onClickEventHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onAllSelected = _this.onAllSelected.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.closeForm = _this.closeForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.downloadFile = _this.downloadFile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onBulkDownloadClicked = _this.onBulkDownloadClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(DataContent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          selectedContext = _this$props.selectedContext,\n          onContextSelected = _this$props.onContextSelected;\n\n      if (selectedContext) {\n        onContextSelected(selectedContext.id);\n      }\n    }\n  }, {\n    key: \"onDownloadButtonClicked\",\n    value: function onDownloadButtonClicked() {\n      if (DATA_FORM_ENABLED) {\n        this.setState({\n          currentDownloadParams: null,\n          currentDownloadType: 'custom'\n        });\n        this.showForm();\n      } else {\n        this.downloadFile();\n      }\n    }\n  }, {\n    key: \"onBulkDownloadClicked\",\n    value: function onBulkDownloadClicked(contextId) {\n      if (DATA_FORM_ENABLED) {\n        this.setState({\n          currentDownloadParams: {\n            context_id: contextId,\n            pivot: 1\n          },\n          currentDownloadType: 'bulk'\n        });\n        this.showForm();\n      } else {\n        this.downloadFile({\n          context_id: contextId,\n          pivot: 1\n        });\n      }\n    }\n  }, {\n    key: \"onOptionFilterChange\",\n    value: function onOptionFilterChange(filter) {\n      var _this2 = this;\n\n      this.setState(function (state) {\n        var selectedIndicators = union(state.selectedIndicators, [filter.name]);\n        var indicators = _this2.props.indicators;\n        return {\n          selectedIndicators: selectedIndicators,\n          allIndicatorsSelected: selectedIndicators.length === indicators.length,\n          selectedIndicatorsFilters: _objectSpread({}, state.selectedIndicatorsFilters, _defineProperty({}, filter.name, filter))\n        };\n      });\n    }\n  }, {\n    key: \"onOptionFilterClear\",\n    value: function onOptionFilterClear(filterName) {\n      this.setState(function (state) {\n        var selectedIndicatorsFilters = _objectSpread({}, state.selectedIndicatorsFilters);\n\n        delete selectedIndicatorsFilters[filterName];\n        return {\n          selectedIndicatorsFilters: selectedIndicatorsFilters\n        };\n      });\n    }\n  }, {\n    key: \"onOutputTypeSelected\",\n    value: function onOutputTypeSelected(outputType) {\n      this.setState({\n        outputType: outputType\n      });\n    }\n  }, {\n    key: \"onFileFormatSelected\",\n    value: function onFileFormatSelected(fileExtension, fileSeparator) {\n      this.setState({\n        fileExtension: fileExtension,\n        fileSeparator: fileSeparator\n      });\n    }\n  }, {\n    key: \"onClickEventHandler\",\n    value: function onClickEventHandler(group) {\n      var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var _this$state = this.state,\n          selectedExporters = _this$state.selectedExporters,\n          selectedYears = _this$state.selectedYears,\n          selectedConsumptionCountries = _this$state.selectedConsumptionCountries,\n          selectedIndicators = _this$state.selectedIndicators,\n          selectedIndicatorsFilters = _this$state.selectedIndicatorsFilters;\n      var _this$props2 = this.props,\n          selectedContext = _this$props2.selectedContext,\n          contexts = _this$props2.contexts,\n          exporters = _this$props2.exporters,\n          consumptionCountries = _this$props2.consumptionCountries,\n          indicators = _this$props2.indicators;\n\n      switch (group) {\n        case 'countries':\n          {\n            this.setState({\n              selectedCountry: value\n            });\n            break;\n          }\n\n        case 'commodities':\n          {\n            var newSelectedContext = contexts.find(function (elem) {\n              return elem.isDisabled !== true && elem.id === value;\n            });\n            this.setState({\n              selectedCommodity: value\n            });\n\n            if (newSelectedContext) {\n              this.props.onContextSelected(newSelectedContext.id);\n            }\n\n            break;\n          }\n\n        case 'years':\n          {\n            var newSelectedYears = xor(selectedYears, [value]);\n            this.setState({\n              selectedYears: newSelectedYears,\n              allYearsSelected: newSelectedYears.length === selectedContext.years.length\n            });\n            break;\n          }\n\n        case 'exporters':\n          {\n            var newSelectedExporters = xor(selectedExporters, [value]);\n            this.setState({\n              selectedExporters: newSelectedExporters,\n              allExportersSelected: newSelectedExporters.length === exporters.length\n            });\n            break;\n          }\n\n        case 'consumption-countries':\n          {\n            var newSelectedConsumptionCountries = xor(selectedConsumptionCountries, [value]);\n            var allConsumptionCountriesSelected = selectedConsumptionCountries.length === consumptionCountries.length;\n            this.setState({\n              selectedConsumptionCountries: newSelectedConsumptionCountries,\n              allConsumptionCountriesSelected: allConsumptionCountriesSelected\n            });\n            break;\n          }\n\n        case 'indicators':\n          {\n            var newSelectedIndicators = xor(selectedIndicators, [value]);\n\n            var newSelectedIndicatorsFilters = _objectSpread({}, selectedIndicatorsFilters);\n\n            if (!newSelectedIndicators.includes(value)) {\n              delete newSelectedIndicatorsFilters[value];\n            }\n\n            this.setState({\n              selectedIndicators: newSelectedIndicators,\n              selectedIndicatorsFilters: newSelectedIndicatorsFilters,\n              allIndicatorsSelected: newSelectedIndicators.length === indicators.length\n            });\n            break;\n          }\n      }\n    }\n  }, {\n    key: \"onAllSelected\",\n    value: function onAllSelected(group) {\n      var _this$state2 = this.state,\n          allYearsSelected = _this$state2.allYearsSelected,\n          allExportersSelected = _this$state2.allExportersSelected,\n          allConsumptionCountriesSelected = _this$state2.allConsumptionCountriesSelected,\n          allIndicatorsSelected = _this$state2.allIndicatorsSelected;\n      var _this$props3 = this.props,\n          indicators = _this$props3.indicators,\n          consumptionCountries = _this$props3.consumptionCountries,\n          selectedContext = _this$props3.selectedContext;\n\n      switch (group) {\n        case 'years':\n          {\n            if (allYearsSelected) {\n              this.setState({\n                selectedYears: [],\n                allYearsSelected: !allYearsSelected\n              });\n            } else {\n              this.setState({\n                selectedYears: selectedContext.years,\n                allYearsSelected: !allYearsSelected\n              });\n            }\n\n            break;\n          }\n\n        case 'exporters':\n          {\n            if (allExportersSelected) {\n              this.setState({\n                selectedExporters: [],\n                allExportersSelected: !allExportersSelected\n              });\n            } else {\n              this.setState({\n                selectedExporters: this.props.exporters.map(function (elem) {\n                  return elem.id;\n                }),\n                allExportersSelected: !allExportersSelected\n              });\n            }\n\n            break;\n          }\n\n        case 'consumption-countries':\n          {\n            if (allConsumptionCountriesSelected) {\n              this.setState({\n                selectedConsumptionCountries: [],\n                allConsumptionCountriesSelected: !allConsumptionCountriesSelected\n              });\n            } else {\n              this.setState({\n                selectedConsumptionCountries: consumptionCountries.map(function (elem) {\n                  return elem.id;\n                }),\n                allConsumptionCountriesSelected: !allConsumptionCountriesSelected\n              });\n            }\n\n            break;\n          }\n\n        case 'indicators':\n          {\n            if (allIndicatorsSelected) {\n              this.setState({\n                selectedIndicators: [],\n                selectedIndicatorsFilters: {},\n                allIndicatorsSelected: !allIndicatorsSelected\n              });\n            } else {\n              this.setState({\n                selectedIndicators: indicators.map(function (elem) {\n                  return elem.name;\n                }),\n                allIndicatorsSelected: !allIndicatorsSelected\n              });\n            }\n\n            break;\n          }\n      }\n    }\n  }, {\n    key: \"getDownloadURLParams\",\n    value: function getDownloadURLParams() {\n      if (this.state.selectedCommodity === null) {\n        return [];\n      }\n\n      var contextId = this.props.selectedContext.id;\n      var file = this.state.fileExtension;\n      var outputType = this.state.outputType;\n      var params = {\n        context_id: contextId\n      };\n      params.years = this.state.allYearsSelected ? [] : this.state.selectedYears;\n      params.e_ids = this.state.allExportersSelected ? [] : this.state.selectedExporters;\n      params.c_ids = this.state.allConsumptionCountriesSelected ? [] : this.state.selectedConsumptionCountries;\n      params.filters = this.getIndicatorFilters();\n\n      if (file === '.csv') {\n        params.separator = this.state.fileSeparator;\n      }\n\n      params[outputType] = 1;\n      return params;\n    }\n  }, {\n    key: \"getIndicatorFilters\",\n    value: function getIndicatorFilters() {\n      var _this$state3 = this.state,\n          allIndicatorsSelected = _this$state3.allIndicatorsSelected,\n          selectedIndicators = _this$state3.selectedIndicators,\n          selectedIndicatorsFilters = _this$state3.selectedIndicatorsFilters;\n      var indicators = allIndicatorsSelected ? [] : selectedIndicators;\n      return indicators.map(function (indicator) {\n        return selectedIndicatorsFilters[indicator] || {\n          name: indicator\n        };\n      });\n    }\n  }, {\n    key: \"closeForm\",\n    value: function closeForm() {\n      this.setState({\n        formVisible: false\n      });\n    }\n  }, {\n    key: \"showForm\",\n    value: function showForm() {\n      this.props.onDataDownloadFormLoaded();\n      this.setState({\n        formVisible: true,\n        downloaded: false\n      });\n    }\n  }, {\n    key: \"downloadFile\",\n    value: function downloadFile(inputParams) {\n      var params = inputParams || this.state.currentDownloadParams || this.getDownloadURLParams();\n\n      if (!params.context_id) {\n        return;\n      }\n\n      var file = this.state.fileExtension;\n      var fileUrl = file === '.json' ? GET_JSON_DATA_DOWNLOAD_FILE_URL : GET_CSV_DATA_DOWNLOAD_FILE_URL;\n      var downloadURL = getURLFromParams(fileUrl, params);\n      this.props.onDownloadTriggered(Object.assign({\n        file: file,\n        type: this.state.currentDownloadType\n      }, params));\n      window.open(downloadURL);\n      this.setState({\n        downloaded: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props4 = this.props,\n          autoCompleteCountries = _this$props4.autoCompleteCountries,\n          contexts = _this$props4.contexts,\n          exporters = _this$props4.exporters,\n          consumptionCountries = _this$props4.consumptionCountries,\n          indicators = _this$props4.indicators,\n          selectedContext = _this$props4.selectedContext;\n      var enabledContexts = contexts.filter(function (elem) {\n        return elem.isDisabled !== true;\n      });\n      var countryOptions = uniqBy(enabledContexts, function (context) {\n        return context.countryId;\n      }).map(function (context) {\n        return {\n          id: context.countryId,\n          name: context.countryName.toLowerCase(),\n          noSelfCancel: true\n        };\n      });\n      var commodityOptions = contexts.filter(function (context) {\n        return context.countryId === _this3.state.selectedCountry;\n      }).map(function (context) {\n        return {\n          id: context.id,\n          name: context.commodityName.toLowerCase(),\n          noSelfCancel: false\n        };\n      });\n      var yearOptions = [];\n\n      if (selectedContext) {\n        yearOptions = selectedContext.years.map(function (year) {\n          return {\n            id: year,\n            name: year,\n            noSelfCancel: true\n          };\n        });\n      }\n\n      var exporterOptions = exporters.map(function (exporter) {\n        return {\n          id: exporter.id,\n          name: exporter.name.toLowerCase(),\n          noSelfCancel: false\n        };\n      }).sort(function (a, b) {\n        return a.name.localeCompare(b.name);\n      });\n      var consumptionCountryOptions = consumptionCountries.map(function (country) {\n        return {\n          id: country.id,\n          name: country.name.toLowerCase(),\n          noSelfCancel: false\n        };\n      }).sort(function (a, b) {\n        return a.name.localeCompare(b.name);\n      });\n      var indicatorOptions = indicators.map(function (indicator) {\n        return {\n          id: indicator.name,\n          name: \"\".concat(indicator.frontendName).concat(indicator.unit !== null ? \"(\".concat(indicator.unit, \")\") : ''),\n          unit: indicator.unit,\n          noSelfCancel: false,\n          filterName: indicator.frontendName,\n          filterOptions: indicator.filterOptions\n        };\n      }).sort(function (a, b) {\n        return a.name.localeCompare(b.name);\n      });\n      return React.createElement(\"div\", {\n        className: \"l-data\"\n      }, DATA_DOWNLOAD_ENABLED === false && React.createElement(DataPortalDisabledMessage, null), React.createElement(DataPortalForm, {\n        autoCompleteCountries: autoCompleteCountries,\n        isFormVisible: this.state.formVisible,\n        closeForm: this.closeForm,\n        downloadFile: this.downloadFile,\n        downloaded: this.state.downloaded\n      }), React.createElement(\"div\", {\n        className: \"row\"\n      }, React.createElement(\"div\", {\n        className: \"small-12 columns c-bulk-downloads-container\"\n      }, React.createElement(BulkDownloadsBlock, {\n        contexts: enabledContexts,\n        enabled: DATA_DOWNLOAD_ENABLED,\n        onButtonClicked: this.onBulkDownloadClicked\n      }), React.createElement(\"div\", {\n        className: \"c-custom-dataset\"\n      }, React.createElement(\"div\", {\n        className: \"c-custom-dataset__title\"\n      }, \"CREATE A CUSTOM DATASET\"), React.createElement(\"div\", {\n        className: \"row\"\n      }, React.createElement(\"div\", {\n        className: \"small-9 columns\"\n      }, React.createElement(\"div\", {\n        className: \"row\"\n      }, React.createElement(\"div\", {\n        className: \"small-4 columns\"\n      }, React.createElement(DownloadSelector, {\n        enabled: true,\n        options: countryOptions,\n        title: \"PRODUCTION COUNTRIES\",\n        type: \"countries\",\n        onOptionSelected: this.onClickEventHandler,\n        selected: [this.state.selectedCountry]\n      })), React.createElement(\"div\", {\n        className: \"small-4 columns\"\n      }, React.createElement(DownloadSelector, {\n        enabled: this.state.selectedCountry !== null,\n        options: commodityOptions,\n        title: \"COMMODITIES\",\n        type: \"commodities\",\n        onOptionSelected: this.onClickEventHandler,\n        disabledText: \"Please select first a country\",\n        selected: [this.state.selectedCommodity]\n      })), React.createElement(\"div\", {\n        className: \"small-4 columns\"\n      }, React.createElement(DownloadSelector, {\n        allowMultiple: true,\n        allSelected: this.state.allYearsSelected,\n        options: yearOptions,\n        enabled: this.state.selectedCountry !== null && this.state.selectedCommodity !== null,\n        title: \"YEARS\",\n        type: \"years\",\n        onOptionSelected: this.onClickEventHandler,\n        onAllSelected: this.onAllSelected,\n        disabledText: \"Please select first a country and commodity\",\n        selected: this.state.selectedYears\n      }))), React.createElement(\"div\", {\n        className: \"row\"\n      }, React.createElement(\"div\", {\n        className: \"small-4 columns\"\n      }, React.createElement(DownloadSelector, {\n        allowMultiple: true,\n        allSelected: this.state.allExportersSelected,\n        options: exporterOptions,\n        enabled: this.state.selectedCountry !== null && this.state.selectedCommodity !== null,\n        title: \"COMPANIES\",\n        type: \"exporters\",\n        onOptionSelected: this.onClickEventHandler,\n        onAllSelected: this.onAllSelected,\n        disabledText: \"Please select first a country and commodity\",\n        selected: this.state.selectedExporters\n      })), React.createElement(\"div\", {\n        className: \"small-4 columns\"\n      }, React.createElement(DownloadSelector, {\n        allowMultiple: true,\n        allSelected: this.state.allConsumptionCountriesSelected,\n        options: consumptionCountryOptions,\n        enabled: this.state.selectedCountry !== null && this.state.selectedCommodity !== null,\n        title: \"CONSUMPTION COUNTRIES\",\n        type: \"consumption-countries\",\n        onOptionSelected: this.onClickEventHandler,\n        onAllSelected: this.onAllSelected,\n        disabledText: \"Please select first a country and commodity\",\n        selected: this.state.selectedConsumptionCountries\n      })), React.createElement(\"div\", {\n        className: \"small-4 columns\"\n      }, React.createElement(DownloadSelector, {\n        allowMultiple: true,\n        allSelected: this.state.allIndicatorsSelected,\n        options: indicatorOptions,\n        enabled: this.state.selectedCountry !== null && this.state.selectedCommodity !== null,\n        title: \"INDICATORS\",\n        type: \"indicators\",\n        selectedFilters: this.state.selectedIndicatorsFilters,\n        onOptionSelected: this.onClickEventHandler,\n        onOptionFilterChange: this.onOptionFilterChange,\n        onOptionFilterClear: this.onOptionFilterClear,\n        onAllSelected: this.onAllSelected,\n        disabledText: \"Please select first a country and commodity\",\n        selected: this.state.selectedIndicators\n      })))), React.createElement(\"div\", {\n        className: \"small-3 columns\"\n      }, React.createElement(\"div\", {\n        className: \"c-custom-dataset__format-sidebar\"\n      }, React.createElement(\"div\", {\n        className: \"c-custom-dataset-selector\",\n        \"data-type\": \"format\"\n      }, React.createElement(\"div\", {\n        className: \"c-custom-dataset-selector__header\"\n      }, \"OUTPUT TYPE\"), React.createElement(\"ul\", {\n        className: \"c-custom-dataset-selector__values\"\n      }, React.createElement(\"li\", {\n        className: \"-selected\"\n      }, \"Pivot\", React.createElement(RadioButton, {\n        noSelfCancel: true,\n        className: \"-grey\",\n        enabled: this.state.outputType === 'pivot',\n        onClick: function onClick() {\n          return _this3.onOutputTypeSelected('pivot');\n        }\n      })), React.createElement(\"li\", null, \"Table\", React.createElement(RadioButton, {\n        noSelfCancel: true,\n        className: \"-grey\",\n        enabled: this.state.outputType === 'table',\n        onClick: function onClick() {\n          return _this3.onOutputTypeSelected('table');\n        }\n      })))), React.createElement(\"div\", {\n        className: \"c-custom-dataset-selector\",\n        \"data-type\": \"format\"\n      }, React.createElement(\"div\", {\n        className: \"c-custom-dataset-selector__header\"\n      }, \"FILE\"), React.createElement(\"ul\", {\n        className: \"c-custom-dataset-selector__values\"\n      }, React.createElement(\"li\", {\n        className: \"-selected\"\n      }, \".csv (comma separated)\", React.createElement(RadioButton, {\n        noSelfCancel: true,\n        className: \"-grey\",\n        enabled: this.state.fileExtension === '.csv' && this.state.fileSeparator === 'comma',\n        onClick: function onClick() {\n          return _this3.onFileFormatSelected('.csv', 'comma');\n        }\n      })), React.createElement(\"li\", null, \".csv (semicolon separated)\", React.createElement(RadioButton, {\n        noSelfCancel: true,\n        className: \"-grey\",\n        enabled: this.state.fileExtension === '.csv' && this.state.fileSeparator === 'semicolon',\n        onClick: function onClick() {\n          return _this3.onFileFormatSelected('.csv', 'semicolon');\n        }\n      })), React.createElement(\"li\", null, \".json\", React.createElement(RadioButton, {\n        noSelfCancel: true,\n        className: \"-grey\",\n        enabled: this.state.fileExtension === '.json' && this.state.fileSeparator === '',\n        onClick: function onClick() {\n          return _this3.onFileFormatSelected('.json', '');\n        }\n      })))), React.createElement(\"div\", {\n        className: cx('download-button', {\n          '-disabled': !DATA_DOWNLOAD_ENABLED || this.state.selectedCountry === null || this.state.selectedCommodity === null\n        }),\n        onClick: function onClick() {\n          return _this3.onDownloadButtonClicked();\n        }\n      }, React.createElement(\"svg\", {\n        className: \"icon icon-download\"\n      }, React.createElement(\"use\", {\n        xlinkHref: \"#icon-download\"\n      })), \"DOWNLOAD DATA\"))))))));\n    }\n  }]);\n\n  return DataContent;\n}(Component);\n\nDataContent.defaultProps = {\n  contexts: [],\n  indicators: [],\n  consumptionCountries: [],\n  exporters: []\n};\nDataContent.propTypes = {\n  autoCompleteCountries: PropTypes.string,\n  contexts: PropTypes.array,\n  consumptionCountries: PropTypes.array,\n  exporters: PropTypes.array,\n  indicators: PropTypes.array,\n  onContextSelected: PropTypes.func,\n  onDataDownloadFormLoaded: PropTypes.func,\n  onDownloadTriggered: PropTypes.func,\n  selectedContext: PropTypes.object\n};\nvar _default = DataContent;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_typeof, \"_typeof\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/data-portal/data-portal-page.component.jsx\");\n  reactHotLoader.register(_objectSpread, \"_objectSpread\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/data-portal/data-portal-page.component.jsx\");\n  reactHotLoader.register(_defineProperty, \"_defineProperty\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/data-portal/data-portal-page.component.jsx\");\n  reactHotLoader.register(_classCallCheck, \"_classCallCheck\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/data-portal/data-portal-page.component.jsx\");\n  reactHotLoader.register(_defineProperties, \"_defineProperties\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/data-portal/data-portal-page.component.jsx\");\n  reactHotLoader.register(_createClass, \"_createClass\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/data-portal/data-portal-page.component.jsx\");\n  reactHotLoader.register(_possibleConstructorReturn, \"_possibleConstructorReturn\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/data-portal/data-portal-page.component.jsx\");\n  reactHotLoader.register(_getPrototypeOf, \"_getPrototypeOf\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/data-portal/data-portal-page.component.jsx\");\n  reactHotLoader.register(_inherits, \"_inherits\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/data-portal/data-portal-page.component.jsx\");\n  reactHotLoader.register(_setPrototypeOf, \"_setPrototypeOf\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/data-portal/data-portal-page.component.jsx\");\n  reactHotLoader.register(_assertThisInitialized, \"_assertThisInitialized\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/data-portal/data-portal-page.component.jsx\");\n  reactHotLoader.register(DataContent, \"DataContent\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/data-portal/data-portal-page.component.jsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/data-portal/data-portal-page.component.jsx\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/data-portal/data-portal-page.component.jsx"],"names":["DataContent","Component","selectedCountry","props","selectedCommodity","formVisible","selectedYears","selectedExporters","selectedConsumptionCountries","selectedIndicators","selectedIndicatorsFilters","allYearsSelected","allExportersSelected","allConsumptionCountriesSelected","allIndicatorsSelected","outputType","fileExtension","fileSeparator","currentDownloadParams","currentDownloadType","downloaded","selectedContext","onContextSelected","contextId","context_id","pivot","filter","union","state","indicators","filterName","group","value","contexts","exporters","consumptionCountries","newSelectedContext","elem","newSelectedYears","xor","length","newSelectedExporters","newSelectedConsumptionCountries","newSelectedIndicators","newSelectedIndicatorsFilters","file","params","name","indicator","inputParams","fileUrl","downloadURL","getURLFromParams","type","window","autoCompleteCountries","enabledContexts","countryOptions","context","id","noSelfCancel","commodityOptions","yearOptions","exporterOptions","exporter","a","b","consumptionCountryOptions","country","indicatorOptions","unit","filterOptions","DATA_DOWNLOAD_ENABLED","onBulkDownloadClicked","cx","PropTypes","onDataDownloadFormLoaded","onDownloadTriggered","object"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React, { Component } from 'react';\nimport cx from 'classnames';\nimport xor from 'lodash/xor';\nimport uniqBy from 'lodash/uniqBy';\nimport union from 'lodash/union';\n\nimport {\n  GET_CSV_DATA_DOWNLOAD_FILE_URL,\n  GET_JSON_DATA_DOWNLOAD_FILE_URL,\n  getURLFromParams\n} from 'utils/getURLFromParams';\nimport BulkDownloadsBlock from 'react-components/data-portal/bulk-downloads-block/bulk-downloads-block.component';\nimport DownloadSelector from 'react-components/data-portal/download-selector.component';\nimport PropTypes from 'prop-types';\nimport DataPortalDisabledMessage from 'react-components/data-portal/data-portal-disabled-message.component';\nimport DataPortalForm from 'react-components/data-portal/data-portal-form/data-portal-form.component';\nimport RadioButton from 'react-components/shared/radio-button/radio-button.component';\n\nclass DataContent extends Component {\n  constructor(props) {\n    super(props);\n\n    const selectedCountry = props.selectedContext ? props.selectedContext.countryId : null;\n\n    // This may look weird but it is indeed intended behavior\n    // This component's internal state uses the context id as the id of the commodity.\n    const selectedCommodity = props.selectedContext ? props.selectedContext.id : null;\n\n    this.state = {\n      formVisible: false,\n\n      selectedCountry,\n      selectedCommodity,\n      selectedYears: [],\n      selectedExporters: [],\n      selectedConsumptionCountries: [],\n      selectedIndicators: [],\n      selectedIndicatorsFilters: {},\n\n      allYearsSelected: false,\n      allExportersSelected: false,\n      allConsumptionCountriesSelected: false,\n      allIndicatorsSelected: false,\n\n      outputType: 'pivot',\n      fileExtension: '.csv',\n      fileSeparator: 'comma',\n\n      currentDownloadParams: null,\n      currentDownloadType: null,\n\n      downloaded: false\n    };\n\n    this.onOptionFilterChange = this.onOptionFilterChange.bind(this);\n    this.onOptionFilterClear = this.onOptionFilterClear.bind(this);\n    this.onClickEventHandler = this.onClickEventHandler.bind(this);\n    this.onAllSelected = this.onAllSelected.bind(this);\n    this.closeForm = this.closeForm.bind(this);\n    this.downloadFile = this.downloadFile.bind(this);\n    this.onBulkDownloadClicked = this.onBulkDownloadClicked.bind(this);\n  }\n\n  componentDidMount() {\n    const { selectedContext, onContextSelected } = this.props;\n\n    if (selectedContext) {\n      onContextSelected(selectedContext.id);\n    }\n  }\n\n  onDownloadButtonClicked() {\n    if (DATA_FORM_ENABLED) {\n      this.setState({\n        currentDownloadParams: null,\n        currentDownloadType: 'custom'\n      });\n      this.showForm();\n    } else {\n      this.downloadFile();\n    }\n  }\n\n  onBulkDownloadClicked(contextId) {\n    if (DATA_FORM_ENABLED) {\n      this.setState({\n        currentDownloadParams: { context_id: contextId, pivot: 1 },\n        currentDownloadType: 'bulk'\n      });\n      this.showForm();\n    } else {\n      this.downloadFile({ context_id: contextId, pivot: 1 });\n    }\n  }\n\n  onOptionFilterChange(filter) {\n    this.setState(state => {\n      const selectedIndicators = union(state.selectedIndicators, [filter.name]);\n\n      const { indicators } = this.props;\n\n      return {\n        selectedIndicators,\n        allIndicatorsSelected: selectedIndicators.length === indicators.length,\n        selectedIndicatorsFilters: {\n          ...state.selectedIndicatorsFilters,\n          [filter.name]: filter\n        }\n      };\n    });\n  }\n\n  onOptionFilterClear(filterName) {\n    this.setState(state => {\n      const selectedIndicatorsFilters = { ...state.selectedIndicatorsFilters };\n      delete selectedIndicatorsFilters[filterName];\n      return { selectedIndicatorsFilters };\n    });\n  }\n\n  onOutputTypeSelected(outputType) {\n    this.setState({ outputType });\n  }\n\n  onFileFormatSelected(fileExtension, fileSeparator) {\n    this.setState({ fileExtension, fileSeparator });\n  }\n\n  onClickEventHandler(group, value = null) {\n    const {\n      selectedExporters,\n      selectedYears,\n      selectedConsumptionCountries,\n      selectedIndicators,\n      selectedIndicatorsFilters\n    } = this.state;\n    const { selectedContext, contexts, exporters, consumptionCountries, indicators } = this.props;\n\n    switch (group) {\n      case 'countries': {\n        this.setState({ selectedCountry: value });\n        break;\n      }\n      case 'commodities': {\n        const newSelectedContext = contexts.find(\n          elem => elem.isDisabled !== true && elem.id === value\n        );\n        this.setState({ selectedCommodity: value });\n        if (newSelectedContext) {\n          this.props.onContextSelected(newSelectedContext.id);\n        }\n        break;\n      }\n      case 'years': {\n        const newSelectedYears = xor(selectedYears, [value]);\n        this.setState({\n          selectedYears: newSelectedYears,\n          allYearsSelected: newSelectedYears.length === selectedContext.years.length\n        });\n        break;\n      }\n      case 'exporters': {\n        const newSelectedExporters = xor(selectedExporters, [value]);\n        this.setState({\n          selectedExporters: newSelectedExporters,\n          allExportersSelected: newSelectedExporters.length === exporters.length\n        });\n        break;\n      }\n      case 'consumption-countries': {\n        const newSelectedConsumptionCountries = xor(selectedConsumptionCountries, [value]);\n        const allConsumptionCountriesSelected =\n          selectedConsumptionCountries.length === consumptionCountries.length;\n        this.setState({\n          selectedConsumptionCountries: newSelectedConsumptionCountries,\n          allConsumptionCountriesSelected\n        });\n        break;\n      }\n      case 'indicators': {\n        const newSelectedIndicators = xor(selectedIndicators, [value]);\n        const newSelectedIndicatorsFilters = { ...selectedIndicatorsFilters };\n\n        if (!newSelectedIndicators.includes(value)) {\n          delete newSelectedIndicatorsFilters[value];\n        }\n\n        this.setState({\n          selectedIndicators: newSelectedIndicators,\n          selectedIndicatorsFilters: newSelectedIndicatorsFilters,\n          allIndicatorsSelected: newSelectedIndicators.length === indicators.length\n        });\n        break;\n      }\n    }\n  }\n\n  onAllSelected(group) {\n    const {\n      allYearsSelected,\n      allExportersSelected,\n      allConsumptionCountriesSelected,\n      allIndicatorsSelected\n    } = this.state;\n    const { indicators, consumptionCountries, selectedContext } = this.props;\n\n    switch (group) {\n      case 'years': {\n        if (allYearsSelected) {\n          this.setState({\n            selectedYears: [],\n            allYearsSelected: !allYearsSelected\n          });\n        } else {\n          this.setState({\n            selectedYears: selectedContext.years,\n            allYearsSelected: !allYearsSelected\n          });\n        }\n        break;\n      }\n      case 'exporters': {\n        if (allExportersSelected) {\n          this.setState({\n            selectedExporters: [],\n            allExportersSelected: !allExportersSelected\n          });\n        } else {\n          this.setState({\n            selectedExporters: this.props.exporters.map(elem => elem.id),\n            allExportersSelected: !allExportersSelected\n          });\n        }\n        break;\n      }\n      case 'consumption-countries': {\n        if (allConsumptionCountriesSelected) {\n          this.setState({\n            selectedConsumptionCountries: [],\n            allConsumptionCountriesSelected: !allConsumptionCountriesSelected\n          });\n        } else {\n          this.setState({\n            selectedConsumptionCountries: consumptionCountries.map(elem => elem.id),\n            allConsumptionCountriesSelected: !allConsumptionCountriesSelected\n          });\n        }\n        break;\n      }\n      case 'indicators': {\n        if (allIndicatorsSelected) {\n          this.setState({\n            selectedIndicators: [],\n            selectedIndicatorsFilters: {},\n            allIndicatorsSelected: !allIndicatorsSelected\n          });\n        } else {\n          this.setState({\n            selectedIndicators: indicators.map(elem => elem.name),\n            allIndicatorsSelected: !allIndicatorsSelected\n          });\n        }\n        break;\n      }\n    }\n  }\n\n  getDownloadURLParams() {\n    if (this.state.selectedCommodity === null) {\n      return [];\n    }\n    const contextId = this.props.selectedContext.id;\n    const file = this.state.fileExtension;\n    const { outputType } = this.state;\n    const params = {\n      context_id: contextId\n    };\n\n    params.years = this.state.allYearsSelected ? [] : this.state.selectedYears;\n    params.e_ids = this.state.allExportersSelected ? [] : this.state.selectedExporters;\n    params.c_ids = this.state.allConsumptionCountriesSelected\n      ? []\n      : this.state.selectedConsumptionCountries;\n    params.filters = this.getIndicatorFilters();\n\n    if (file === '.csv') {\n      params.separator = this.state.fileSeparator;\n    }\n    params[outputType] = 1;\n\n    return params;\n  }\n\n  getIndicatorFilters() {\n    const { allIndicatorsSelected, selectedIndicators, selectedIndicatorsFilters } = this.state;\n    const indicators = allIndicatorsSelected ? [] : selectedIndicators;\n\n    return indicators.map(indicator => selectedIndicatorsFilters[indicator] || { name: indicator });\n  }\n\n  closeForm() {\n    this.setState({ formVisible: false });\n  }\n\n  showForm() {\n    this.props.onDataDownloadFormLoaded();\n    this.setState({ formVisible: true, downloaded: false });\n  }\n\n  downloadFile(inputParams) {\n    const params = inputParams || this.state.currentDownloadParams || this.getDownloadURLParams();\n\n    if (!params.context_id) {\n      return;\n    }\n\n    const file = this.state.fileExtension;\n    const fileUrl =\n      file === '.json' ? GET_JSON_DATA_DOWNLOAD_FILE_URL : GET_CSV_DATA_DOWNLOAD_FILE_URL;\n    const downloadURL = getURLFromParams(fileUrl, params);\n\n    this.props.onDownloadTriggered(\n      Object.assign(\n        {\n          file,\n          type: this.state.currentDownloadType\n        },\n        params\n      )\n    );\n\n    window.open(downloadURL);\n\n    this.setState({ downloaded: true });\n  }\n\n  render() {\n    const {\n      autoCompleteCountries,\n      contexts,\n      exporters,\n      consumptionCountries,\n      indicators,\n      selectedContext\n    } = this.props;\n\n    const enabledContexts = contexts.filter(elem => elem.isDisabled !== true);\n\n    const countryOptions = uniqBy(enabledContexts, context => context.countryId).map(context => ({\n      id: context.countryId,\n      name: context.countryName.toLowerCase(),\n      noSelfCancel: true\n    }));\n\n    const commodityOptions = contexts\n      .filter(context => context.countryId === this.state.selectedCountry)\n      .map(context => ({\n        id: context.id,\n        name: context.commodityName.toLowerCase(),\n        noSelfCancel: false\n      }));\n\n    let yearOptions = [];\n    if (selectedContext) {\n      yearOptions = selectedContext.years.map(year => ({\n        id: year,\n        name: year,\n        noSelfCancel: true\n      }));\n    }\n\n    const exporterOptions = exporters\n      .map(exporter => ({\n        id: exporter.id,\n        name: exporter.name.toLowerCase(),\n        noSelfCancel: false\n      }))\n      .sort((a, b) => a.name.localeCompare(b.name));\n\n    const consumptionCountryOptions = consumptionCountries\n      .map(country => ({\n        id: country.id,\n        name: country.name.toLowerCase(),\n        noSelfCancel: false\n      }))\n      .sort((a, b) => a.name.localeCompare(b.name));\n\n    const indicatorOptions = indicators\n      .map(indicator => ({\n        id: indicator.name,\n        name: `${indicator.frontendName}${indicator.unit !== null ? `(${indicator.unit})` : ''}`,\n        unit: indicator.unit,\n        noSelfCancel: false,\n        filterName: indicator.frontendName,\n        filterOptions: indicator.filterOptions\n      }))\n      .sort((a, b) => a.name.localeCompare(b.name));\n\n    return (\n      <div className=\"l-data\">\n        {DATA_DOWNLOAD_ENABLED === false && <DataPortalDisabledMessage />}\n        <DataPortalForm\n          autoCompleteCountries={autoCompleteCountries}\n          isFormVisible={this.state.formVisible}\n          closeForm={this.closeForm}\n          downloadFile={this.downloadFile}\n          downloaded={this.state.downloaded}\n        />\n        <div className=\"row\">\n          <div className=\"small-12 columns c-bulk-downloads-container\">\n            <BulkDownloadsBlock\n              contexts={enabledContexts}\n              enabled={DATA_DOWNLOAD_ENABLED}\n              onButtonClicked={this.onBulkDownloadClicked}\n            />\n            <div className=\"c-custom-dataset\">\n              <div className=\"c-custom-dataset__title\">CREATE A CUSTOM DATASET</div>\n              <div className=\"row\">\n                <div className=\"small-9 columns\">\n                  <div className=\"row\">\n                    <div className=\"small-4 columns\">\n                      <DownloadSelector\n                        enabled\n                        options={countryOptions}\n                        title=\"PRODUCTION COUNTRIES\"\n                        type=\"countries\"\n                        onOptionSelected={this.onClickEventHandler}\n                        selected={[this.state.selectedCountry]}\n                      />\n                    </div>\n                    <div className=\"small-4 columns\">\n                      <DownloadSelector\n                        enabled={this.state.selectedCountry !== null}\n                        options={commodityOptions}\n                        title=\"COMMODITIES\"\n                        type=\"commodities\"\n                        onOptionSelected={this.onClickEventHandler}\n                        disabledText=\"Please select first a country\"\n                        selected={[this.state.selectedCommodity]}\n                      />\n                    </div>\n                    <div className=\"small-4 columns\">\n                      <DownloadSelector\n                        allowMultiple\n                        allSelected={this.state.allYearsSelected}\n                        options={yearOptions}\n                        enabled={\n                          this.state.selectedCountry !== null &&\n                          this.state.selectedCommodity !== null\n                        }\n                        title=\"YEARS\"\n                        type=\"years\"\n                        onOptionSelected={this.onClickEventHandler}\n                        onAllSelected={this.onAllSelected}\n                        disabledText=\"Please select first a country and commodity\"\n                        selected={this.state.selectedYears}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"small-4 columns\">\n                      <DownloadSelector\n                        allowMultiple\n                        allSelected={this.state.allExportersSelected}\n                        options={exporterOptions}\n                        enabled={\n                          this.state.selectedCountry !== null &&\n                          this.state.selectedCommodity !== null\n                        }\n                        title=\"COMPANIES\"\n                        type=\"exporters\"\n                        onOptionSelected={this.onClickEventHandler}\n                        onAllSelected={this.onAllSelected}\n                        disabledText=\"Please select first a country and commodity\"\n                        selected={this.state.selectedExporters}\n                      />\n                    </div>\n                    <div className=\"small-4 columns\">\n                      <DownloadSelector\n                        allowMultiple\n                        allSelected={this.state.allConsumptionCountriesSelected}\n                        options={consumptionCountryOptions}\n                        enabled={\n                          this.state.selectedCountry !== null &&\n                          this.state.selectedCommodity !== null\n                        }\n                        title=\"CONSUMPTION COUNTRIES\"\n                        type=\"consumption-countries\"\n                        onOptionSelected={this.onClickEventHandler}\n                        onAllSelected={this.onAllSelected}\n                        disabledText=\"Please select first a country and commodity\"\n                        selected={this.state.selectedConsumptionCountries}\n                      />\n                    </div>\n                    <div className=\"small-4 columns\">\n                      <DownloadSelector\n                        allowMultiple\n                        allSelected={this.state.allIndicatorsSelected}\n                        options={indicatorOptions}\n                        enabled={\n                          this.state.selectedCountry !== null &&\n                          this.state.selectedCommodity !== null\n                        }\n                        title=\"INDICATORS\"\n                        type=\"indicators\"\n                        selectedFilters={this.state.selectedIndicatorsFilters}\n                        onOptionSelected={this.onClickEventHandler}\n                        onOptionFilterChange={this.onOptionFilterChange}\n                        onOptionFilterClear={this.onOptionFilterClear}\n                        onAllSelected={this.onAllSelected}\n                        disabledText=\"Please select first a country and commodity\"\n                        selected={this.state.selectedIndicators}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"small-3 columns\">\n                  <div className=\"c-custom-dataset__format-sidebar\">\n                    <div className=\"c-custom-dataset-selector\" data-type=\"format\">\n                      <div className=\"c-custom-dataset-selector__header\">OUTPUT TYPE</div>\n                      <ul className=\"c-custom-dataset-selector__values\">\n                        <li className=\"-selected\">\n                          Pivot\n                          <RadioButton\n                            noSelfCancel\n                            className=\"-grey\"\n                            enabled={this.state.outputType === 'pivot'}\n                            onClick={() => this.onOutputTypeSelected('pivot')}\n                          />\n                        </li>\n                        <li>\n                          Table\n                          <RadioButton\n                            noSelfCancel\n                            className=\"-grey\"\n                            enabled={this.state.outputType === 'table'}\n                            onClick={() => this.onOutputTypeSelected('table')}\n                          />\n                        </li>\n                      </ul>\n                    </div>\n\n                    <div className=\"c-custom-dataset-selector\" data-type=\"format\">\n                      <div className=\"c-custom-dataset-selector__header\">FILE</div>\n                      <ul className=\"c-custom-dataset-selector__values\">\n                        <li className=\"-selected\">\n                          .csv (comma separated)\n                          <RadioButton\n                            noSelfCancel\n                            className=\"-grey\"\n                            enabled={\n                              this.state.fileExtension === '.csv' &&\n                              this.state.fileSeparator === 'comma'\n                            }\n                            onClick={() => this.onFileFormatSelected('.csv', 'comma')}\n                          />\n                        </li>\n                        <li>\n                          .csv (semicolon separated)\n                          <RadioButton\n                            noSelfCancel\n                            className=\"-grey\"\n                            enabled={\n                              this.state.fileExtension === '.csv' &&\n                              this.state.fileSeparator === 'semicolon'\n                            }\n                            onClick={() => this.onFileFormatSelected('.csv', 'semicolon')}\n                          />\n                        </li>\n                        <li>\n                          .json\n                          <RadioButton\n                            noSelfCancel\n                            className=\"-grey\"\n                            enabled={\n                              this.state.fileExtension === '.json' &&\n                              this.state.fileSeparator === ''\n                            }\n                            onClick={() => this.onFileFormatSelected('.json', '')}\n                          />\n                        </li>\n                      </ul>\n                    </div>\n\n                    <div\n                      className={cx('download-button', {\n                        '-disabled':\n                          !DATA_DOWNLOAD_ENABLED ||\n                          this.state.selectedCountry === null ||\n                          this.state.selectedCommodity === null\n                      })}\n                      onClick={() => this.onDownloadButtonClicked()}\n                    >\n                      <svg className=\"icon icon-download\">\n                        <use xlinkHref=\"#icon-download\" />\n                      </svg>\n                      DOWNLOAD DATA\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDataContent.defaultProps = {\n  contexts: [],\n  indicators: [],\n  consumptionCountries: [],\n  exporters: []\n};\n\nDataContent.propTypes = {\n  autoCompleteCountries: PropTypes.string,\n  contexts: PropTypes.array,\n  consumptionCountries: PropTypes.array,\n  exporters: PropTypes.array,\n  indicators: PropTypes.array,\n  onContextSelected: PropTypes.func,\n  onDataDownloadFormLoaded: PropTypes.func,\n  onDownloadTriggered: PropTypes.func,\n  selectedContext: PropTypes.object\n};\n\nexport default DataContent;\n"]}]}