{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/react-hot-loader/babel.js\"],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/actions/helpers/getNodeIdFromGeoId.js","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/actions/helpers/getNodeIdFromGeoId.js","mtime":1543486759486},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/.babelrc","mtime":1548840716937},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nvar _default = function _default(geoId, nodesDict, selectedGeoColumnId) {\n  if (geoId === undefined || geoId === null) {\n    return null;\n  } // node should match geoId obv, but also columnId\n  // (needed because municip and logistics hubs have the same geoIds)\n\n\n  var selectedNodeId = Object.keys(nodesDict).find(function (nodeId) {\n    return nodesDict[nodeId].geoId === geoId && selectedGeoColumnId === nodesDict[nodeId].columnId;\n  });\n  if (selectedNodeId === undefined) return null;\n  return parseInt(selectedNodeId, 10);\n};\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_default, \"default\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/actions/helpers/getNodeIdFromGeoId.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/actions/helpers/getNodeIdFromGeoId.js"],"names":["geoId","selectedNodeId","nodesDict","selectedGeoColumnId","parseInt"],"mappings":";;;;;;eAAe,kBAAA,KAAA,EAAA,SAAA,EAAA,mBAAA,EAA2C;AACxD,MAAIA,KAAK,KAALA,SAAAA,IAAuBA,KAAK,KAAhC,IAAA,EAA2C;AACzC,WAAA,IAAA;AAFsD,GAAA,CAKxD;AACA;;;AACA,MAAMC,cAAc,GAAG,MAAM,CAAN,IAAA,CAAA,SAAA,EAAA,IAAA,CACrB,UAAA,MAAA,EAAM;AAAA,WACJC,SAAS,CAATA,MAAS,CAATA,CAAAA,KAAAA,KAAAA,KAAAA,IAAqCC,mBAAmB,KAAKD,SAAS,CAATA,MAAS,CAATA,CADzD,QAAA;AADR,GAAuB,CAAvB;AAKA,MAAID,cAAc,KAAlB,SAAA,EAAkC,OAAA,IAAA;AAElC,SAAOG,QAAQ,CAAA,cAAA,EAAf,EAAe,CAAf;AAdF,C;;AAAA","sourcesContent":["export default (geoId, nodesDict, selectedGeoColumnId) => {\n  if (geoId === undefined || geoId === null) {\n    return null;\n  }\n\n  // node should match geoId obv, but also columnId\n  // (needed because municip and logistics hubs have the same geoIds)\n  const selectedNodeId = Object.keys(nodesDict).find(\n    nodeId =>\n      nodesDict[nodeId].geoId === geoId && selectedGeoColumnId === nodesDict[nodeId].columnId\n  );\n\n  if (selectedNodeId === undefined) return null;\n\n  return parseInt(selectedNodeId, 10);\n};\n"]}]}