{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/react-hot-loader/babel.js\"],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/reducers/helpers/contextHelper.js","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/reducers/helpers/contextHelper.js","mtime":1543486759569},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/.babelrc","mtime":1548840716937},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\n/**\n * Returns the context with the given id\n * Returns the default context if none is set\n *\n * @param state\n * @param contextId\n * @returns {T}\n */\nexport var getContextById = function getContextById(state, contextId) {\n  var selectedContext = state.app.contexts.find(function (context) {\n    return context.id === contextId;\n  });\n\n  if (!selectedContext) {\n    selectedContext = state.app.contexts.find(function (context) {\n      return context.isDefault === true;\n    });\n  }\n\n  return selectedContext;\n};\nexport var getCurrentContext = function getCurrentContext(state) {\n  return getContextById(state, state.app.selectedContext ? state.app.selectedContext.id : state.app.initialSelectedContextIdFromURL);\n};\nexport var getDefaultContext = function getDefaultContext(state) {\n  return state.app.contexts.find(function (context) {\n    return context.isDefault === true;\n  });\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(getContextById, \"getContextById\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/reducers/helpers/contextHelper.js\");\n  reactHotLoader.register(getCurrentContext, \"getCurrentContext\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/reducers/helpers/contextHelper.js\");\n  reactHotLoader.register(getDefaultContext, \"getDefaultContext\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/reducers/helpers/contextHelper.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/reducers/helpers/contextHelper.js"],"names":["getContextById","selectedContext","context","getCurrentContext","state","getDefaultContext"],"mappings":";;;;;;AAAA;;;;;;;;AAQA,OAAO,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CAAA,KAAA,EAAA,SAAA,EAAsB;AAClD,MAAIC,eAAe,GAAG,KAAK,CAAL,GAAA,CAAA,QAAA,CAAA,IAAA,CAAwB,UAAA,OAAA,EAAO;AAAA,WAAIC,OAAO,CAAPA,EAAAA,KAAJ,SAAA;AAArD,GAAsB,CAAtB;;AACA,MAAI,CAAJ,eAAA,EAAsB;AACpBD,IAAAA,eAAe,GAAG,KAAK,CAAL,GAAA,CAAA,QAAA,CAAA,IAAA,CAAwB,UAAA,OAAA,EAAO;AAAA,aAAIC,OAAO,CAAPA,SAAAA,KAAJ,IAAA;AAAjDD,KAAkB,CAAlBA;AACD;;AAED,SAAA,eAAA;AANK,CAAA;AASP,OAAO,IAAME,iBAAiB,GAAG,SAApBA,iBAAoB,CAAA,KAAA,EAAK;AAAA,SACpCH,cAAc,CAAA,KAAA,EAEZI,KAAK,CAALA,GAAAA,CAAAA,eAAAA,GACIA,KAAK,CAALA,GAAAA,CAAAA,eAAAA,CADJA,EAAAA,GAEIA,KAAK,CAALA,GAAAA,CAL8B,+BACtB,CADsB;AAA/B,CAAA;AAOP,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAA,KAAA,EAAK;AAAA,SACpC,KAAK,CAAL,GAAA,CAAA,QAAA,CAAA,IAAA,CAAwB,UAAA,OAAA,EAAO;AAAA,WAAIH,OAAO,CAAPA,SAAAA,KAAJ,IAAA;AADK,GACpC,CADoC;AAA/B,CAAA;;;;;;;;;;;;0BAhBMF,c;0BASAG,iB;0BAOAE,iB","sourcesContent":["/**\n * Returns the context with the given id\n * Returns the default context if none is set\n *\n * @param state\n * @param contextId\n * @returns {T}\n */\nexport const getContextById = (state, contextId) => {\n  let selectedContext = state.app.contexts.find(context => context.id === contextId);\n  if (!selectedContext) {\n    selectedContext = state.app.contexts.find(context => context.isDefault === true);\n  }\n\n  return selectedContext;\n};\n\nexport const getCurrentContext = state =>\n  getContextById(\n    state,\n    state.app.selectedContext\n      ? state.app.selectedContext.id\n      : state.app.initialSelectedContextIdFromURL\n  );\nexport const getDefaultContext = state =>\n  state.app.contexts.find(context => context.isDefault === true);\n"]}]}