{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/react-hot-loader/babel.js\"],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/components/tool/sankey.component.js","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/components/tool/sankey.component.js","mtime":1548177066784},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/.babelrc","mtime":1548840716937},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n/* eslint-disable camelcase,import/no-extraneous-dependencies,func-names */\n\n\nimport toLower from 'lodash/toLower';\nimport capitalize from 'lodash/capitalize';\nimport startCase from 'lodash/startCase';\nimport { event as d3_event, select as d3_select } from 'd3-selection';\nimport 'd3-transition';\nimport { DETAILED_VIEW_MIN_LINK_HEIGHT, SANKEY_TRANSITION_TIME } from 'constants';\nimport formatValue from 'utils/formatValue';\nimport addSVGDropShadowDef from 'utils/addSVGDropShadowDef';\nimport sankeyLayout from 'components/tool/sankey.d3layout';\nimport Tooltip from 'components/shared/info-tooltip.component';\nimport 'styles/components/tool/sankey.scss';\nimport 'styles/components/tool/node-menu.scss';\n\nvar placeNodeText = function placeNodeText(node) {\n  return \"translate(0,\".concat(-7 + node.renderedHeight / 2 - (node.label.length - 1) * 7, \")\");\n};\n\nvar _default =\n/*#__PURE__*/\nfunction () {\n  function _default() {\n    _classCallCheck(this, _default);\n\n    this.onNodeClickedRequest = null;\n  }\n\n  _createClass(_default, [{\n    key: \"onCreated\",\n    value: function onCreated() {\n      this._build();\n    }\n  }, {\n    key: \"onRemoved\",\n    value: function onRemoved() {\n      this._removeEventListeners();\n    }\n  }, {\n    key: \"translateNodes\",\n    value: function translateNodes(relayoutOptions) {\n      this._relayout(relayoutOptions);\n    }\n  }, {\n    key: \"resizeViewport\",\n    value: function resizeViewport(_ref) {\n      var sankeySize = _ref.sankeySize,\n          relayoutOptions = _objectWithoutProperties(_ref, [\"sankeySize\"]);\n\n      this.layout.setViewportSize(sankeySize);\n\n      this._relayout(relayoutOptions);\n    }\n  }, {\n    key: \"showLoadedLinks\",\n    value: function showLoadedLinks(linksPayload) {\n      if (linksPayload.links === null || !linksPayload.sankeySize) {\n        return;\n      }\n\n      this.scrollContainer.classList.toggle('-detailed', linksPayload.detailedView);\n\n      if (linksPayload.detailedView === false) {\n        this.svg.style('height', '100%');\n        this.scrollContainer.removeEventListener('scroll', this._onScrollBound);\n      }\n\n      this.layout.setViewportSize(linksPayload.sankeySize);\n      this.layout.setLinksPayload(linksPayload);\n      var relayout = this.layout.relayout();\n\n      if (linksPayload.detailedView === true) {\n        this.svg.style('height', \"\".concat(this.layout.getMaxHeight(), \"px\"));\n        this.scrollContainer.addEventListener('scroll', this._onScrollBound);\n      }\n\n      if (relayout === false) {\n        return;\n      }\n\n      this._render(linksPayload.selectedRecolorBy, linksPayload.currentQuant);\n\n      this.selectNodes(linksPayload.selectedNodesIds);\n    }\n  }, {\n    key: \"selectNodes\",\n    value: function selectNodes(selectedNodesIds) {\n      // let minimumY = Infinity;\n      if (!this.layout.isReady()) {\n        return;\n      }\n\n      this.sankeyColumns.selectAll('.sankey-node').classed('-selected', function (node) {\n        return selectedNodesIds.indexOf(node.id) > -1;\n      });\n\n      this._repositionExpandButton(selectedNodesIds);\n    }\n  }, {\n    key: \"toggleCollapseActionButton\",\n    value: function toggleCollapseActionButton(isVisible) {\n      this.collapseActionButton.classList.toggle('is-hidden', !isVisible);\n    }\n  }, {\n    key: \"toggleExpandActionButton\",\n    value: function toggleExpandActionButton(_ref2) {\n      var isVisible = _ref2.isVisible,\n          isReExpand = _ref2.isReExpand;\n      this.expandActionButton.classList.toggle('is-hidden', !isVisible);\n      this.expandActionButton.classList.toggle('-re-expand', isReExpand);\n    }\n  }, {\n    key: \"highlightNodes\",\n    value: function highlightNodes(nodesIds) {\n      this.sankeyColumns.selectAll('.sankey-node').classed('-highlighted', function (node) {\n        return nodesIds.indexOf(node.id) > -1;\n      });\n    }\n  }, {\n    key: \"_relayout\",\n    value: function _relayout(_ref3) {\n      var selectedRecolorBy = _ref3.selectedRecolorBy,\n          currentQuant = _ref3.currentQuant,\n          selectedNodesIds = _ref3.selectedNodesIds;\n\n      if (this.layout.relayout()) {\n        this._render(selectedRecolorBy, currentQuant);\n\n        this._repositionExpandButton(selectedNodesIds);\n      }\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll() {\n      this._repositionExpandButtonScroll();\n    }\n  }, {\n    key: \"_build\",\n    value: function _build() {\n      var _this = this;\n\n      this.layout = sankeyLayout().columnWidth(100);\n      this.el = document.querySelector('.js-sankey');\n      this.scrollContainer = document.querySelector('.js-sankey-scroll-container');\n      this.svg = d3_select('.js-sankey-canvas');\n      this.sankeyColumns = this.svg.selectAll('.sankey-column');\n      this.linksContainer = this.svg.select('.sankey-links');\n      this.linkTooltip = new Tooltip('.js-sankey-tooltip');\n      this.sankeyColumns.on('mouseleave', function () {\n        _this._onColumnOut();\n      });\n      addSVGDropShadowDef(this.svg);\n      this.expandButton = document.querySelector('.js-expand');\n      this.expandActionButton = document.querySelector('.js-expand-action');\n      this.expandActionButton.addEventListener('click', this.callbacks.onExpandClick);\n      this.collapseActionButton = document.querySelector('.js-collapse-action');\n      this.collapseActionButton.addEventListener('click', this.callbacks.onCollapseClick);\n      this.clearButton = document.querySelector('.js-clear');\n      this.clearButton.addEventListener('click', this.callbacks.onClearClick);\n      this._onScrollBound = this._onScroll.bind(this);\n    }\n  }, {\n    key: \"_removeEventListeners\",\n    value: function _removeEventListeners() {\n      this.sankeyColumns.on('mouseleave', null);\n      this.expandActionButton.removeEventListener('click', this.callbacks.onExpandClick);\n      this.collapseActionButton.removeEventListener('click', this.callbacks.onCollapseClick);\n      this.clearButton.removeEventListener('click', this.callbacks.onClearClick);\n    }\n  }, {\n    key: \"_repositionExpandButton\",\n    value: function _repositionExpandButton(nodesIds) {\n      var lastSelectedNodeId = nodesIds && nodesIds[0]; // TODO split by columns\n\n      if (lastSelectedNodeId !== undefined) {\n        var lastSelectedNode = this.sankeyColumns.selectAll('.sankey-node').filter(function (node) {\n          return node.id === lastSelectedNodeId;\n        }).data()[0];\n\n        if (lastSelectedNode) {\n          this.expandButton.classList.add('-visible');\n          this.expandButtonIsVisible = true;\n          var selectedColumnFirstNode = this.sankeyColumns.selectAll('.sankey-node.-selected').filter(function (node) {\n            return node.x === lastSelectedNode.x;\n          }).data().reduce(function (acc, val) {\n            return acc.y < val.y ? acc : val;\n          });\n          this.currentExpandButtonY = Math.max(0, selectedColumnFirstNode.y - 12);\n\n          this._repositionExpandButtonScroll();\n\n          this.expandButton.style.left = \"\".concat(selectedColumnFirstNode.x - 12, \"px\");\n        }\n      } else {\n        this.expandButtonIsVisible = false;\n        this.expandButton.classList.remove('-visible');\n      }\n    }\n  }, {\n    key: \"_repositionExpandButtonScroll\",\n    value: function _repositionExpandButtonScroll() {\n      var y = this.currentExpandButtonY - this.scrollContainer.scrollTop;\n      this.expandButton.style.top = \"\".concat(y, \"px\");\n      this.expandButton.classList.toggle('-visible', y > -10 && this.expandButtonIsVisible === true);\n    }\n  }, {\n    key: \"_getLinkColor\",\n    value: function _getLinkColor(link, selectedRecolorBy) {\n      var classPath = 'sankey-link';\n\n      if (!selectedRecolorBy) {\n        return classPath;\n      }\n\n      if (selectedRecolorBy.name !== 'none') {\n        if (link.recolorBy === null) {\n          return classPath;\n        }\n\n        var recolorBy = link.recolorBy;\n\n        if (selectedRecolorBy.divisor) {\n          recolorBy = Math.floor(link.recolorBy / selectedRecolorBy.divisor);\n        }\n\n        var legendTypeClass = toLower(selectedRecolorBy.legendType);\n        var legendColorThemeClass = toLower(selectedRecolorBy.legendColorTheme);\n        classPath = \"\".concat(classPath, \" -recolorby-\").concat(legendTypeClass, \"-\").concat(legendColorThemeClass, \"-\").concat(recolorBy);\n      } else {\n        classPath = \"\".concat(classPath, \" -recolorgroup-\").concat(link.recolorGroup);\n      }\n\n      return classPath;\n    }\n  }, {\n    key: \"_render\",\n    value: function _render(selectedRecolorBy, currentQuant) {\n      var _this2 = this;\n\n      var cols = this.layout.columns();\n      if (cols.length === 0) return;\n      this.sankeyColumns.data(cols);\n      this.sankeyColumns.attr('transform', function (d) {\n        return \"translate(\".concat(d.x, \",0)\");\n      });\n      this.nodes = this.sankeyColumns.select('.sankey-nodes').selectAll('g.sankey-node').data(function (column) {\n        return column.values;\n      }, function (node) {\n        return node.id;\n      });\n      var that = this;\n      var nodesEnter = this.nodes.enter().append('g').attr('class', 'sankey-node').attr('transform', function (node) {\n        return \"translate(0,\".concat(node.y, \")\");\n      }).classed('-is-aggregated', function (node) {\n        return node.isAggregated;\n      }).classed('-is-domestic', function (node) {\n        return node.isDomesticConsumption;\n      }).classed('-is-alone-in-column', function (node) {\n        return node.isAloneInColumn;\n      }).on('mouseenter', function (node) {\n        return that._onNodeOver(d3_select(_this2), node.id, node.isAggregated);\n      }).on('mouseleave', function () {\n        _this2._onNodeOut();\n      }).on('click', function (node) {\n        if (_this2.onNodeClickedRequest) _this2.onNodeClickedRequest.abort();\n        _this2.onNodeClickedRequest = _this2.callbacks.onNodeClicked(node.id, node.isAggregated);\n      });\n      nodesEnter.append('rect').attr('class', 'sankey-node-rect').attr('width', this.layout.columnWidth()).attr('height', function (d) {\n        return d.renderedHeight;\n      });\n\n      this._renderTitles(nodesEnter);\n\n      this.nodes.selectAll('text').remove();\n\n      this._renderTitles(this.nodes);\n\n      this.nodes.classed('-is-alone-in-column', function (node) {\n        return node.isAloneInColumn;\n      });\n      var nodesUpdate = this.nodes.transition().duration(SANKEY_TRANSITION_TIME).attr('transform', function (d) {\n        return \"translate(0,\".concat(d.y, \")\");\n      });\n      nodesUpdate.select('.sankey-node-rect').attr('height', function (d) {\n        return d.renderedHeight;\n      });\n      this.nodes.exit().remove();\n      var linksData = this.layout.links();\n      var links = this.linksContainer.selectAll('path').data(linksData, function (link) {\n        return link.id;\n      }); // update\n\n      links.attr('class', function (link) {\n        return _this2._getLinkColor(link, selectedRecolorBy);\n      }); // apply color from CSS class immediately\n\n      links.transition().duration(SANKEY_TRANSITION_TIME).attr('stroke-width', function (d) {\n        return Math.max(DETAILED_VIEW_MIN_LINK_HEIGHT, d.renderedHeight);\n      }).attr('d', this.layout.link());\n      this.currentSelectedRecolorBy = selectedRecolorBy;\n      this.currentQuant = currentQuant; // enter\n\n      links.enter().append('path').attr('class', function (link) {\n        return _this2._getLinkColor(link, selectedRecolorBy);\n      }).attr('d', this.layout.link()).on('mouseover', function (link) {\n        that._onLinkOver(link, this);\n      }).on('mouseout', function () {\n        that.linkTooltip.hide();\n        this.classList.remove('-hover');\n      }).transition().duration(SANKEY_TRANSITION_TIME).attr('stroke-width', function (d) {\n        return Math.max(DETAILED_VIEW_MIN_LINK_HEIGHT, d.renderedHeight);\n      }); // exit\n\n      links.exit().transition().duration(SANKEY_TRANSITION_TIME).attr('stroke-width', 0).remove();\n    }\n  }, {\n    key: \"_renderTitles\",\n    value: function _renderTitles(selection) {\n      selection.append('text').attr('class', 'sankey-node-labels').attr('transform', placeNodeText).selectAll('tspan').data(function (node) {\n        return node.label;\n      }).enter().append('tspan').attr('class', 'sankey-node-label').attr('x', this.layout.columnWidth() / 2).attr('dy', 12).text(function (d) {\n        return d && d.toUpperCase();\n      });\n    }\n  }, {\n    key: \"_onNodeOver\",\n    value: function _onNodeOver(selection, nodeId, isAggregated) {\n      this.callbacks.onNodeHighlighted(nodeId, isAggregated);\n    }\n  }, {\n    key: \"_onNodeOut\",\n    value: function _onNodeOut() {\n      this.sankeyColumns.selectAll('.sankey-node').classed('-highlighted', false);\n    }\n  }, {\n    key: \"_onLinkOver\",\n    value: function _onLinkOver(link, linkEl) {\n      var title = \"\".concat(link.sourceNodeName, \" > \").concat(link.targetNodeName);\n      var values = [{\n        title: this.currentQuant.name,\n        unit: this.currentQuant.unit,\n        value: formatValue(link.quant, this.currentQuant.name)\n      }];\n\n      if (this.currentSelectedRecolorBy && this.currentSelectedRecolorBy.name !== 'none') {\n        values.push({\n          title: this.currentSelectedRecolorBy.label,\n          value: this._getLinkValue(link)\n        });\n      }\n\n      this.linkTooltip.show(d3_event.pageX, d3_event.pageY, title, values);\n      linkEl.classList.add('-hover');\n    }\n  }, {\n    key: \"_getLinkValue\",\n    value: function _getLinkValue(link) {\n      if (link.recolorBy === null) {\n        return 'Unknown';\n      }\n\n      if (this.currentSelectedRecolorBy.type !== 'ind') {\n        return capitalize(startCase(link.recolorBy));\n      }\n\n      if (this.currentSelectedRecolorBy.legendType === 'percentual') {\n        // percentual values are always a range, not the raw value. The value coming from the model is already floored to the start of the bucket (splitLinksByColumn)\n        var nextValue = link.recolorBy + this.currentSelectedRecolorBy.divisor;\n        return \"\".concat(link.recolorBy, \"\\u2013\").concat(nextValue, \"%\");\n      }\n\n      return \"\".concat(link.recolorBy, \"/\").concat(this.currentSelectedRecolorBy.maxValue);\n    }\n  }, {\n    key: \"_onColumnOut\",\n    value: function _onColumnOut() {\n      this._onNodeOut();\n\n      this.callbacks.onNodeHighlighted();\n    }\n  }]);\n\n  return _default;\n}();\n\nexport { _default as default };\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_objectWithoutProperties, \"_objectWithoutProperties\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/components/tool/sankey.component.js\");\n  reactHotLoader.register(_objectWithoutPropertiesLoose, \"_objectWithoutPropertiesLoose\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/components/tool/sankey.component.js\");\n  reactHotLoader.register(_classCallCheck, \"_classCallCheck\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/components/tool/sankey.component.js\");\n  reactHotLoader.register(_defineProperties, \"_defineProperties\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/components/tool/sankey.component.js\");\n  reactHotLoader.register(_createClass, \"_createClass\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/components/tool/sankey.component.js\");\n  reactHotLoader.register(placeNodeText, \"placeNodeText\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/components/tool/sankey.component.js\");\n  reactHotLoader.register(_default, \"_default\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/components/tool/sankey.component.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/components/tool/sankey.component.js"],"names":["event","select","placeNodeText","node","relayoutOptions","sankeySize","linksPayload","relayout","selectedNodesIds","isVisible","isReExpand","nodesIds","selectedRecolorBy","currentQuant","sankeyLayout","document","d3_select","addSVGDropShadowDef","lastSelectedNodeId","lastSelectedNode","selectedColumnFirstNode","acc","val","Math","y","link","classPath","recolorBy","legendTypeClass","toLower","legendColorThemeClass","cols","d","column","that","nodesEnter","nodesUpdate","linksData","links","selection","nodeId","isAggregated","linkEl","title","values","unit","value","formatValue","d3_event","capitalize","startCase","nextValue"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AACA,OAAA,OAAA,MAAA,gBAAA;AACA,OAAA,UAAA,MAAA,mBAAA;AACA,OAAA,SAAA,MAAA,kBAAA;AACA,SAASA,KAAK,IAAd,QAAA,EAA4BC,MAAM,IAAlC,SAAA,QAAA,cAAA;AACA,OAAA,eAAA;AACA,SAAA,6BAAA,EAAA,sBAAA,QAAA,WAAA;AACA,OAAA,WAAA,MAAA,mBAAA;AACA,OAAA,mBAAA,MAAA,2BAAA;AACA,OAAA,YAAA,MAAA,iCAAA;AACA,OAAA,OAAA,MAAA,0CAAA;AACA,OAAA,oCAAA;AACA,OAAA,uCAAA;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAA,IAAA,EAAI;AAAA,SAAA,eAAA,MAAA,CACT,CAAA,CAAA,GAAKC,IAAI,CAAJA,cAAAA,GAAL,CAAA,GAA+B,CAACA,IAAI,CAAJA,KAAAA,CAAAA,MAAAA,GAAD,CAAA,IADtB,CAAA,EAAA,GAAA,CAAA;AAA1B,CAAA;;;;;AAIE,WAAA,QAAA,GAAc;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,QAAA,CAAA;;AACZ,SAAA,oBAAA,GAAA,IAAA;AACD;;;;gCAEW;AACV,WAAA,MAAA;AACD;;;gCAEW;AACV,WAAA,qBAAA;AACD;;;mCAEcC,e,EAAiB;AAC9B,WAAA,SAAA,CAAA,eAAA;AACD;;;yCAEkD;AAAA,UAAlCC,UAAkC,GAAA,IAAA,CAAlCA,UAAkC;AAAA,UAAnBD,eAAmB,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,YAAA,CAAA,CAAA;;AACjD,WAAA,MAAA,CAAA,eAAA,CAAA,UAAA;;AACA,WAAA,SAAA,CAAA,eAAA;AACD;;;oCAEeE,Y,EAAc;AAC5B,UAAIA,YAAY,CAAZA,KAAAA,KAAAA,IAAAA,IAA+B,CAACA,YAAY,CAAhD,UAAA,EAA6D;AAC3D;AACD;;AACD,WAAA,eAAA,CAAA,SAAA,CAAA,MAAA,CAAA,WAAA,EAAmDA,YAAY,CAA/D,YAAA;;AAEA,UAAIA,YAAY,CAAZA,YAAAA,KAAJ,KAAA,EAAyC;AACvC,aAAA,GAAA,CAAA,KAAA,CAAA,QAAA,EAAA,MAAA;AACA,aAAA,eAAA,CAAA,mBAAA,CAAA,QAAA,EAAmD,KAAnD,cAAA;AACD;;AAED,WAAA,MAAA,CAAA,eAAA,CAA4BA,YAAY,CAAxC,UAAA;AACA,WAAA,MAAA,CAAA,eAAA,CAAA,YAAA;AAEA,UAAMC,QAAQ,GAAG,KAAA,MAAA,CAAjB,QAAiB,EAAjB;;AAEA,UAAID,YAAY,CAAZA,YAAAA,KAAJ,IAAA,EAAwC;AACtC,aAAA,GAAA,CAAA,KAAA,CAAA,QAAA,EAAA,GAAA,MAAA,CAA4B,KAAA,MAAA,CAA5B,YAA4B,EAA5B,EAAA,IAAA,CAAA;AACA,aAAA,eAAA,CAAA,gBAAA,CAAA,QAAA,EAAgD,KAAhD,cAAA;AACD;;AAED,UAAIC,QAAQ,KAAZ,KAAA,EAAwB;AACtB;AACD;;AAED,WAAA,OAAA,CAAaD,YAAY,CAAzB,iBAAA,EAA6CA,YAAY,CAAzD,YAAA;;AAEA,WAAA,WAAA,CAAiBA,YAAY,CAA7B,gBAAA;AACD;;;gCAEWE,gB,EAAkB;AAC5B;AACA,UAAI,CAAC,KAAA,MAAA,CAAL,OAAK,EAAL,EAA4B;AAC1B;AACD;;AAED,WAAA,aAAA,CAAA,SAAA,CAAA,cAAA,EAAA,OAAA,CAAA,WAAA,EAEwB,UAAA,IAAA,EAAI;AAAA,eAAIA,gBAAgB,CAAhBA,OAAAA,CAAyBL,IAAI,CAA7BK,EAAAA,IAAoC,CAAxC,CAAA;AAF5B,OAAA;;AAIA,WAAA,uBAAA,CAAA,gBAAA;AACD;;;+CAE0BC,S,EAAW;AACpC,WAAA,oBAAA,CAAA,SAAA,CAAA,MAAA,CAAA,WAAA,EAAwD,CAAxD,SAAA;AACD;;;oDAEmD;AAAA,UAAzBA,SAAyB,GAAA,KAAA,CAAzBA,SAAyB;AAAA,UAAdC,UAAc,GAAA,KAAA,CAAdA,UAAc;AAClD,WAAA,kBAAA,CAAA,SAAA,CAAA,MAAA,CAAA,WAAA,EAAsD,CAAtD,SAAA;AACA,WAAA,kBAAA,CAAA,SAAA,CAAA,MAAA,CAAA,YAAA,EAAA,UAAA;AACD;;;mCAEcC,Q,EAAU;AACvB,WAAA,aAAA,CAAA,SAAA,CAAA,cAAA,EAAA,OAAA,CAAA,cAAA,EAE2B,UAAA,IAAA,EAAI;AAAA,eAAIA,QAAQ,CAARA,OAAAA,CAAiBR,IAAI,CAArBQ,EAAAA,IAA4B,CAAhC,CAAA;AAF/B,OAAA;AAGD;;;qCAEgE;AAAA,UAArDC,iBAAqD,GAAA,KAAA,CAArDA,iBAAqD;AAAA,UAAlCC,YAAkC,GAAA,KAAA,CAAlCA,YAAkC;AAAA,UAApBL,gBAAoB,GAAA,KAAA,CAApBA,gBAAoB;;AAC/D,UAAI,KAAA,MAAA,CAAJ,QAAI,EAAJ,EAA4B;AAC1B,aAAA,OAAA,CAAA,iBAAA,EAAA,YAAA;;AACA,aAAA,uBAAA,CAAA,gBAAA;AACD;AACF;;;gCAEW;AACV,WAAA,6BAAA;AACD;;;6BAEQ;AAAA,UAAA,KAAA,GAAA,IAAA;;AACP,WAAA,MAAA,GAAcM,YAAY,GAAZA,WAAAA,CAAd,GAAcA,CAAd;AAEA,WAAA,EAAA,GAAUC,QAAQ,CAARA,aAAAA,CAAV,YAAUA,CAAV;AACA,WAAA,eAAA,GAAuBA,QAAQ,CAARA,aAAAA,CAAvB,6BAAuBA,CAAvB;AACA,WAAA,GAAA,GAAWC,SAAS,CAApB,mBAAoB,CAApB;AACA,WAAA,aAAA,GAAqB,KAAA,GAAA,CAAA,SAAA,CAArB,gBAAqB,CAArB;AACA,WAAA,cAAA,GAAsB,KAAA,GAAA,CAAA,MAAA,CAAtB,eAAsB,CAAtB;AAEA,WAAA,WAAA,GAAmB,IAAA,OAAA,CAAnB,oBAAmB,CAAnB;AAEA,WAAA,aAAA,CAAA,EAAA,CAAA,YAAA,EAAoC,YAAM;AACxC,QAAA,KAAI,CAAJ,YAAA;AADF,OAAA;AAIAC,MAAAA,mBAAmB,CAAC,KAApBA,GAAmB,CAAnBA;AAEA,WAAA,YAAA,GAAoBF,QAAQ,CAARA,aAAAA,CAApB,YAAoBA,CAApB;AACA,WAAA,kBAAA,GAA0BA,QAAQ,CAARA,aAAAA,CAA1B,mBAA0BA,CAA1B;AACA,WAAA,kBAAA,CAAA,gBAAA,CAAA,OAAA,EAAkD,KAAA,SAAA,CAAlD,aAAA;AACA,WAAA,oBAAA,GAA4BA,QAAQ,CAARA,aAAAA,CAA5B,qBAA4BA,CAA5B;AACA,WAAA,oBAAA,CAAA,gBAAA,CAAA,OAAA,EAAoD,KAAA,SAAA,CAApD,eAAA;AACA,WAAA,WAAA,GAAmBA,QAAQ,CAARA,aAAAA,CAAnB,WAAmBA,CAAnB;AACA,WAAA,WAAA,CAAA,gBAAA,CAAA,OAAA,EAA2C,KAAA,SAAA,CAA3C,YAAA;AAEA,WAAA,cAAA,GAAsB,KAAA,SAAA,CAAA,IAAA,CAAtB,IAAsB,CAAtB;AACD;;;4CAEuB;AACtB,WAAA,aAAA,CAAA,EAAA,CAAA,YAAA,EAAA,IAAA;AACA,WAAA,kBAAA,CAAA,mBAAA,CAAA,OAAA,EAAqD,KAAA,SAAA,CAArD,aAAA;AACA,WAAA,oBAAA,CAAA,mBAAA,CAAA,OAAA,EAAuD,KAAA,SAAA,CAAvD,eAAA;AACA,WAAA,WAAA,CAAA,mBAAA,CAAA,OAAA,EAA8C,KAAA,SAAA,CAA9C,YAAA;AACD;;;4CAEuBJ,Q,EAAU;AAChC,UAAMO,kBAAkB,GAAGP,QAAQ,IAAIA,QAAQ,CADf,CACe,CAA/C,CADgC,CAGhC;;AACA,UAAIO,kBAAkB,KAAtB,SAAA,EAAsC;AACpC,YAAMC,gBAAgB,GAAG,KAAA,aAAA,CAAA,SAAA,CAAA,cAAA,EAAA,MAAA,CAEf,UAAA,IAAA,EAAI;AAAA,iBAAIhB,IAAI,CAAJA,EAAAA,KAAJ,kBAAA;AAFW,SAAA,EAAA,IAAA,GAAzB,CAAyB,CAAzB;;AAKA,YAAA,gBAAA,EAAsB;AACpB,eAAA,YAAA,CAAA,SAAA,CAAA,GAAA,CAAA,UAAA;AACA,eAAA,qBAAA,GAAA,IAAA;AAEA,cAAMiB,uBAAuB,GAAG,KAAA,aAAA,CAAA,SAAA,CAAA,wBAAA,EAAA,MAAA,CAEtB,UAAA,IAAA,EAAI;AAAA,mBAAIjB,IAAI,CAAJA,CAAAA,KAAWgB,gBAAgB,CAA/B,CAAA;AAFkB,WAAA,EAAA,IAAA,GAAA,MAAA,CAItB,UAAA,GAAA,EAAA,GAAA,EAAA;AAAA,mBAAeE,GAAG,CAAHA,CAAAA,GAAQC,GAAG,CAAXD,CAAAA,GAAAA,GAAAA,GAAf,GAAA;AAJV,WAAgC,CAAhC;AAMA,eAAA,oBAAA,GAA4BE,IAAI,CAAJA,GAAAA,CAAAA,CAAAA,EAAYH,uBAAuB,CAAvBA,CAAAA,GAAxC,EAA4BG,CAA5B;;AAEA,eAAA,6BAAA;;AACA,eAAA,YAAA,CAAA,KAAA,CAAA,IAAA,GAAA,GAAA,MAAA,CAAkCH,uBAAuB,CAAvBA,CAAAA,GAAlC,EAAA,EAAA,IAAA,CAAA;AACD;AApBH,OAAA,MAqBO;AACL,aAAA,qBAAA,GAAA,KAAA;AACA,aAAA,YAAA,CAAA,SAAA,CAAA,MAAA,CAAA,UAAA;AACD;AACF;;;oDAE+B;AAC9B,UAAMI,CAAC,GAAG,KAAA,oBAAA,GAA4B,KAAA,eAAA,CAAtC,SAAA;AACA,WAAA,YAAA,CAAA,KAAA,CAAA,GAAA,GAAA,GAAA,MAAA,CAAA,CAAA,EAAA,IAAA,CAAA;AACA,WAAA,YAAA,CAAA,SAAA,CAAA,MAAA,CAAA,UAAA,EAA+CA,CAAC,GAAG,CAAJA,EAAAA,IAAW,KAAA,qBAAA,KAA1D,IAAA;AACD;;;kCAEaC,I,EAAMb,iB,EAAmB;AACrC,UAAIc,SAAS,GAAb,aAAA;;AACA,UAAI,CAAJ,iBAAA,EAAwB;AACtB,eAAA,SAAA;AACD;;AAED,UAAId,iBAAiB,CAAjBA,IAAAA,KAAJ,MAAA,EAAuC;AACrC,YAAIa,IAAI,CAAJA,SAAAA,KAAJ,IAAA,EAA6B;AAC3B,iBAAA,SAAA;AACD;;AACD,YAAIE,SAAS,GAAGF,IAAI,CAApB,SAAA;;AACA,YAAIb,iBAAiB,CAArB,OAAA,EAA+B;AAC7Be,UAAAA,SAAS,GAAGJ,IAAI,CAAJA,KAAAA,CAAWE,IAAI,CAAJA,SAAAA,GAAiBb,iBAAiB,CAAzDe,OAAYJ,CAAZI;AACD;;AACD,YAAMC,eAAe,GAAGC,OAAO,CAACjB,iBAAiB,CAAjD,UAA+B,CAA/B;AACA,YAAMkB,qBAAqB,GAAGD,OAAO,CAACjB,iBAAiB,CAAvD,gBAAqC,CAArC;AACAc,QAAAA,SAAS,GAAA,GAAA,MAAA,CAAA,SAAA,EAAA,cAAA,EAAA,MAAA,CAAA,eAAA,EAAA,GAAA,EAAA,MAAA,CAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,CAATA,SAAS,CAATA;AAVF,OAAA,MAWO;AACLA,QAAAA,SAAS,GAAA,GAAA,MAAA,CAAA,SAAA,EAAA,iBAAA,EAAA,MAAA,CAAiCD,IAAI,CAA9CC,YAAS,CAATA;AACD;;AAED,aAAA,SAAA;AACD;;;4BAEOd,iB,EAAmBC,Y,EAAc;AAAA,UAAA,MAAA,GAAA,IAAA;;AACvC,UAAMkB,IAAI,GAAG,KAAA,MAAA,CAAb,OAAa,EAAb;AACA,UAAIA,IAAI,CAAJA,MAAAA,KAAJ,CAAA,EAAuB;AACvB,WAAA,aAAA,CAAA,IAAA,CAAA,IAAA;AAEA,WAAA,aAAA,CAAA,IAAA,CAAA,WAAA,EAAqC,UAAA,CAAA,EAAC;AAAA,eAAA,aAAA,MAAA,CAAiBC,CAAC,CAAlB,CAAA,EAAA,KAAA,CAAA;AAAtC,OAAA;AAEA,WAAA,KAAA,GAAa,KAAA,aAAA,CAAA,MAAA,CAAA,eAAA,EAAA,SAAA,CAAA,eAAA,EAAA,IAAA,CAGL,UAAA,MAAA,EAAM;AAAA,eAAIC,MAAM,CAAV,MAAA;AAHD,OAAA,EAGoB,UAAA,IAAA,EAAI;AAAA,eAAI9B,IAAI,CAAR,EAAA;AAHrC,OAAa,CAAb;AAKA,UAAM+B,IAAI,GAAV,IAAA;AACA,UAAMC,UAAU,GAAG,KAAA,KAAA,CAAA,KAAA,GAAA,MAAA,CAAA,GAAA,EAAA,IAAA,CAAA,OAAA,EAAA,aAAA,EAAA,IAAA,CAAA,WAAA,EAIE,UAAA,IAAA,EAAI;AAAA,eAAA,eAAA,MAAA,CAAmBhC,IAAI,CAAvB,CAAA,EAAA,GAAA,CAAA;AAJN,OAAA,EAAA,OAAA,CAAA,gBAAA,EAKU,UAAA,IAAA,EAAI;AAAA,eAAIA,IAAI,CAAR,YAAA;AALd,OAAA,EAAA,OAAA,CAAA,cAAA,EAMQ,UAAA,IAAA,EAAI;AAAA,eAAIA,IAAI,CAAR,qBAAA;AANZ,OAAA,EAAA,OAAA,CAAA,qBAAA,EAOe,UAAA,IAAA,EAAI;AAAA,eAAIA,IAAI,CAAR,eAAA;AAPnB,OAAA,EAAA,EAAA,CAAA,YAAA,EAQC,UAAA,IAAA,EAAI;AAAA,eAAI+B,IAAI,CAAJA,WAAAA,CAAiBlB,SAAS,CAA1BkB,MAA0B,CAA1BA,EAAkC/B,IAAI,CAAtC+B,EAAAA,EAA2C/B,IAAI,CAAnD,YAAI+B,CAAJ;AARL,OAAA,EAAA,EAAA,CAAA,YAAA,EASC,YAAM;AACtB,QAAA,MAAI,CAAJ,UAAA;AAVe,OAAA,EAAA,EAAA,CAAA,OAAA,EAYJ,UAAA,IAAA,EAAQ;AACnB,YAAI,MAAI,CAAR,oBAAA,EAA+B,MAAI,CAAJ,oBAAA,CAAA,KAAA;AAC/B,QAAA,MAAI,CAAJ,oBAAA,GAA4B,MAAI,CAAJ,SAAA,CAAA,aAAA,CAA6B/B,IAAI,CAAjC,EAAA,EAAsCA,IAAI,CAAtE,YAA4B,CAA5B;AAdJ,OAAmB,CAAnB;AAiBAgC,MAAAA,UAAU,CAAVA,MAAAA,CAAAA,MAAAA,EAAAA,IAAAA,CAAAA,OAAAA,EAAAA,kBAAAA,EAAAA,IAAAA,CAAAA,OAAAA,EAGiB,KAAA,MAAA,CAHjBA,WAGiB,EAHjBA,EAAAA,IAAAA,CAAAA,QAAAA,EAIkB,UAAA,CAAA,EAAC;AAAA,eAAIH,CAAC,CAAL,cAAA;AAJnBG,OAAAA;;AAMA,WAAA,aAAA,CAAA,UAAA;;AAEA,WAAA,KAAA,CAAA,SAAA,CAAA,MAAA,EAAA,MAAA;;AACA,WAAA,aAAA,CAAmB,KAAnB,KAAA;;AAEA,WAAA,KAAA,CAAA,OAAA,CAAA,qBAAA,EAA0C,UAAA,IAAA,EAAI;AAAA,eAAIhC,IAAI,CAAR,eAAA;AAA9C,OAAA;AAEA,UAAMiC,WAAW,GAAG,KAAA,KAAA,CAAA,UAAA,GAAA,QAAA,CAAA,sBAAA,EAAA,IAAA,CAAA,WAAA,EAGC,UAAA,CAAA,EAAC;AAAA,eAAA,eAAA,MAAA,CAAmBJ,CAAC,CAApB,CAAA,EAAA,GAAA,CAAA;AAHtB,OAAoB,CAApB;AAKAI,MAAAA,WAAW,CAAXA,MAAAA,CAAAA,mBAAAA,EAAAA,IAAAA,CAAAA,QAAAA,EAAuD,UAAA,CAAA,EAAC;AAAA,eAAIJ,CAAC,CAAL,cAAA;AAAxDI,OAAAA;AAEA,WAAA,KAAA,CAAA,IAAA,GAAA,MAAA;AAEA,UAAMC,SAAS,GAAG,KAAA,MAAA,CAAlB,KAAkB,EAAlB;AACA,UAAMC,KAAK,GAAG,KAAA,cAAA,CAAA,SAAA,CAAA,MAAA,EAAA,IAAA,CAAA,SAAA,EAAsD,UAAA,IAAA,EAAI;AAAA,eAAIb,IAAI,CAAR,EAAA;AArDjC,OAqDzB,CAAd,CArDuC,CAuDvC;;AACAa,MAAAA,KAAK,CAALA,IAAAA,CAAAA,OAAAA,EAAoB,UAAA,IAAA,EAAI;AAAA,eAAI,MAAI,CAAJ,aAAA,CAAA,IAAA,EAAJ,iBAAI,CAAJ;AAxDe,OAwDvCA,EAxDuC,CAwDmC;;AAC1EA,MAAAA,KAAK,CAALA,UAAAA,GAAAA,QAAAA,CAAAA,sBAAAA,EAAAA,IAAAA,CAAAA,cAAAA,EAGwB,UAAA,CAAA,EAAC;AAAA,eAAIf,IAAI,CAAJA,GAAAA,CAAAA,6BAAAA,EAAwCS,CAAC,CAA7C,cAAIT,CAAJ;AAHzBe,OAAAA,EAAAA,IAAAA,CAAAA,GAAAA,EAIa,KAAA,MAAA,CAJbA,IAIa,EAJbA;AAMA,WAAA,wBAAA,GAAA,iBAAA;AACA,WAAA,YAAA,GAhEuC,YAgEvC,CAhEuC,CAkEvC;;AACAA,MAAAA,KAAK,CAALA,KAAAA,GAAAA,MAAAA,CAAAA,MAAAA,EAAAA,IAAAA,CAAAA,OAAAA,EAGiB,UAAA,IAAA,EAAI;AAAA,eAAI,MAAI,CAAJ,aAAA,CAAA,IAAA,EAAJ,iBAAI,CAAJ;AAHrBA,OAAAA,EAAAA,IAAAA,CAAAA,GAAAA,EAIa,KAAA,MAAA,CAJbA,IAIa,EAJbA,EAAAA,EAAAA,CAAAA,WAAAA,EAKmB,UAAA,IAAA,EAAe;AAC9BJ,QAAAA,IAAI,CAAJA,WAAAA,CAAAA,IAAAA,EAAAA,IAAAA;AANJI,OAAAA,EAAAA,EAAAA,CAAAA,UAAAA,EAQkB,YAAW;AACzBJ,QAAAA,IAAI,CAAJA,WAAAA,CAAAA,IAAAA;AACA,aAAA,SAAA,CAAA,MAAA,CAAA,QAAA;AAVJI,OAAAA,EAAAA,UAAAA,GAAAA,QAAAA,CAAAA,sBAAAA,EAAAA,IAAAA,CAAAA,cAAAA,EAcwB,UAAA,CAAA,EAAC;AAAA,eAAIf,IAAI,CAAJA,GAAAA,CAAAA,6BAAAA,EAAwCS,CAAC,CAA7C,cAAIT,CAAJ;AAjFc,OAmEvCe,EAnEuC,CAmFvC;;AACAA,MAAAA,KAAK,CAALA,IAAAA,GAAAA,UAAAA,GAAAA,QAAAA,CAAAA,sBAAAA,EAAAA,IAAAA,CAAAA,cAAAA,EAAAA,CAAAA,EAAAA,MAAAA;AAMD;;;kCAEaC,S,EAAW;AACvBA,MAAAA,SAAS,CAATA,MAAAA,CAAAA,MAAAA,EAAAA,IAAAA,CAAAA,OAAAA,EAAAA,oBAAAA,EAAAA,IAAAA,CAAAA,WAAAA,EAAAA,aAAAA,EAAAA,SAAAA,CAAAA,OAAAA,EAAAA,IAAAA,CAKQ,UAAA,IAAA,EAAI;AAAA,eAAIpC,IAAI,CAAR,KAAA;AALZoC,OAAAA,EAAAA,KAAAA,GAAAA,MAAAA,CAAAA,OAAAA,EAAAA,IAAAA,CAAAA,OAAAA,EAAAA,mBAAAA,EAAAA,IAAAA,CAAAA,GAAAA,EASa,KAAA,MAAA,CAAA,WAAA,KATbA,CAAAA,EAAAA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,EAAAA,IAAAA,CAWQ,UAAA,CAAA,EAAC;AAAA,eAAIP,CAAC,IAAIA,CAAC,CAAV,WAASA,EAAT;AAXTO,OAAAA;AAYD;;;gCAEWA,S,EAAWC,M,EAAQC,Y,EAAc;AAC3C,WAAA,SAAA,CAAA,iBAAA,CAAA,MAAA,EAAA,YAAA;AACD;;;iCAEY;AACX,WAAA,aAAA,CAAA,SAAA,CAAA,cAAA,EAAA,OAAA,CAAA,cAAA,EAAA,KAAA;AACD;;;gCAEWhB,I,EAAMiB,M,EAAQ;AACxB,UAAMC,KAAK,GAAA,GAAA,MAAA,CAAMlB,IAAI,CAAV,cAAA,EAAA,KAAA,EAAA,MAAA,CAA+BA,IAAI,CAA9C,cAAW,CAAX;AACA,UAAMmB,MAAM,GAAG,CACb;AACED,QAAAA,KAAK,EAAE,KAAA,YAAA,CADT,IAAA;AAEEE,QAAAA,IAAI,EAAE,KAAA,YAAA,CAFR,IAAA;AAGEC,QAAAA,KAAK,EAAEC,WAAW,CAACtB,IAAI,CAAL,KAAA,EAAa,KAAA,YAAA,CAAb,IAAA;AAHpB,OADa,CAAf;;AAQA,UAAI,KAAA,wBAAA,IAAiC,KAAA,wBAAA,CAAA,IAAA,KAArC,MAAA,EAAoF;AAClFmB,QAAAA,MAAM,CAANA,IAAAA,CAAY;AACVD,UAAAA,KAAK,EAAE,KAAA,wBAAA,CADG,KAAA;AAEVG,UAAAA,KAAK,EAAE,KAAA,aAAA,CAAA,IAAA;AAFG,SAAZF;AAID;;AAED,WAAA,WAAA,CAAA,IAAA,CAAsBI,QAAQ,CAA9B,KAAA,EAAsCA,QAAQ,CAA9C,KAAA,EAAA,KAAA,EAAA,MAAA;AACAN,MAAAA,MAAM,CAANA,SAAAA,CAAAA,GAAAA,CAAAA,QAAAA;AACD;;;kCAEajB,I,EAAM;AAClB,UAAIA,IAAI,CAAJA,SAAAA,KAAJ,IAAA,EAA6B;AAC3B,eAAA,SAAA;AACD;;AACD,UAAI,KAAA,wBAAA,CAAA,IAAA,KAAJ,KAAA,EAAkD;AAChD,eAAOwB,UAAU,CAACC,SAAS,CAACzB,IAAI,CAAhC,SAA2B,CAAV,CAAjB;AACD;;AAED,UAAI,KAAA,wBAAA,CAAA,UAAA,KAAJ,YAAA,EAA+D;AAC7D;AACA,YAAM0B,SAAS,GAAG1B,IAAI,CAAJA,SAAAA,GAAiB,KAAA,wBAAA,CAAnC,OAAA;AACA,eAAA,GAAA,MAAA,CAAUA,IAAI,CAAd,SAAA,EAAA,QAAA,EAAA,MAAA,CAAA,SAAA,EAAA,GAAA,CAAA;AACD;;AAED,aAAA,GAAA,MAAA,CAAUA,IAAI,CAAd,SAAA,EAAA,GAAA,EAAA,MAAA,CAA4B,KAAA,wBAAA,CAA5B,QAAA,CAAA;AACD;;;mCAEc;AACb,WAAA,UAAA;;AACA,WAAA,SAAA,CAAA,iBAAA;AACD;;;;;;;;;;;;;;;;;;;;;;;0BA1VGvB,a","sourcesContent":["/* eslint-disable camelcase,import/no-extraneous-dependencies,func-names */\nimport toLower from 'lodash/toLower';\nimport capitalize from 'lodash/capitalize';\nimport startCase from 'lodash/startCase';\nimport { event as d3_event, select as d3_select } from 'd3-selection';\nimport 'd3-transition';\nimport { DETAILED_VIEW_MIN_LINK_HEIGHT, SANKEY_TRANSITION_TIME } from 'constants';\nimport formatValue from 'utils/formatValue';\nimport addSVGDropShadowDef from 'utils/addSVGDropShadowDef';\nimport sankeyLayout from 'components/tool/sankey.d3layout';\nimport Tooltip from 'components/shared/info-tooltip.component';\nimport 'styles/components/tool/sankey.scss';\nimport 'styles/components/tool/node-menu.scss';\n\nconst placeNodeText = node =>\n  `translate(0,${-7 + node.renderedHeight / 2 - (node.label.length - 1) * 7})`;\n\nexport default class {\n  constructor() {\n    this.onNodeClickedRequest = null;\n  }\n\n  onCreated() {\n    this._build();\n  }\n\n  onRemoved() {\n    this._removeEventListeners();\n  }\n\n  translateNodes(relayoutOptions) {\n    this._relayout(relayoutOptions);\n  }\n\n  resizeViewport({ sankeySize, ...relayoutOptions }) {\n    this.layout.setViewportSize(sankeySize);\n    this._relayout(relayoutOptions);\n  }\n\n  showLoadedLinks(linksPayload) {\n    if (linksPayload.links === null || !linksPayload.sankeySize) {\n      return;\n    }\n    this.scrollContainer.classList.toggle('-detailed', linksPayload.detailedView);\n\n    if (linksPayload.detailedView === false) {\n      this.svg.style('height', '100%');\n      this.scrollContainer.removeEventListener('scroll', this._onScrollBound);\n    }\n\n    this.layout.setViewportSize(linksPayload.sankeySize);\n    this.layout.setLinksPayload(linksPayload);\n\n    const relayout = this.layout.relayout();\n\n    if (linksPayload.detailedView === true) {\n      this.svg.style('height', `${this.layout.getMaxHeight()}px`);\n      this.scrollContainer.addEventListener('scroll', this._onScrollBound);\n    }\n\n    if (relayout === false) {\n      return;\n    }\n\n    this._render(linksPayload.selectedRecolorBy, linksPayload.currentQuant);\n\n    this.selectNodes(linksPayload.selectedNodesIds);\n  }\n\n  selectNodes(selectedNodesIds) {\n    // let minimumY = Infinity;\n    if (!this.layout.isReady()) {\n      return;\n    }\n\n    this.sankeyColumns\n      .selectAll('.sankey-node')\n      .classed('-selected', node => selectedNodesIds.indexOf(node.id) > -1);\n\n    this._repositionExpandButton(selectedNodesIds);\n  }\n\n  toggleCollapseActionButton(isVisible) {\n    this.collapseActionButton.classList.toggle('is-hidden', !isVisible);\n  }\n\n  toggleExpandActionButton({ isVisible, isReExpand }) {\n    this.expandActionButton.classList.toggle('is-hidden', !isVisible);\n    this.expandActionButton.classList.toggle('-re-expand', isReExpand);\n  }\n\n  highlightNodes(nodesIds) {\n    this.sankeyColumns\n      .selectAll('.sankey-node')\n      .classed('-highlighted', node => nodesIds.indexOf(node.id) > -1);\n  }\n\n  _relayout({ selectedRecolorBy, currentQuant, selectedNodesIds }) {\n    if (this.layout.relayout()) {\n      this._render(selectedRecolorBy, currentQuant);\n      this._repositionExpandButton(selectedNodesIds);\n    }\n  }\n\n  _onScroll() {\n    this._repositionExpandButtonScroll();\n  }\n\n  _build() {\n    this.layout = sankeyLayout().columnWidth(100);\n\n    this.el = document.querySelector('.js-sankey');\n    this.scrollContainer = document.querySelector('.js-sankey-scroll-container');\n    this.svg = d3_select('.js-sankey-canvas');\n    this.sankeyColumns = this.svg.selectAll('.sankey-column');\n    this.linksContainer = this.svg.select('.sankey-links');\n\n    this.linkTooltip = new Tooltip('.js-sankey-tooltip');\n\n    this.sankeyColumns.on('mouseleave', () => {\n      this._onColumnOut();\n    });\n\n    addSVGDropShadowDef(this.svg);\n\n    this.expandButton = document.querySelector('.js-expand');\n    this.expandActionButton = document.querySelector('.js-expand-action');\n    this.expandActionButton.addEventListener('click', this.callbacks.onExpandClick);\n    this.collapseActionButton = document.querySelector('.js-collapse-action');\n    this.collapseActionButton.addEventListener('click', this.callbacks.onCollapseClick);\n    this.clearButton = document.querySelector('.js-clear');\n    this.clearButton.addEventListener('click', this.callbacks.onClearClick);\n\n    this._onScrollBound = this._onScroll.bind(this);\n  }\n\n  _removeEventListeners() {\n    this.sankeyColumns.on('mouseleave', null);\n    this.expandActionButton.removeEventListener('click', this.callbacks.onExpandClick);\n    this.collapseActionButton.removeEventListener('click', this.callbacks.onCollapseClick);\n    this.clearButton.removeEventListener('click', this.callbacks.onClearClick);\n  }\n\n  _repositionExpandButton(nodesIds) {\n    const lastSelectedNodeId = nodesIds && nodesIds[0];\n\n    // TODO split by columns\n    if (lastSelectedNodeId !== undefined) {\n      const lastSelectedNode = this.sankeyColumns\n        .selectAll('.sankey-node')\n        .filter(node => node.id === lastSelectedNodeId)\n        .data()[0];\n\n      if (lastSelectedNode) {\n        this.expandButton.classList.add('-visible');\n        this.expandButtonIsVisible = true;\n\n        const selectedColumnFirstNode = this.sankeyColumns\n          .selectAll('.sankey-node.-selected')\n          .filter(node => node.x === lastSelectedNode.x)\n          .data()\n          .reduce((acc, val) => (acc.y < val.y ? acc : val));\n\n        this.currentExpandButtonY = Math.max(0, selectedColumnFirstNode.y - 12);\n\n        this._repositionExpandButtonScroll();\n        this.expandButton.style.left = `${selectedColumnFirstNode.x - 12}px`;\n      }\n    } else {\n      this.expandButtonIsVisible = false;\n      this.expandButton.classList.remove('-visible');\n    }\n  }\n\n  _repositionExpandButtonScroll() {\n    const y = this.currentExpandButtonY - this.scrollContainer.scrollTop;\n    this.expandButton.style.top = `${y}px`;\n    this.expandButton.classList.toggle('-visible', y > -10 && this.expandButtonIsVisible === true);\n  }\n\n  _getLinkColor(link, selectedRecolorBy) {\n    let classPath = 'sankey-link';\n    if (!selectedRecolorBy) {\n      return classPath;\n    }\n\n    if (selectedRecolorBy.name !== 'none') {\n      if (link.recolorBy === null) {\n        return classPath;\n      }\n      let recolorBy = link.recolorBy;\n      if (selectedRecolorBy.divisor) {\n        recolorBy = Math.floor(link.recolorBy / selectedRecolorBy.divisor);\n      }\n      const legendTypeClass = toLower(selectedRecolorBy.legendType);\n      const legendColorThemeClass = toLower(selectedRecolorBy.legendColorTheme);\n      classPath = `${classPath} -recolorby-${legendTypeClass}-${legendColorThemeClass}-${recolorBy}`;\n    } else {\n      classPath = `${classPath} -recolorgroup-${link.recolorGroup}`;\n    }\n\n    return classPath;\n  }\n\n  _render(selectedRecolorBy, currentQuant) {\n    const cols = this.layout.columns();\n    if (cols.length === 0) return;\n    this.sankeyColumns.data(cols);\n\n    this.sankeyColumns.attr('transform', d => `translate(${d.x},0)`);\n\n    this.nodes = this.sankeyColumns\n      .select('.sankey-nodes')\n      .selectAll('g.sankey-node')\n      .data(column => column.values, node => node.id);\n\n    const that = this;\n    const nodesEnter = this.nodes\n      .enter()\n      .append('g')\n      .attr('class', 'sankey-node')\n      .attr('transform', node => `translate(0,${node.y})`)\n      .classed('-is-aggregated', node => node.isAggregated)\n      .classed('-is-domestic', node => node.isDomesticConsumption)\n      .classed('-is-alone-in-column', node => node.isAloneInColumn)\n      .on('mouseenter', node => that._onNodeOver(d3_select(this), node.id, node.isAggregated))\n      .on('mouseleave', () => {\n        this._onNodeOut();\n      })\n      .on('click', node => {\n        if (this.onNodeClickedRequest) this.onNodeClickedRequest.abort();\n        this.onNodeClickedRequest = this.callbacks.onNodeClicked(node.id, node.isAggregated);\n      });\n\n    nodesEnter\n      .append('rect')\n      .attr('class', 'sankey-node-rect')\n      .attr('width', this.layout.columnWidth())\n      .attr('height', d => d.renderedHeight);\n\n    this._renderTitles(nodesEnter);\n\n    this.nodes.selectAll('text').remove();\n    this._renderTitles(this.nodes);\n\n    this.nodes.classed('-is-alone-in-column', node => node.isAloneInColumn);\n\n    const nodesUpdate = this.nodes\n      .transition()\n      .duration(SANKEY_TRANSITION_TIME)\n      .attr('transform', d => `translate(0,${d.y})`);\n\n    nodesUpdate.select('.sankey-node-rect').attr('height', d => d.renderedHeight);\n\n    this.nodes.exit().remove();\n\n    const linksData = this.layout.links();\n    const links = this.linksContainer.selectAll('path').data(linksData, link => link.id);\n\n    // update\n    links.attr('class', link => this._getLinkColor(link, selectedRecolorBy)); // apply color from CSS class immediately\n    links\n      .transition()\n      .duration(SANKEY_TRANSITION_TIME)\n      .attr('stroke-width', d => Math.max(DETAILED_VIEW_MIN_LINK_HEIGHT, d.renderedHeight))\n      .attr('d', this.layout.link());\n\n    this.currentSelectedRecolorBy = selectedRecolorBy;\n    this.currentQuant = currentQuant;\n\n    // enter\n    links\n      .enter()\n      .append('path')\n      .attr('class', link => this._getLinkColor(link, selectedRecolorBy))\n      .attr('d', this.layout.link())\n      .on('mouseover', function(link) {\n        that._onLinkOver(link, this);\n      })\n      .on('mouseout', function() {\n        that.linkTooltip.hide();\n        this.classList.remove('-hover');\n      })\n      .transition()\n      .duration(SANKEY_TRANSITION_TIME)\n      .attr('stroke-width', d => Math.max(DETAILED_VIEW_MIN_LINK_HEIGHT, d.renderedHeight));\n\n    // exit\n    links\n      .exit()\n      .transition()\n      .duration(SANKEY_TRANSITION_TIME)\n      .attr('stroke-width', 0)\n      .remove();\n  }\n\n  _renderTitles(selection) {\n    selection\n      .append('text')\n      .attr('class', 'sankey-node-labels')\n      .attr('transform', placeNodeText)\n      .selectAll('tspan')\n      .data(node => node.label)\n      .enter()\n      .append('tspan')\n      .attr('class', 'sankey-node-label')\n      .attr('x', this.layout.columnWidth() / 2)\n      .attr('dy', 12)\n      .text(d => d && d.toUpperCase());\n  }\n\n  _onNodeOver(selection, nodeId, isAggregated) {\n    this.callbacks.onNodeHighlighted(nodeId, isAggregated);\n  }\n\n  _onNodeOut() {\n    this.sankeyColumns.selectAll('.sankey-node').classed('-highlighted', false);\n  }\n\n  _onLinkOver(link, linkEl) {\n    const title = `${link.sourceNodeName} > ${link.targetNodeName}`;\n    const values = [\n      {\n        title: this.currentQuant.name,\n        unit: this.currentQuant.unit,\n        value: formatValue(link.quant, this.currentQuant.name)\n      }\n    ];\n\n    if (this.currentSelectedRecolorBy && this.currentSelectedRecolorBy.name !== 'none') {\n      values.push({\n        title: this.currentSelectedRecolorBy.label,\n        value: this._getLinkValue(link)\n      });\n    }\n\n    this.linkTooltip.show(d3_event.pageX, d3_event.pageY, title, values);\n    linkEl.classList.add('-hover');\n  }\n\n  _getLinkValue(link) {\n    if (link.recolorBy === null) {\n      return 'Unknown';\n    }\n    if (this.currentSelectedRecolorBy.type !== 'ind') {\n      return capitalize(startCase(link.recolorBy));\n    }\n\n    if (this.currentSelectedRecolorBy.legendType === 'percentual') {\n      // percentual values are always a range, not the raw value. The value coming from the model is already floored to the start of the bucket (splitLinksByColumn)\n      const nextValue = link.recolorBy + this.currentSelectedRecolorBy.divisor;\n      return `${link.recolorBy}–${nextValue}%`;\n    }\n\n    return `${link.recolorBy}/${this.currentSelectedRecolorBy.maxValue}`;\n  }\n\n  _onColumnOut() {\n    this._onNodeOut();\n    this.callbacks.onNodeHighlighted();\n  }\n}\n"]}]}