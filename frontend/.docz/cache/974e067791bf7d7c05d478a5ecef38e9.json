{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/react-hot-loader/babel.js\"],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/nav/filters-nav/filters-nav.container.js","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/nav/filters-nav/filters-nav.container.js","mtime":1548840716959},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/.babelrc","mtime":1548840716937},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { toggleDropdown, toggleMap } from 'actions/app.actions';\nimport FiltersNav from 'react-components/nav/filters-nav/filters-nav.component';\nimport { getNavFilters } from 'react-components/nav/filters-nav/filters-nav.selectors';\nimport routerLinks from 'router/nav-links';\nimport { selectLogisticsMapHub, selectLogisticsMapYear, setLogisticsMapActiveModal, selectLogisticsMapInspectionLevel } from 'react-components/logistics-map/logistics-map.actions';\nimport { selectBiomeFilter, selectResizeBy, selectView } from 'actions/tool.actions';\n\nfunction mapStateToProps(state) {\n  return {\n    links: routerLinks.nav,\n    filters: getNavFilters(state),\n    isMapVisible: state.tool && state.tool.isMapVisible,\n    currentDropdown: state.app.currentDropdown\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    toggleDropdown: toggleDropdown,\n    toolViewMode_onSelected: selectView,\n    toolResizeBy_onSelected: selectResizeBy,\n    openMap: function openMap() {\n      return toggleMap(true);\n    },\n    openSankey: function openSankey() {\n      return toggleMap(false);\n    },\n    openLogisticsMapDownload: function openLogisticsMapDownload() {\n      return setLogisticsMapActiveModal('download');\n    },\n    toolAdminLevel_onSelected: selectBiomeFilter,\n    logisticsMapYear_onSelected: selectLogisticsMapYear,\n    logisticsMapHub_onSelected: selectLogisticsMapHub,\n    logisticsMapInspectionLevel_onSelected: selectLogisticsMapInspectionLevel\n  }, dispatch);\n};\n\nvar _default = connect(mapStateToProps, mapDispatchToProps)(FiltersNav);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/nav/filters-nav/filters-nav.container.js\");\n  reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/nav/filters-nav/filters-nav.container.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/nav/filters-nav/filters-nav.container.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/nav/filters-nav/filters-nav.container.js"],"names":["links","routerLinks","filters","getNavFilters","isMapVisible","state","currentDropdown","mapDispatchToProps","bindActionCreators","toggleDropdown","toolViewMode_onSelected","toolResizeBy_onSelected","openMap","toggleMap","openSankey","openLogisticsMapDownload","setLogisticsMapActiveModal","toolAdminLevel_onSelected","logisticsMapYear_onSelected","logisticsMapHub_onSelected","logisticsMapInspectionLevel_onSelected","selectLogisticsMapInspectionLevel","connect"],"mappings":";;;;;;AAAA,SAAA,OAAA,QAAA,aAAA;AACA,SAAA,kBAAA,QAAA,OAAA;AACA,SAAA,cAAA,EAAA,SAAA,QAAA,qBAAA;AACA,OAAA,UAAA,MAAA,wDAAA;AACA,SAAA,aAAA,QAAA,wDAAA;AACA,OAAA,WAAA,MAAA,kBAAA;AACA,SAAA,qBAAA,EAAA,sBAAA,EAAA,0BAAA,EAAA,iCAAA,QAAA,sDAAA;AAMA,SAAA,iBAAA,EAAA,cAAA,EAAA,UAAA,QAAA,sBAAA;;AAEA,SAAA,eAAA,CAAA,KAAA,EAAgC;AAC9B,SAAO;AACLA,IAAAA,KAAK,EAAEC,WAAW,CADb,GAAA;AAELC,IAAAA,OAAO,EAAEC,aAAa,CAFjB,KAEiB,CAFjB;AAGLC,IAAAA,YAAY,EAAEC,KAAK,CAALA,IAAAA,IAAcA,KAAK,CAALA,IAAAA,CAHvB,YAAA;AAILC,IAAAA,eAAe,EAAED,KAAK,CAALA,GAAAA,CAAUC;AAJtB,GAAP;AAMD;;AAED,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAA,QAAA,EAAQ;AAAA,SACjCC,kBAAkB,CAChB;AACEC,IAAAA,cAAc,EADhB,cAAA;AAEEC,IAAAA,uBAAuB,EAFzB,UAAA;AAGEC,IAAAA,uBAAuB,EAHzB,cAAA;AAIEC,IAAAA,OAAO,EAAE,SAAA,OAAA,GAAA;AAAA,aAAMC,SAAS,CAAf,IAAe,CAAf;AAJX,KAAA;AAKEC,IAAAA,UAAU,EAAE,SAAA,UAAA,GAAA;AAAA,aAAMD,SAAS,CAAf,KAAe,CAAf;AALd,KAAA;AAMEE,IAAAA,wBAAwB,EAAE,SAAA,wBAAA,GAAA;AAAA,aAAMC,0BAA0B,CAAhC,UAAgC,CAAhC;AAN5B,KAAA;AAOEC,IAAAA,yBAAyB,EAP3B,iBAAA;AAQEC,IAAAA,2BAA2B,EAR7B,sBAAA;AASEC,IAAAA,0BAA0B,EAT5B,qBAAA;AAUEC,IAAAA,sCAAsC,EAAEC;AAV1C,GADgB,EADe,QACf,CADe;AAAnC,CAAA;;eAiBeC,OAAO,CAAA,eAAA,EAAPA,kBAAO,CAAPA,CAAf,UAAeA,C;;AAAf;;;;;;;;;;;;0BA1BA,e;0BASMf,kB","sourcesContent":["import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { toggleDropdown, toggleMap } from 'actions/app.actions';\nimport FiltersNav from 'react-components/nav/filters-nav/filters-nav.component';\nimport { getNavFilters } from 'react-components/nav/filters-nav/filters-nav.selectors';\nimport routerLinks from 'router/nav-links';\nimport {\n  selectLogisticsMapHub,\n  selectLogisticsMapYear,\n  setLogisticsMapActiveModal,\n  selectLogisticsMapInspectionLevel\n} from 'react-components/logistics-map/logistics-map.actions';\nimport { selectBiomeFilter, selectResizeBy, selectView } from 'actions/tool.actions';\n\nfunction mapStateToProps(state) {\n  return {\n    links: routerLinks.nav,\n    filters: getNavFilters(state),\n    isMapVisible: state.tool && state.tool.isMapVisible,\n    currentDropdown: state.app.currentDropdown\n  };\n}\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      toggleDropdown,\n      toolViewMode_onSelected: selectView,\n      toolResizeBy_onSelected: selectResizeBy,\n      openMap: () => toggleMap(true),\n      openSankey: () => toggleMap(false),\n      openLogisticsMapDownload: () => setLogisticsMapActiveModal('download'),\n      toolAdminLevel_onSelected: selectBiomeFilter,\n      logisticsMapYear_onSelected: selectLogisticsMapYear,\n      logisticsMapHub_onSelected: selectLogisticsMapHub,\n      logisticsMapInspectionLevel_onSelected: selectLogisticsMapInspectionLevel\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FiltersNav);\n"]}]}