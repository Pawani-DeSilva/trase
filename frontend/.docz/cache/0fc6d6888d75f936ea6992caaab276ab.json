{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/react-hot-loader/babel.js\"],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profiles/place-summary.component.jsx","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profiles/place-summary.component.jsx","mtime":1548345115594},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/.babelrc","mtime":1548840716937},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n/* eslint-disable camelcase,react/no-danger */\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport capitalize from 'lodash/capitalize';\nimport HelpTooltip from 'react-components/shared/help-tooltip/help-tooltip.component';\nimport TitleGroup from 'react-components/profiles/title-group.component';\nimport Map from 'react-components/profiles/map.component';\nimport formatValue from 'utils/formatValue';\n\nvar PlaceSummary =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(PlaceSummary, _React$PureComponent);\n\n  function PlaceSummary() {\n    _classCallCheck(this, PlaceSummary);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PlaceSummary).apply(this, arguments));\n  }\n\n  _createClass(PlaceSummary, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          year = _this$props.year,\n          tooltips = _this$props.tooltips,\n          onYearChange = _this$props.onYearChange,\n          context = _this$props.context,\n          _this$props$data = _this$props.data;\n      _this$props$data = _this$props$data === void 0 ? {} : _this$props$data;\n      var columnName = _this$props$data.columnName,\n          countryName = _this$props$data.countryName,\n          jurisdiction2 = _this$props$data.jurisdiction2,\n          jurisdiction2GeoId = _this$props$data.jurisdiction2GeoId,\n          jurisdiction1 = _this$props$data.jurisdiction1,\n          jurisdiction1GeoId = _this$props$data.jurisdiction1GeoId,\n          summary = _this$props$data.summary,\n          area = _this$props$data.area,\n          soyProduction = _this$props$data.soyProduction,\n          soyArea = _this$props$data.soyArea,\n          jurisdictionName = _this$props$data.jurisdictionName,\n          jurisdictionGeoId = _this$props$data.jurisdictionGeoId,\n          _this$props$profileMe = _this$props.profileMetadata;\n      _this$props$profileMe = _this$props$profileMe === void 0 ? {} : _this$props$profileMe;\n      var adm1Name = _this$props$profileMe.adm1Name,\n          adm1TopojsonPath = _this$props$profileMe.adm1TopojsonPath,\n          adm1TopojsonRoot = _this$props$profileMe.adm1TopojsonRoot,\n          adm2Name = _this$props$profileMe.adm2Name,\n          adm2TopojsonPath = _this$props$profileMe.adm2TopojsonPath,\n          adm2TopojsonRoot = _this$props$profileMe.adm2TopojsonRoot,\n          mainTopojsonPath = _this$props$profileMe.mainTopojsonPath,\n          mainTopojsonRoot = _this$props$profileMe.mainTopojsonRoot;\n      var commodityName = context.commodityName;\n      var titles = [{\n        name: jurisdictionName,\n        label: capitalize(columnName)\n      }, {\n        name: commodityName,\n        label: 'Commodity'\n      }, {\n        dropdown: true,\n        label: 'Year',\n        value: year,\n        valueList: (context.years ? _toConsumableArray(context.years) : []).sort(function (a, b) {\n          return b - a;\n        }),\n        onValueSelected: onYearChange\n      }];\n      var soyValue = formatValue(soyArea, 'area');\n      var areaValue = formatValue(area, 'area');\n      var soyProductionValue = formatValue(soyProduction, 'tons');\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"c-overall-map hide-for-small\",\n        \"data-test\": \"place-summary\"\n      }, React.createElement(\"div\", {\n        className: \"row\"\n      }, React.createElement(\"div\", {\n        className: \"small-4 columns map-item\"\n      }, React.createElement(\"div\", {\n        className: \"row\"\n      }, React.createElement(\"div\", {\n        className: \"small-6 columns\"\n      }, React.createElement(\"div\", {\n        className: \"c-locator-map\"\n      }, React.createElement(Map, {\n        topoJSONPath: \"./vector_layers/WORLD.topo.json\",\n        topoJSONRoot: \"world\",\n        useRobinsonProjection: true,\n        getPolygonClassName: function getPolygonClassName(d) {\n          return d.properties.name.toUpperCase() === countryName ? '-isCurrent' : '';\n        }\n      }))), React.createElement(\"div\", {\n        className: \"small-6 columns\"\n      }, React.createElement(\"div\", {\n        className: \"c-info\"\n      }, React.createElement(\"div\", {\n        className: \"legend\"\n      }, \"country\"), React.createElement(\"div\", {\n        className: \"name -medium\"\n      }, countryName ? capitalize(countryName) : '-'))))), React.createElement(\"div\", {\n        className: \"small-4 columns map-item\"\n      }, adm1TopojsonPath && adm1TopojsonRoot && React.createElement(\"div\", {\n        className: \"row\"\n      }, React.createElement(\"div\", {\n        className: \"small-3 columns\"\n      }, React.createElement(\"div\", {\n        className: \"c-locator-map\"\n      }, countryName && React.createElement(Map, {\n        topoJSONPath: \"./vector_layers\".concat(adm1TopojsonPath.replace('$stateGeoId$', jurisdiction1GeoId)),\n        topoJSONRoot: adm1TopojsonRoot,\n        getPolygonClassName: function getPolygonClassName(d) {\n          return d.properties.geoid === jurisdiction2GeoId ? '-isCurrent' : '';\n        }\n      }))), React.createElement(\"div\", {\n        className: \"small-9 columns\"\n      }, React.createElement(\"div\", {\n        className: \"c-info\"\n      }, React.createElement(\"div\", {\n        className: \"legend\"\n      }, adm1Name), React.createElement(\"div\", {\n        className: \"name -medium\"\n      }, jurisdiction2 ? capitalize(jurisdiction2) : '-'))))), React.createElement(\"div\", {\n        className: \"small-4 columns map-item\"\n      }, adm2TopojsonPath && adm2TopojsonRoot && React.createElement(\"div\", {\n        className: \"row\"\n      }, React.createElement(\"div\", {\n        className: \"small-3 columns\"\n      }, React.createElement(\"div\", {\n        className: \"c-locator-map\"\n      }, countryName && React.createElement(Map, {\n        topoJSONPath: \"./vector_layers\".concat(adm2TopojsonPath.replace('$stateGeoId$', jurisdiction1GeoId)),\n        topoJSONRoot: adm2TopojsonRoot,\n        getPolygonClassName: function getPolygonClassName(d) {\n          return d.properties.geoid === jurisdiction1GeoId ? '-isCurrent' : '';\n        }\n      }))), React.createElement(\"div\", {\n        className: \"small-9 columns\"\n      }, React.createElement(\"div\", {\n        className: \"c-info\"\n      }, React.createElement(\"div\", {\n        className: \"legend\"\n      }, adm2Name), React.createElement(\"div\", {\n        className: \"name -medium\"\n      }, jurisdiction1 ? capitalize(jurisdiction1) : '-'))))))), React.createElement(\"div\", {\n        className: \"c-overall-info page-break-inside-avoid\"\n      }, React.createElement(\"div\", {\n        className: \"row\"\n      }, mainTopojsonPath && mainTopojsonRoot && React.createElement(\"div\", {\n        className: \"small-12 medium-4 large-3 columns\"\n      }, React.createElement(\"div\", {\n        className: \"c-locator-map map-municipality-banner\"\n      }, countryName && React.createElement(Map, {\n        topoJSONPath: \"./vector_layers\".concat(mainTopojsonPath.replace('$stateGeoId$', jurisdiction1GeoId)),\n        topoJSONRoot: mainTopojsonRoot.replace('$stateGeoId$', jurisdiction1GeoId),\n        getPolygonClassName: function getPolygonClassName(d) {\n          return d.properties.geoid === jurisdictionGeoId ? '-isCurrent' : '';\n        }\n      }))), React.createElement(\"div\", {\n        className: \"small-12 medium-8 large-9 columns\"\n      }, React.createElement(\"div\", {\n        className: \"row\"\n      }, React.createElement(\"div\", {\n        className: \"small-12 columns\"\n      }, React.createElement(TitleGroup, {\n        titles: titles,\n        on: onYearChange\n      })), (areaValue !== '-' || soyValue !== '-' || soyProductionValue !== '-') && React.createElement(\"div\", {\n        className: \"small-12 columns\"\n      }, areaValue !== '-' && React.createElement(\"div\", {\n        className: \"stat-item\"\n      }, React.createElement(\"div\", {\n        className: \"legend\"\n      }, \"area\"), React.createElement(\"div\", {\n        className: \"value\"\n      }, areaValue), React.createElement(\"div\", {\n        className: \"unit\"\n      }, \"km\", React.createElement(\"sup\", null, \"2\"))), soyValue !== '-' && React.createElement(\"div\", {\n        className: \"stat-item\"\n      }, React.createElement(\"div\", {\n        className: \"legend\"\n      }, commodityName, \" land\", React.createElement(HelpTooltip, {\n        text: get(tooltips, 'profileNode.soyLand'),\n        position: \"bottom\"\n      })), React.createElement(\"div\", {\n        className: \"value\"\n      }, soyValue), React.createElement(\"div\", {\n        className: \"unit\"\n      }, \"ha\")), soyProductionValue !== '-' && React.createElement(\"div\", {\n        className: \"stat-item\"\n      }, React.createElement(\"div\", {\n        className: \"legend\"\n      }, \"soy production\", React.createElement(HelpTooltip, {\n        text: get(tooltips, 'profileNode.soyProduction'),\n        position: \"bottom\"\n      })), React.createElement(\"div\", {\n        className: \"value\"\n      }, soyProductionValue), React.createElement(\"div\", {\n        className: \"unit\"\n      }, \"t\"))), React.createElement(\"div\", {\n        className: \"small-12 columns\"\n      }, React.createElement(\"p\", {\n        className: \"summary\",\n        dangerouslySetInnerHTML: {\n          __html: summary\n        }\n      })))))));\n    }\n  }]);\n\n  return PlaceSummary;\n}(React.PureComponent);\n\nPlaceSummary.propTypes = {\n  year: PropTypes.number,\n  data: PropTypes.object,\n  context: PropTypes.object,\n  tooltips: PropTypes.object,\n  onYearChange: PropTypes.func.isRequired,\n  profileMetadata: PropTypes.object.isRequired\n};\nvar _default = PlaceSummary;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_typeof, \"_typeof\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profiles/place-summary.component.jsx\");\n  reactHotLoader.register(_toConsumableArray, \"_toConsumableArray\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profiles/place-summary.component.jsx\");\n  reactHotLoader.register(_nonIterableSpread, \"_nonIterableSpread\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profiles/place-summary.component.jsx\");\n  reactHotLoader.register(_iterableToArray, \"_iterableToArray\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profiles/place-summary.component.jsx\");\n  reactHotLoader.register(_arrayWithoutHoles, \"_arrayWithoutHoles\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profiles/place-summary.component.jsx\");\n  reactHotLoader.register(_classCallCheck, \"_classCallCheck\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profiles/place-summary.component.jsx\");\n  reactHotLoader.register(_defineProperties, \"_defineProperties\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profiles/place-summary.component.jsx\");\n  reactHotLoader.register(_createClass, \"_createClass\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profiles/place-summary.component.jsx\");\n  reactHotLoader.register(_possibleConstructorReturn, \"_possibleConstructorReturn\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profiles/place-summary.component.jsx\");\n  reactHotLoader.register(_assertThisInitialized, \"_assertThisInitialized\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profiles/place-summary.component.jsx\");\n  reactHotLoader.register(_getPrototypeOf, \"_getPrototypeOf\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profiles/place-summary.component.jsx\");\n  reactHotLoader.register(_inherits, \"_inherits\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profiles/place-summary.component.jsx\");\n  reactHotLoader.register(_setPrototypeOf, \"_setPrototypeOf\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profiles/place-summary.component.jsx\");\n  reactHotLoader.register(PlaceSummary, \"PlaceSummary\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profiles/place-summary.component.jsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profiles/place-summary.component.jsx\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profiles/place-summary.component.jsx"],"names":["PlaceSummary","React","PureComponent","year","tooltips","onYearChange","context","columnName","countryName","jurisdiction2","jurisdiction2GeoId","jurisdiction1","jurisdiction1GeoId","summary","area","soyProduction","soyArea","jurisdictionName","jurisdictionGeoId","adm1Name","adm1TopojsonPath","adm1TopojsonRoot","adm2Name","adm2TopojsonPath","adm2TopojsonRoot","mainTopojsonPath","mainTopojsonRoot","commodityName","titles","name","label","capitalize","dropdown","value","valueList","b","onValueSelected","soyValue","formatValue","areaValue","soyProductionValue","d","get","__html","PropTypes","data","profileMetadata","isRequired"],"mappings":"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","sourcesContent":["/* eslint-disable camelcase,react/no-danger */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport capitalize from 'lodash/capitalize';\nimport HelpTooltip from 'react-components/shared/help-tooltip/help-tooltip.component';\nimport TitleGroup from 'react-components/profiles/title-group.component';\nimport Map from 'react-components/profiles/map.component';\nimport formatValue from 'utils/formatValue';\n\nclass PlaceSummary extends React.PureComponent {\n  render() {\n    const {\n      year,\n      tooltips,\n      onYearChange,\n      context,\n      data: {\n        columnName,\n        countryName,\n        jurisdiction2,\n        jurisdiction2GeoId,\n        jurisdiction1,\n        jurisdiction1GeoId,\n        summary,\n        area,\n        soyProduction,\n        soyArea,\n        jurisdictionName,\n        jurisdictionGeoId\n      } = {},\n      profileMetadata: {\n        adm1Name,\n        adm1TopojsonPath,\n        adm1TopojsonRoot,\n        adm2Name,\n        adm2TopojsonPath,\n        adm2TopojsonRoot,\n        mainTopojsonPath,\n        mainTopojsonRoot\n      } = {}\n    } = this.props;\n    const { commodityName } = context;\n    const titles = [\n      { name: jurisdictionName, label: capitalize(columnName) },\n      { name: commodityName, label: 'Commodity' },\n      {\n        dropdown: true,\n        label: 'Year',\n        value: year,\n        valueList: (context.years ? [...context.years] : []).sort((a, b) => b - a),\n        onValueSelected: onYearChange\n      }\n    ];\n    const soyValue = formatValue(soyArea, 'area');\n    const areaValue = formatValue(area, 'area');\n    const soyProductionValue = formatValue(soyProduction, 'tons');\n\n    return (\n      <React.Fragment>\n        <div className=\"c-overall-map hide-for-small\" data-test=\"place-summary\">\n          <div className=\"row\">\n            <div className=\"small-4 columns map-item\">\n              <div className=\"row\">\n                <div className=\"small-6 columns\">\n                  <div className=\"c-locator-map\">\n                    <Map\n                      topoJSONPath=\"./vector_layers/WORLD.topo.json\"\n                      topoJSONRoot=\"world\"\n                      useRobinsonProjection\n                      getPolygonClassName={d =>\n                        d.properties.name.toUpperCase() === countryName ? '-isCurrent' : ''\n                      }\n                    />\n                  </div>\n                </div>\n                <div className=\"small-6 columns\">\n                  <div className=\"c-info\">\n                    <div className=\"legend\">country</div>\n                    <div className=\"name -medium\">\n                      {countryName ? capitalize(countryName) : '-'}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"small-4 columns map-item\">\n              {adm1TopojsonPath && adm1TopojsonRoot && (\n                <div className=\"row\">\n                  <div className=\"small-3 columns\">\n                    <div className=\"c-locator-map\">\n                      {countryName && (\n                        <Map\n                          topoJSONPath={`./vector_layers${adm1TopojsonPath.replace(\n                            '$stateGeoId$',\n                            jurisdiction1GeoId\n                          )}`}\n                          topoJSONRoot={adm1TopojsonRoot}\n                          getPolygonClassName={d =>\n                            d.properties.geoid === jurisdiction2GeoId ? '-isCurrent' : ''\n                          }\n                        />\n                      )}\n                    </div>\n                  </div>\n                  <div className=\"small-9 columns\">\n                    <div className=\"c-info\">\n                      <div className=\"legend\">{adm1Name}</div>\n                      <div className=\"name -medium\">\n                        {jurisdiction2 ? capitalize(jurisdiction2) : '-'}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n            <div className=\"small-4 columns map-item\">\n              {adm2TopojsonPath && adm2TopojsonRoot && (\n                <div className=\"row\">\n                  <div className=\"small-3 columns\">\n                    <div className=\"c-locator-map\">\n                      {countryName && (\n                        <Map\n                          topoJSONPath={`./vector_layers${adm2TopojsonPath.replace(\n                            '$stateGeoId$',\n                            jurisdiction1GeoId\n                          )}`}\n                          topoJSONRoot={adm2TopojsonRoot}\n                          getPolygonClassName={d =>\n                            d.properties.geoid === jurisdiction1GeoId ? '-isCurrent' : ''\n                          }\n                        />\n                      )}\n                    </div>\n                  </div>\n                  <div className=\"small-9 columns\">\n                    <div className=\"c-info\">\n                      <div className=\"legend\">{adm2Name}</div>\n                      <div className=\"name -medium\">\n                        {jurisdiction1 ? capitalize(jurisdiction1) : '-'}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"c-overall-info page-break-inside-avoid\">\n          <div className=\"row\">\n            {mainTopojsonPath && mainTopojsonRoot && (\n              <div className=\"small-12 medium-4 large-3 columns\">\n                <div className=\"c-locator-map map-municipality-banner\">\n                  {countryName && (\n                    <Map\n                      topoJSONPath={`./vector_layers${mainTopojsonPath.replace(\n                        '$stateGeoId$',\n                        jurisdiction1GeoId\n                      )}`}\n                      topoJSONRoot={mainTopojsonRoot.replace('$stateGeoId$', jurisdiction1GeoId)}\n                      getPolygonClassName={d =>\n                        d.properties.geoid === jurisdictionGeoId ? '-isCurrent' : ''\n                      }\n                    />\n                  )}\n                </div>\n              </div>\n            )}\n            <div className=\"small-12 medium-8 large-9 columns\">\n              <div className=\"row\">\n                <div className=\"small-12 columns\">\n                  <TitleGroup titles={titles} on={onYearChange} />\n                </div>\n                {(areaValue !== '-' || soyValue !== '-' || soyProductionValue !== '-') && (\n                  <div className=\"small-12 columns\">\n                    {areaValue !== '-' && (\n                      <div className=\"stat-item\">\n                        <div className=\"legend\">area</div>\n                        <div className=\"value\">{areaValue}</div>\n                        <div className=\"unit\">\n                          km<sup>2</sup>\n                        </div>\n                      </div>\n                    )}\n                    {soyValue !== '-' && (\n                      <div className=\"stat-item\">\n                        <div className=\"legend\">\n                          {commodityName} land\n                          <HelpTooltip\n                            text={get(tooltips, 'profileNode.soyLand')}\n                            position=\"bottom\"\n                          />\n                        </div>\n                        <div className=\"value\">{soyValue}</div>\n                        <div className=\"unit\">ha</div>\n                      </div>\n                    )}\n                    {soyProductionValue !== '-' && (\n                      <div className=\"stat-item\">\n                        <div className=\"legend\">\n                          soy production\n                          <HelpTooltip\n                            text={get(tooltips, 'profileNode.soyProduction')}\n                            position=\"bottom\"\n                          />\n                        </div>\n                        <div className=\"value\">{soyProductionValue}</div>\n                        <div className=\"unit\">t</div>\n                      </div>\n                    )}\n                  </div>\n                )}\n                <div className=\"small-12 columns\">\n                  <p className=\"summary\" dangerouslySetInnerHTML={{ __html: summary }} />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nPlaceSummary.propTypes = {\n  year: PropTypes.number,\n  data: PropTypes.object,\n  context: PropTypes.object,\n  tooltips: PropTypes.object,\n  onYearChange: PropTypes.func.isRequired,\n  profileMetadata: PropTypes.object.isRequired\n};\n\nexport default PlaceSummary;\n"]}]}