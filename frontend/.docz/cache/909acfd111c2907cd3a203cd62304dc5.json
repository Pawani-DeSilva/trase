{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/react-hot-loader/babel.js\"],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profile-node/profile-node-widgets/importing-companies-widget.component.jsx","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profile-node/profile-node-widgets/importing-companies-widget.component.jsx","mtime":1548345115577},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/.babelrc","mtime":1548840716937},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Widget from 'react-components/widgets/widget.component';\nimport { GET_ACTOR_EXPORTING_COMPANIES, GET_NODE_SUMMARY_URL } from 'utils/getURLFromParams';\nimport Scatterplot from 'react-components/profiles/scatterplot/scatterplot.component';\nimport UnitsTooltip from 'react-components/shared/units-tooltip/units-tooltip.component';\nimport formatValue from 'utils/formatValue';\nimport ShrinkingSpinner from 'react-components/shared/shrinking-spinner/shrinking-spinner.component';\n\nvar ImportingCompaniesWidget =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ImportingCompaniesWidget, _React$PureComponent);\n\n  function ImportingCompaniesWidget() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ImportingCompaniesWidget);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ImportingCompaniesWidget)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      tooltipConfig: null\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onMouseMove\", function (data) {\n      return function (company, indicator, x, y) {\n        var items = [{\n          title: data.dimensionY.name,\n          value: formatValue(company.y, data.dimensionY.name),\n          unit: data.dimensionY.unit\n        }, {\n          title: indicator.name,\n          value: formatValue(company.x, indicator.name),\n          unit: indicator.unit\n        }];\n        var tooltipConfig = {\n          x: x,\n          y: y,\n          text: company.name,\n          items: items\n        };\n\n        _this.setState(function () {\n          return {\n            tooltipConfig: tooltipConfig\n          };\n        });\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onMouseLeave\", function () {\n      _this.setState(function () {\n        return {\n          tooltipConfig: null\n        };\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(ImportingCompaniesWidget, [{\n    key: \"getScatterplots\",\n    value: function getScatterplots(dimensionsX, title) {\n      var printMode = this.props.printMode;\n\n      if (printMode) {\n        return dimensionsX.map(function (xDimension) {\n          return {\n            title: React.createElement(\"span\", {\n              \"data-unit\": xDimension.unit\n            }, xDimension.name)\n          };\n        });\n      }\n\n      return [{\n        title: title\n      }];\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          year = _this$props.year,\n          nodeId = _this$props.nodeId,\n          contextId = _this$props.contextId,\n          printMode = _this$props.printMode,\n          commodityName = _this$props.commodityName,\n          countryName = _this$props.countryName,\n          testId = _this$props.testId;\n      var tooltipConfig = this.state.tooltipConfig;\n      var params = {\n        node_id: nodeId,\n        context_id: contextId,\n        year: year\n      };\n      return React.createElement(Widget, {\n        query: [GET_ACTOR_EXPORTING_COMPANIES, GET_NODE_SUMMARY_URL],\n        params: [params, _objectSpread({}, params, {\n          profile_type: 'actor'\n        })]\n      }, function (_ref) {\n        var data = _ref.data,\n            loading = _ref.loading,\n            error = _ref.error;\n\n        if (loading) {\n          return React.createElement(\"div\", {\n            className: \"spinner-section\",\n            \"data-test\": \"loading-section\"\n          }, React.createElement(ShrinkingSpinner, {\n            className: \"-large\"\n          }));\n        }\n\n        if (error) {\n          // TODO: display a proper error message to the user\n          console.error('Error loading importing companies data for profile page', error);\n          return null;\n        }\n\n        var _data$GET_ACTOR_EXPOR = data[GET_ACTOR_EXPORTING_COMPANIES],\n            dimensionsX = _data$GET_ACTOR_EXPOR.dimensionsX,\n            companies = _data$GET_ACTOR_EXPOR.companies;\n        var _data$GET_NODE_SUMMAR = data[GET_NODE_SUMMARY_URL],\n            nodeName = _data$GET_NODE_SUMMAR.nodeName,\n            columnName = _data$GET_NODE_SUMMAR.columnName;\n        var verb = columnName === 'EXPORTER' ? 'exporting' : 'importing';\n        var dimensions = dimensionsX.slice(0, 3);\n        var title = \"Comparing companies \".concat(verb, \" \").concat(commodityName, \" from \").concat(countryName, \" in \").concat(year);\n\n        var scatterplots = _this2.getScatterplots(dimensions, title);\n\n        return React.createElement(\"section\", {\n          className: \"c-scatterplot-container\",\n          \"data-test\": testId\n        }, React.createElement(UnitsTooltip, _extends({\n          show: !!tooltipConfig\n        }, tooltipConfig)), React.createElement(\"div\", {\n          className: \"row\"\n        }, React.createElement(\"div\", {\n          className: \"small-12 columns\"\n        }, React.createElement(\"div\", null, printMode && React.createElement(\"h3\", {\n          className: \"title\"\n        }, title), scatterplots.map(function (plot, index) {\n          return React.createElement(Scatterplot, {\n            key: index,\n            title: plot.title,\n            data: companies,\n            xDimension: dimensions,\n            xDimensionSelectedIndex: index,\n            testId: \"\".concat(testId, \"-scatterplot\"),\n            node: {\n              id: nodeId,\n              name: nodeName\n            },\n            year: year,\n            showTooltipCallback: _this2.onMouseMove(data[GET_ACTOR_EXPORTING_COMPANIES]),\n            hideTooltipCallback: _this2.onMouseLeave\n          });\n        })))));\n      });\n    }\n  }]);\n\n  return ImportingCompaniesWidget;\n}(React.PureComponent);\n\nImportingCompaniesWidget.propTypes = {\n  testId: PropTypes.string,\n  printMode: PropTypes.bool,\n  countryName: PropTypes.string,\n  commodityName: PropTypes.string,\n  year: PropTypes.number.isRequired,\n  nodeId: PropTypes.number.isRequired,\n  contextId: PropTypes.number.isRequired\n};\nvar _default = ImportingCompaniesWidget;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_typeof, \"_typeof\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profile-node/profile-node-widgets/importing-companies-widget.component.jsx\");\n  reactHotLoader.register(_extends, \"_extends\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profile-node/profile-node-widgets/importing-companies-widget.component.jsx\");\n  reactHotLoader.register(_objectSpread, \"_objectSpread\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profile-node/profile-node-widgets/importing-companies-widget.component.jsx\");\n  reactHotLoader.register(_classCallCheck, \"_classCallCheck\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profile-node/profile-node-widgets/importing-companies-widget.component.jsx\");\n  reactHotLoader.register(_defineProperties, \"_defineProperties\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profile-node/profile-node-widgets/importing-companies-widget.component.jsx\");\n  reactHotLoader.register(_createClass, \"_createClass\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profile-node/profile-node-widgets/importing-companies-widget.component.jsx\");\n  reactHotLoader.register(_possibleConstructorReturn, \"_possibleConstructorReturn\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profile-node/profile-node-widgets/importing-companies-widget.component.jsx\");\n  reactHotLoader.register(_getPrototypeOf, \"_getPrototypeOf\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profile-node/profile-node-widgets/importing-companies-widget.component.jsx\");\n  reactHotLoader.register(_inherits, \"_inherits\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profile-node/profile-node-widgets/importing-companies-widget.component.jsx\");\n  reactHotLoader.register(_setPrototypeOf, \"_setPrototypeOf\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profile-node/profile-node-widgets/importing-companies-widget.component.jsx\");\n  reactHotLoader.register(_assertThisInitialized, \"_assertThisInitialized\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profile-node/profile-node-widgets/importing-companies-widget.component.jsx\");\n  reactHotLoader.register(_defineProperty, \"_defineProperty\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profile-node/profile-node-widgets/importing-companies-widget.component.jsx\");\n  reactHotLoader.register(ImportingCompaniesWidget, \"ImportingCompaniesWidget\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profile-node/profile-node-widgets/importing-companies-widget.component.jsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profile-node/profile-node-widgets/importing-companies-widget.component.jsx\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profile-node/profile-node-widgets/importing-companies-widget.component.jsx"],"names":["ImportingCompaniesWidget","React","PureComponent","tooltipConfig","dimensionsX","title","printMode","xDimension","unit","items","data","value","formatValue","company","indicator","x","y","text","year","nodeId","contextId","commodityName","countryName","testId","params","node_id","context_id","profile_type","loading","error","console","companies","nodeName","columnName","verb","dimensions","scatterplots","plot","id","name","onMouseLeave","PropTypes","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Widget from 'react-components/widgets/widget.component';\nimport { GET_ACTOR_EXPORTING_COMPANIES, GET_NODE_SUMMARY_URL } from 'utils/getURLFromParams';\nimport Scatterplot from 'react-components/profiles/scatterplot/scatterplot.component';\nimport UnitsTooltip from 'react-components/shared/units-tooltip/units-tooltip.component';\nimport formatValue from 'utils/formatValue';\nimport ShrinkingSpinner from 'react-components/shared/shrinking-spinner/shrinking-spinner.component';\n\nclass ImportingCompaniesWidget extends React.PureComponent {\n  state = {\n    tooltipConfig: null\n  };\n\n  getScatterplots(dimensionsX, title) {\n    const { printMode } = this.props;\n    if (printMode) {\n      return dimensionsX.map(xDimension => ({\n        title: <span data-unit={xDimension.unit}>{xDimension.name}</span>\n      }));\n    }\n\n    return [{ title }];\n  }\n\n  onMouseMove = data => (company, indicator, x, y) => {\n    const items = [\n      {\n        title: data.dimensionY.name,\n        value: formatValue(company.y, data.dimensionY.name),\n        unit: data.dimensionY.unit\n      },\n      {\n        title: indicator.name,\n        value: formatValue(company.x, indicator.name),\n        unit: indicator.unit\n      }\n    ];\n    const tooltipConfig = { x, y, text: company.name, items };\n    this.setState(() => ({ tooltipConfig }));\n  };\n\n  onMouseLeave = () => {\n    this.setState(() => ({ tooltipConfig: null }));\n  };\n\n  render() {\n    const { year, nodeId, contextId, printMode, commodityName, countryName, testId } = this.props;\n    const { tooltipConfig } = this.state;\n    const params = { node_id: nodeId, context_id: contextId, year };\n    return (\n      <Widget\n        query={[GET_ACTOR_EXPORTING_COMPANIES, GET_NODE_SUMMARY_URL]}\n        params={[params, { ...params, profile_type: 'actor' }]}\n      >\n        {({ data, loading, error }) => {\n          if (loading) {\n            return (\n              <div className=\"spinner-section\" data-test=\"loading-section\">\n                <ShrinkingSpinner className=\"-large\" />\n              </div>\n            );\n          }\n\n          if (error) {\n            // TODO: display a proper error message to the user\n            console.error('Error loading importing companies data for profile page', error);\n            return null;\n          }\n\n          const { dimensionsX, companies } = data[GET_ACTOR_EXPORTING_COMPANIES];\n          const { nodeName, columnName } = data[GET_NODE_SUMMARY_URL];\n          const verb = columnName === 'EXPORTER' ? 'exporting' : 'importing';\n          const dimensions = dimensionsX.slice(0, 3);\n          const title = `Comparing companies ${verb} ${commodityName} from ${countryName} in ${year}`;\n          const scatterplots = this.getScatterplots(dimensions, title);\n          return (\n            <section className=\"c-scatterplot-container\" data-test={testId}>\n              <UnitsTooltip show={!!tooltipConfig} {...tooltipConfig} />\n              <div className=\"row\">\n                <div className=\"small-12 columns\">\n                  <div>\n                    {printMode && <h3 className=\"title\">{title}</h3>}\n                    {scatterplots.map((plot, index) => (\n                      <Scatterplot\n                        key={index}\n                        title={plot.title}\n                        data={companies}\n                        xDimension={dimensions}\n                        xDimensionSelectedIndex={index}\n                        testId={`${testId}-scatterplot`}\n                        node={{ id: nodeId, name: nodeName }}\n                        year={year}\n                        showTooltipCallback={this.onMouseMove(data[GET_ACTOR_EXPORTING_COMPANIES])}\n                        hideTooltipCallback={this.onMouseLeave}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </section>\n          );\n        }}\n      </Widget>\n    );\n  }\n}\n\nImportingCompaniesWidget.propTypes = {\n  testId: PropTypes.string,\n  printMode: PropTypes.bool,\n  countryName: PropTypes.string,\n  commodityName: PropTypes.string,\n  year: PropTypes.number.isRequired,\n  nodeId: PropTypes.number.isRequired,\n  contextId: PropTypes.number.isRequired\n};\n\nexport default ImportingCompaniesWidget;\n"]}]}