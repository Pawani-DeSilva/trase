{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/react-hot-loader/babel.js\"],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/tool/tool-search/tool-search.container.js","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/tool/tool-search/tool-search.container.js","mtime":1548840708303},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/.babelrc","mtime":1548840716937},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nimport { selectExpandedNode, setSankeySearchVisibility as _setSankeySearchVisibility } from 'actions/tool.actions';\nimport flatten from 'lodash/flatten';\nimport groupBy from 'lodash/groupBy';\nimport ToolSearch from 'react-components/tool/tool-search/tool-search.component';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport isNodeColumnVisible from 'utils/isNodeColumnVisible';\nvar searchNodes;\n\nvar getNode = function getNode(nodes, selectedColumnsIds, nodesDict) {\n  var _nodes = _slicedToArray(nodes, 2),\n      nA = _nodes[0],\n      nB = _nodes[1];\n\n  if (nB) {\n    if (isNodeColumnVisible(nodesDict[nA.id], selectedColumnsIds) && isNodeColumnVisible(nodesDict[nB.id], selectedColumnsIds)) {\n      var _ref;\n\n      return _ref = {\n        id: \"\".concat(nA.id, \"_\").concat(nB.id),\n        name: nA.name,\n        type: \"\".concat(nA.type, \" & \").concat(nB.type),\n        profileType: nA.profileType\n      }, _defineProperty(_ref, nA.type.toLowerCase(), nA), _defineProperty(_ref, nB.type.toLowerCase(), nB), _ref;\n    }\n\n    return nodes;\n  }\n\n  return nA;\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var selectedContext = state.app.selectedContext;\n  var _state$tool = state.tool,\n      nodes = _state$tool.nodes,\n      selectedNodesIds = _state$tool.selectedNodesIds,\n      selectedColumnsIds = _state$tool.selectedColumnsIds,\n      nodesDict = _state$tool.nodesDict,\n      isSearchOpen = _state$tool.isSearchOpen,\n      isMapVisible = _state$tool.isMapVisible; // store nodes at container level to avoid rerendering when filtering... for want of a better solution\n\n  if (nodes !== undefined && (!searchNodes || nodes.length !== searchNodes.length)) {\n    var allNodes = nodes.filter(function (node) {\n      return node.hasFlows === true && node.isAggregated !== true && node.isUnknown !== true && node.isDomesticConsumption !== true;\n    });\n    searchNodes = flatten(Object.values(groupBy(allNodes, 'mainNodeId')).map(function (groupedNodes) {\n      return getNode(groupedNodes, selectedColumnsIds, nodesDict);\n    }));\n  }\n\n  return {\n    selectedNodesIds: selectedNodesIds,\n    isSearchOpen: isSearchOpen,\n    isMapVisible: isMapVisible,\n    nodes: searchNodes,\n    contextId: selectedContext && selectedContext.id,\n    defaultYear: selectedContext && selectedContext.defaultYear\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    onAddNode: function onAddNode(nodeId) {\n      return selectExpandedNode(nodeId);\n    },\n    setSankeySearchVisibility: function setSankeySearchVisibility(searchVisibility) {\n      return _setSankeySearchVisibility(searchVisibility);\n    }\n  }, dispatch);\n};\n\nvar _default = connect(mapStateToProps, mapDispatchToProps)(ToolSearch);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_defineProperty, \"_defineProperty\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/tool/tool-search/tool-search.container.js\");\n  reactHotLoader.register(_slicedToArray, \"_slicedToArray\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/tool/tool-search/tool-search.container.js\");\n  reactHotLoader.register(_nonIterableRest, \"_nonIterableRest\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/tool/tool-search/tool-search.container.js\");\n  reactHotLoader.register(_iterableToArrayLimit, \"_iterableToArrayLimit\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/tool/tool-search/tool-search.container.js\");\n  reactHotLoader.register(_arrayWithHoles, \"_arrayWithHoles\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/tool/tool-search/tool-search.container.js\");\n  reactHotLoader.register(searchNodes, \"searchNodes\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/tool/tool-search/tool-search.container.js\");\n  reactHotLoader.register(getNode, \"getNode\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/tool/tool-search/tool-search.container.js\");\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/tool/tool-search/tool-search.container.js\");\n  reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/tool/tool-search/tool-search.container.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/tool/tool-search/tool-search.container.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/tool/tool-search/tool-search.container.js"],"names":["setSankeySearchVisibility","getNode","nA","nB","isNodeColumnVisible","nodesDict","id","name","type","profileType","mapStateToProps","selectedContext","state","nodes","selectedNodesIds","selectedColumnsIds","isSearchOpen","isMapVisible","searchNodes","allNodes","node","flatten","groupBy","contextId","defaultYear","mapDispatchToProps","bindActionCreators","onAddNode","selectExpandedNode","connect"],"mappings":"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","sourcesContent":["import { selectExpandedNode, setSankeySearchVisibility } from 'actions/tool.actions';\nimport flatten from 'lodash/flatten';\nimport groupBy from 'lodash/groupBy';\nimport ToolSearch from 'react-components/tool/tool-search/tool-search.component';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport isNodeColumnVisible from 'utils/isNodeColumnVisible';\n\nlet searchNodes;\n\nconst getNode = (nodes, selectedColumnsIds, nodesDict) => {\n  const [nA, nB] = nodes;\n  if (nB) {\n    if (\n      isNodeColumnVisible(nodesDict[nA.id], selectedColumnsIds) &&\n      isNodeColumnVisible(nodesDict[nB.id], selectedColumnsIds)\n    ) {\n      return {\n        id: `${nA.id}_${nB.id}`,\n        name: nA.name,\n        type: `${nA.type} & ${nB.type}`,\n        profileType: nA.profileType,\n        [nA.type.toLowerCase()]: nA,\n        [nB.type.toLowerCase()]: nB\n      };\n    }\n    return nodes;\n  }\n  return nA;\n};\n\nconst mapStateToProps = state => {\n  const { selectedContext } = state.app;\n  const {\n    nodes,\n    selectedNodesIds,\n    selectedColumnsIds,\n    nodesDict,\n    isSearchOpen,\n    isMapVisible\n  } = state.tool;\n  // store nodes at container level to avoid rerendering when filtering... for want of a better solution\n  if (nodes !== undefined && (!searchNodes || nodes.length !== searchNodes.length)) {\n    const allNodes = nodes.filter(\n      node =>\n        node.hasFlows === true &&\n        node.isAggregated !== true &&\n        node.isUnknown !== true &&\n        node.isDomesticConsumption !== true\n    );\n    searchNodes = flatten(\n      Object.values(groupBy(allNodes, 'mainNodeId')).map(groupedNodes =>\n        getNode(groupedNodes, selectedColumnsIds, nodesDict)\n      )\n    );\n  }\n\n  return {\n    selectedNodesIds,\n    isSearchOpen,\n    isMapVisible,\n    nodes: searchNodes,\n    contextId: selectedContext && selectedContext.id,\n    defaultYear: selectedContext && selectedContext.defaultYear\n  };\n};\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      onAddNode: nodeId => selectExpandedNode(nodeId),\n      setSankeySearchVisibility: searchVisibility => setSankeySearchVisibility(searchVisibility)\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ToolSearch);\n"]}]}