{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/react-hot-loader/babel.js\"],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profile-node/profile-node.container.js","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profile-node/profile-node.container.js","mtime":1543486759537},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/.babelrc","mtime":1548840716937},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport ProfileNode from 'react-components/profile-node/profile-node.component';\n\nfunction mapStateToProps(state) {\n  var _state$location = state.location,\n      _state$location$query = _state$location.query;\n  _state$location$query = _state$location$query === void 0 ? {} : _state$location$query;\n  var year = _state$location$query.year,\n      nodeId = _state$location$query.nodeId,\n      print = _state$location$query.print,\n      _state$location$query2 = _state$location$query.contextId,\n      contextId = _state$location$query2 === void 0 ? 1 : _state$location$query2,\n      profileType = _state$location.payload.profileType;\n  var _state$app = state.app,\n      tooltips = _state$app.tooltips,\n      contexts = _state$app.contexts;\n  var ctxId = contextId && parseInt(contextId, 10);\n  var context = contexts.find(function (ctx) {\n    return ctx.id === ctxId;\n  }) || {\n    id: ctxId\n  };\n  return {\n    tooltips: tooltips,\n    context: context,\n    profileType: profileType,\n    printMode: print && JSON.parse(print),\n    year: parseInt(year, 10),\n    nodeId: parseInt(nodeId, 10)\n  };\n}\n\nvar updateQueryParams = function updateQueryParams(profileType, query) {\n  return {\n    type: 'profileNode',\n    payload: {\n      query: query,\n      profileType: profileType\n    }\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    updateQueryParams: updateQueryParams\n  }, dispatch);\n};\n\nvar _default = connect(mapStateToProps, mapDispatchToProps)(ProfileNode);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profile-node/profile-node.container.js\");\n  reactHotLoader.register(updateQueryParams, \"updateQueryParams\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profile-node/profile-node.container.js\");\n  reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profile-node/profile-node.container.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profile-node/profile-node.container.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profile-node/profile-node.container.js"],"names":["year","nodeId","print","contextId","profileType","state","tooltips","contexts","ctxId","parseInt","context","ctx","id","printMode","JSON","updateQueryParams","type","payload","query","mapDispatchToProps","bindActionCreators","connect"],"mappings":";;;;;;AAAA,SAAA,OAAA,QAAA,aAAA;AACA,SAAA,kBAAA,QAAA,OAAA;AACA,OAAA,WAAA,MAAA,sDAAA;;AAEA,SAAA,eAAA,CAAA,KAAA,EAAgC;AAAA,MAAA,eAAA,GAI1BK,KAAK,CAJqB,QAAA;AAAA,MAAA,qBAAA,GAAA,eAAA,CAAA,KAAA;AAAA,EAAA,qBAAA,GAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,qBAAA;AAAA,MAEnBL,IAFmB,GAAA,qBAAA,CAAA,IAAA;AAAA,MAEbC,MAFa,GAAA,qBAAA,CAAA,MAAA;AAAA,MAELC,KAFK,GAAA,qBAAA,CAAA,KAAA;AAAA,MAAA,sBAAA,GAAA,qBAAA,CAAA,SAAA;AAAA,MAEEC,SAFF,GAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,CAAA,GAAA,sBAAA;AAAA,MAGjBC,WAHiB,GAAA,eAAA,CAAA,OAAA,CAAA,WAAA;AAAA,MAAA,UAAA,GAKCC,KAAK,CALN,GAAA;AAAA,MAKtBC,QALsB,GAAA,UAAA,CAAA,QAAA;AAAA,MAKZC,QALY,GAAA,UAAA,CAAA,QAAA;AAM9B,MAAMC,KAAK,GAAGL,SAAS,IAAIM,QAAQ,CAAA,SAAA,EAAnC,EAAmC,CAAnC;AACA,MAAMC,OAAO,GAAG,QAAQ,CAAR,IAAA,CAAc,UAAA,GAAA,EAAG;AAAA,WAAIC,GAAG,CAAHA,EAAAA,KAAJ,KAAA;AAAjB,GAAA,KAA0C;AAAEC,IAAAA,EAAE,EAAEJ;AAAN,GAA1D;AACA,SAAO;AACLF,IAAAA,QAAQ,EADH,QAAA;AAELI,IAAAA,OAAO,EAFF,OAAA;AAGLN,IAAAA,WAAW,EAHN,WAAA;AAILS,IAAAA,SAAS,EAAEX,KAAK,IAAIY,IAAI,CAAJA,KAAAA,CAJf,KAIeA,CAJf;AAKLd,IAAAA,IAAI,EAAES,QAAQ,CAAA,IAAA,EALT,EAKS,CALT;AAMLR,IAAAA,MAAM,EAAEQ,QAAQ,CAAA,MAAA,EAAA,EAAA;AANX,GAAP;AAQD;;AAED,IAAMM,iBAAiB,GAAG,SAApBA,iBAAoB,CAAA,WAAA,EAAA,KAAA,EAAA;AAAA,SAAyB;AACjDC,IAAAA,IAAI,EAD6C,aAAA;AAEjDC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,KAAK,EAAP,KAAA;AAASd,MAAAA,WAAW,EAAXA;AAAT;AAFwC,GAAzB;AAA1B,CAAA;;AAKA,IAAMe,kBAAkB,GAAG,SAArBA,kBAAqB,CAAA,QAAA,EAAQ;AAAA,SACjCC,kBAAkB,CAChB;AACEL,IAAAA,iBAAiB,EAAjBA;AADF,GADgB,EADe,QACf,CADe;AAAnC,CAAA;;eAQeM,OAAO,CAAA,eAAA,EAAPA,kBAAO,CAAPA,CAAf,WAAeA,C;;AAAf;;;;;;;;;;;;0BA/BA,e;0BAkBMN,iB;0BAKAI,kB","sourcesContent":["import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport ProfileNode from 'react-components/profile-node/profile-node.component';\n\nfunction mapStateToProps(state) {\n  const {\n    query: { year, nodeId, print, contextId = 1 } = {},\n    payload: { profileType }\n  } = state.location;\n  const { tooltips, contexts } = state.app;\n  const ctxId = contextId && parseInt(contextId, 10);\n  const context = contexts.find(ctx => ctx.id === ctxId) || { id: ctxId };\n  return {\n    tooltips,\n    context,\n    profileType,\n    printMode: print && JSON.parse(print),\n    year: parseInt(year, 10),\n    nodeId: parseInt(nodeId, 10)\n  };\n}\n\nconst updateQueryParams = (profileType, query) => ({\n  type: 'profileNode',\n  payload: { query, profileType }\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      updateQueryParams\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ProfileNode);\n"]}]}