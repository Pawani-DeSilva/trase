{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/react-hot-loader/babel.js\"],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/components/tool/map-legend.component.jsx","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/components/tool/map-legend.component.jsx","mtime":1548345115465},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/.babelrc","mtime":1548840716937},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nimport ReactDOMServer from 'react-dom/server';\nimport React from 'react';\nimport ChoroArrow from 'react-components/tool/choro-arrow/choro-arrow.component';\nimport LegendChoroTemplate from 'templates/tool/map/legend-choro.ejs';\nimport LegendContextTemplate from 'templates/tool/map/legend-context.ejs';\nimport 'styles/components/tool/map/map-legend.scss';\nimport abbreviateNumber from 'utils/abbreviateNumber';\n\nvar _default =\n/*#__PURE__*/\nfunction () {\n  function _default() {\n    _classCallCheck(this, _default);\n  }\n\n  _createClass(_default, [{\n    key: \"onCreated\",\n    value: function onCreated() {\n      var _this = this;\n\n      this.el = document.querySelector('.js-map-legend');\n      this.el.addEventListener('click', function () {\n        _this.callbacks.onToggleMapLayerMenu();\n      });\n      this.choro = document.querySelector('.js-map-legend-choro');\n      this.context = document.querySelector('.js-map-legend-context');\n      this.map = document.querySelector('.c-map');\n      this.attribution = document.querySelector('.js-map-attribution');\n      this.mapControlScale = document.querySelector('.leaflet-control-scale');\n      this.warningsContainer = document.querySelector('.js-map-warnings-container');\n      this.warnings = document.querySelector('.js-map-warnings');\n      var zoom = document.querySelector('.leaflet-control-zoom');\n      var scale = document.querySelector('.leaflet-control-scale');\n      zoom.addEventListener('mouseenter', function () {\n        scale.classList.toggle('-visible', true);\n      });\n      zoom.addEventListener('mouseleave', function () {\n        scale.classList.toggle('-visible', false);\n      });\n    }\n  }, {\n    key: \"updateChoroplethLegend\",\n    value: function updateChoroplethLegend(_ref) {\n      var choroplethLegend = _ref.choroplethLegend,\n          selectedMapContextualLayersData = _ref.selectedMapContextualLayersData;\n\n      this._toggleLegend(choroplethLegend, selectedMapContextualLayersData);\n\n      this._setupChoro(choroplethLegend);\n\n      this._updateMapControlsPosition(choroplethLegend);\n    }\n  }, {\n    key: \"updateContextLegend\",\n    value: function updateContextLegend(_ref2) {\n      var choroplethLegend = _ref2.choroplethLegend,\n          selectedMapContextualLayersData = _ref2.selectedMapContextualLayersData;\n\n      this._toggleLegend(choroplethLegend, selectedMapContextualLayersData);\n\n      this._renderContext(selectedMapContextualLayersData);\n\n      this._updateMapControlsPosition(choroplethLegend);\n    }\n  }, {\n    key: \"highlightChoroplethBucket\",\n    value: function highlightChoroplethBucket(bucketClass) {\n      if (this.currentBuckets === undefined) {\n        return;\n      }\n\n      for (var i = 0; i < this.currentBuckets.length; i++) {\n        this.currentBuckets[i].classList.toggle('-highlighted', false);\n      }\n\n      if (bucketClass === undefined || bucketClass === null) {\n        return;\n      }\n\n      var bucket = this.choro.getElementsByClassName(\"color-\".concat(bucketClass.substr(1).toLowerCase()))[0];\n\n      if (bucket === undefined) {\n        return;\n      }\n\n      bucket.classList.toggle('-highlighted', true);\n    }\n  }, {\n    key: \"selectMapDimensions\",\n    value: function selectMapDimensions(selectedMapDimensionsWarnings) {\n      this.warningsContainer.classList.toggle('-visible', selectedMapDimensionsWarnings !== null);\n\n      if (selectedMapDimensionsWarnings !== null) {\n        this.warnings.innerHTML = selectedMapDimensionsWarnings;\n      }\n    }\n  }, {\n    key: \"_setupChoro\",\n    value: function _setupChoro(choroplethLegend) {\n      if (this.el.hasChildNodes()) {\n        this._cleanChoro();\n      }\n\n      if (choroplethLegend !== null) {\n        this._renderChoro(choroplethLegend);\n      }\n    }\n  }, {\n    key: \"_toggleLegend\",\n    value: function _toggleLegend(choroplethLegend, selectedMapContextualLayersData) {\n      if (choroplethLegend === null && (selectedMapContextualLayersData === undefined || !selectedMapContextualLayersData.length)) {\n        this._hideLegend();\n      } else {\n        this._showLegend();\n      }\n    }\n  }, {\n    key: \"_showLegend\",\n    value: function _showLegend() {\n      this.el.classList.remove('-hidden');\n    }\n  }, {\n    key: \"_hideLegend\",\n    value: function _hideLegend() {\n      this.el.classList.add('-hidden');\n    }\n  }, {\n    key: \"_cleanChoro\",\n    value: function _cleanChoro() {\n      this.choro.innerHTML = '';\n    }\n  }, {\n    key: \"_renderChoro\",\n    value: function _renderChoro(choroplethLegend) {\n      var cssClasses = [];\n      cssClasses.push(choroplethLegend.isBivariate ? '-bidimensional' : '-horizontal');\n\n      if (!choroplethLegend.isBivariate && choroplethLegend.bucket[0].length >= 7) {\n        cssClasses.push('-wide');\n      }\n\n      this.choro.innerHTML = LegendChoroTemplate({\n        title: choroplethLegend.titles,\n        colors: choroplethLegend.colors,\n        cssClass: cssClasses.join(' '),\n        bucket: choroplethLegend.bucket,\n        isBivariate: choroplethLegend.isBivariate,\n        abbreviateNumber: abbreviateNumber\n      });\n      this.currentBuckets = Array.prototype.slice.call(this.choro.getElementsByClassName('bucket')).concat(Array.prototype.slice.call(this.choro.getElementsByClassName('bullet')));\n      var choroArrow = document.querySelector('.js-choro-arrow');\n      if (!choroArrow) return;\n\n      if (!choroplethLegend.isBivariate) {\n        choroArrow.innerHTML = ReactDOMServer.renderToStaticMarkup(React.createElement(ChoroArrow, {\n          ticks: choroplethLegend.bucket[0].length,\n          width: choroArrow.clientWidth\n        }));\n      } else {\n        choroArrow.innerHTML = '';\n      }\n    }\n  }, {\n    key: \"_renderContext\",\n    value: function _renderContext(layers) {\n      this.context.innerHTML = LegendContextTemplate({\n        layers: layers\n      });\n    }\n  }, {\n    key: \"_updateMapControlsPosition\",\n    value: function _updateMapControlsPosition(legend) {\n      if (this.mapControlScale) {\n        this.mapControlScale.classList.remove('-bivariate-legend');\n        this.mapControlScale.classList.remove('-simple-legend');\n      }\n\n      if (legend) {\n        var className = legend.isBivariate ? '-bivariate-legend' : '-simple-legend';\n        if (this.mapControlScale) this.mapControlScale.classList.add(className);\n      }\n    }\n  }]);\n\n  return _default;\n}();\n\nexport { _default as default };\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_classCallCheck, \"_classCallCheck\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/components/tool/map-legend.component.jsx\");\n  reactHotLoader.register(_defineProperties, \"_defineProperties\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/components/tool/map-legend.component.jsx\");\n  reactHotLoader.register(_createClass, \"_createClass\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/components/tool/map-legend.component.jsx\");\n  reactHotLoader.register(_default, \"_default\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/components/tool/map-legend.component.jsx\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/components/tool/map-legend.component.jsx"],"names":["document","zoom","scale","choroplethLegend","selectedMapContextualLayersData","bucketClass","i","bucket","selectedMapDimensionsWarnings","cssClasses","LegendChoroTemplate","title","colors","cssClass","isBivariate","abbreviateNumber","Array","choroArrow","clientWidth","layers","LegendContextTemplate","legend","className"],"mappings":"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","sourcesContent":["import ReactDOMServer from 'react-dom/server';\nimport React from 'react';\n\nimport ChoroArrow from 'react-components/tool/choro-arrow/choro-arrow.component';\nimport LegendChoroTemplate from 'templates/tool/map/legend-choro.ejs';\nimport LegendContextTemplate from 'templates/tool/map/legend-context.ejs';\nimport 'styles/components/tool/map/map-legend.scss';\nimport abbreviateNumber from 'utils/abbreviateNumber';\n\nexport default class {\n  onCreated() {\n    this.el = document.querySelector('.js-map-legend');\n    this.el.addEventListener('click', () => {\n      this.callbacks.onToggleMapLayerMenu();\n    });\n    this.choro = document.querySelector('.js-map-legend-choro');\n    this.context = document.querySelector('.js-map-legend-context');\n    this.map = document.querySelector('.c-map');\n    this.attribution = document.querySelector('.js-map-attribution');\n    this.mapControlScale = document.querySelector('.leaflet-control-scale');\n    this.warningsContainer = document.querySelector('.js-map-warnings-container');\n    this.warnings = document.querySelector('.js-map-warnings');\n\n    const zoom = document.querySelector('.leaflet-control-zoom');\n    const scale = document.querySelector('.leaflet-control-scale');\n    zoom.addEventListener('mouseenter', () => {\n      scale.classList.toggle('-visible', true);\n    });\n    zoom.addEventListener('mouseleave', () => {\n      scale.classList.toggle('-visible', false);\n    });\n  }\n\n  updateChoroplethLegend({ choroplethLegend, selectedMapContextualLayersData }) {\n    this._toggleLegend(choroplethLegend, selectedMapContextualLayersData);\n    this._setupChoro(choroplethLegend);\n    this._updateMapControlsPosition(choroplethLegend);\n  }\n\n  updateContextLegend({ choroplethLegend, selectedMapContextualLayersData }) {\n    this._toggleLegend(choroplethLegend, selectedMapContextualLayersData);\n    this._renderContext(selectedMapContextualLayersData);\n    this._updateMapControlsPosition(choroplethLegend);\n  }\n\n  highlightChoroplethBucket(bucketClass) {\n    if (this.currentBuckets === undefined) {\n      return;\n    }\n    for (let i = 0; i < this.currentBuckets.length; i++) {\n      this.currentBuckets[i].classList.toggle('-highlighted', false);\n    }\n    if (bucketClass === undefined || bucketClass === null) {\n      return;\n    }\n    const bucket = this.choro.getElementsByClassName(\n      `color-${bucketClass.substr(1).toLowerCase()}`\n    )[0];\n    if (bucket === undefined) {\n      return;\n    }\n    bucket.classList.toggle('-highlighted', true);\n  }\n\n  selectMapDimensions(selectedMapDimensionsWarnings) {\n    this.warningsContainer.classList.toggle('-visible', selectedMapDimensionsWarnings !== null);\n    if (selectedMapDimensionsWarnings !== null) {\n      this.warnings.innerHTML = selectedMapDimensionsWarnings;\n    }\n  }\n\n  _setupChoro(choroplethLegend) {\n    if (this.el.hasChildNodes()) {\n      this._cleanChoro();\n    }\n\n    if (choroplethLegend !== null) {\n      this._renderChoro(choroplethLegend);\n    }\n  }\n\n  _toggleLegend(choroplethLegend, selectedMapContextualLayersData) {\n    if (\n      choroplethLegend === null &&\n      (selectedMapContextualLayersData === undefined || !selectedMapContextualLayersData.length)\n    ) {\n      this._hideLegend();\n    } else {\n      this._showLegend();\n    }\n  }\n\n  _showLegend() {\n    this.el.classList.remove('-hidden');\n  }\n\n  _hideLegend() {\n    this.el.classList.add('-hidden');\n  }\n\n  _cleanChoro() {\n    this.choro.innerHTML = '';\n  }\n\n  _renderChoro(choroplethLegend) {\n    const cssClasses = [];\n    cssClasses.push(choroplethLegend.isBivariate ? '-bidimensional' : '-horizontal');\n\n    if (!choroplethLegend.isBivariate && choroplethLegend.bucket[0].length >= 7) {\n      cssClasses.push('-wide');\n    }\n\n    this.choro.innerHTML = LegendChoroTemplate({\n      title: choroplethLegend.titles,\n      colors: choroplethLegend.colors,\n      cssClass: cssClasses.join(' '),\n      bucket: choroplethLegend.bucket,\n      isBivariate: choroplethLegend.isBivariate,\n      abbreviateNumber\n    });\n\n    this.currentBuckets = Array.prototype.slice\n      .call(this.choro.getElementsByClassName('bucket'))\n      .concat(Array.prototype.slice.call(this.choro.getElementsByClassName('bullet')));\n\n    const choroArrow = document.querySelector('.js-choro-arrow');\n\n    if (!choroArrow) return;\n\n    if (!choroplethLegend.isBivariate) {\n      choroArrow.innerHTML = ReactDOMServer.renderToStaticMarkup(\n        <ChoroArrow ticks={choroplethLegend.bucket[0].length} width={choroArrow.clientWidth} />\n      );\n    } else {\n      choroArrow.innerHTML = '';\n    }\n  }\n\n  _renderContext(layers) {\n    this.context.innerHTML = LegendContextTemplate({\n      layers\n    });\n  }\n\n  _updateMapControlsPosition(legend) {\n    if (this.mapControlScale) {\n      this.mapControlScale.classList.remove('-bivariate-legend');\n      this.mapControlScale.classList.remove('-simple-legend');\n    }\n    if (legend) {\n      const className = legend.isBivariate ? '-bivariate-legend' : '-simple-legend';\n      if (this.mapControlScale) this.mapControlScale.classList.add(className);\n    }\n  }\n}\n"]}]}