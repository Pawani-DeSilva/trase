{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/react-hot-loader/babel.js\"],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/data-portal/data-portal-form/data-portal-form.component.jsx","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/data-portal/data-portal-form/data-portal-form.component.jsx","mtime":1548345115526},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/.babelrc","mtime":1548840716937},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n/* eslint-disable jsx-a11y/label-has-for,jsx-a11y/no-static-element-interactions,jsx-a11y/label-has-associated-control */\n\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { getURLFromParams, POST_SUBSCRIBE_NEWSLETTER_URL } from '../../../utils/getURLFromParams';\nimport { COUNTRIES } from '../../../countries';\nimport './download-form.scss';\n\nvar DataPortalForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DataPortalForm, _Component);\n\n  function DataPortalForm(props) {\n    var _this;\n\n    _classCallCheck(this, DataPortalForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DataPortalForm).call(this, props));\n    _this.formFieldWhiteList = ['name', 'country', 'organisation', 'organisationType', 'dataUse', 'comments', 'email'];\n    _this.state = {\n      showTOSWarning: false\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(DataPortalForm, [{\n    key: \"getFormData\",\n    value: function getFormData(form) {\n      var data = {};\n\n      for (var i = 0; i < form.elements.length; i++) {\n        var element = form.elements[i];\n\n        if (element.tagName !== 'BUTTON') {\n          data[element.id] = element.type === 'checkbox' ? element.checked : element.value;\n        }\n      }\n\n      return data;\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault();\n      var _this$props = this.props,\n          downloaded = _this$props.downloaded,\n          downloadFile = _this$props.downloadFile,\n          closeForm = _this$props.closeForm;\n      var data = this.getFormData(event.target);\n      var payload = {};\n      this.formFieldWhiteList.forEach(function (elem) {\n        if (data[elem] !== '') {\n          payload[elem] = data[elem];\n        }\n      });\n\n      if (!downloaded && !data.tos_check) {\n        this.setState({\n          showTOSWarning: true\n        });\n        return;\n      }\n\n      payload.date = new Date().toString();\n\n      if (!downloaded) {\n        downloadFile();\n      } // Check if we have user data, and if not, ask for it\n\n\n      if (Object.values(payload).filter(function (v) {\n        return v !== '';\n      }).length === 1) {\n        return;\n      }\n\n      var dataSubmitBody = new FormData();\n      Object.keys(payload).forEach(function (key) {\n        dataSubmitBody.append(key, payload[key]);\n      });\n      fetch(DATA_FORM_ENDPOINT, {\n        method: 'POST',\n        body: dataSubmitBody\n      });\n\n      if (payload.email) {\n        var newsletterSubscribeBody = new FormData();\n        newsletterSubscribeBody.append('email', payload.email);\n        fetch(getURLFromParams(POST_SUBSCRIBE_NEWSLETTER_URL), {\n          method: 'POST',\n          body: newsletterSubscribeBody\n        });\n      }\n\n      closeForm();\n    }\n  }, {\n    key: \"generateCountryList\",\n    value: function generateCountryList(id) {\n      return React.createElement(\"datalist\", {\n        id: id\n      }, React.createElement(\"option\", {\n        value: \"\"\n      }, \"Select country\"), COUNTRIES.map(function (elem) {\n        return React.createElement(\"option\", {\n          key: elem\n        }, elem);\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: cx({\n          'is-hidden': !this.props.isFormVisible\n        })\n      }, React.createElement(\"div\", {\n        className: \"veil -below-nav\",\n        onClick: this.props.closeForm\n      }), React.createElement(\"div\", {\n        className: \"c-modal -below-nav\"\n      }, React.createElement(\"div\", {\n        className: \"content -white -big-margin\"\n      }, React.createElement(\"form\", {\n        className: \"c-download-form\",\n        onSubmit: this.handleSubmit\n      }, React.createElement(\"p\", {\n        className: \"description\"\n      }, \"Thank you for your interest in downloading data from Trase! To help us better understand how the data is currently being used and to improve the platform, we would appreciate if you could tell us a bit about yourself and your work.\"), React.createElement(\"p\", {\n        className: cx('missing', {\n          'is-hidden': !this.props.downloaded\n        })\n      }, \"We'd love to hear about how you use the data and how we could improve it. Please fill in details below and click on 'submit':\"), React.createElement(\"label\", {\n        htmlFor: \"name\"\n      }, \"Name:\", React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"type name\",\n        id: \"name\"\n      })), React.createElement(\"label\", {\n        htmlFor: \"country\"\n      }, \"Country:\", React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"select or type country...\",\n        id: \"country\",\n        list: \"countriesList\"\n      }), this.generateCountryList('countriesList')), React.createElement(\"label\", {\n        htmlFor: \"organisation\"\n      }, \"Organisation name:\", React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"type organisation name\",\n        id: \"organisation\"\n      })), React.createElement(\"label\", {\n        htmlFor: \"organisationType\"\n      }, \"Select or type the option that best describes your organisation:\", React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"select or type...\",\n        id: \"organisationType\",\n        list: \"organisationTypeList\"\n      }), React.createElement(\"datalist\", {\n        id: \"organisationTypeList\"\n      }, React.createElement(\"option\", null, \"Company\"), React.createElement(\"option\", null, \"Financial institution\"), React.createElement(\"option\", null, \"Government agency\"), React.createElement(\"option\", null, \"Media\"), React.createElement(\"option\", null, \"Research organisation\"))), React.createElement(\"label\", {\n        htmlFor: \"dataUse\"\n      }, \"How will you use the data?\", React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"select or type...\",\n        id: \"dataUse\",\n        list: \"dataUseList\"\n      }), React.createElement(\"datalist\", {\n        id: \"dataUseList\"\n      }, React.createElement(\"option\", null, \"Decision support\"), React.createElement(\"option\", null, \"Media and outreach\"), React.createElement(\"option\", null, \"Research\"))), React.createElement(\"label\", {\n        htmlFor: \"comments\"\n      }, \"Please tell us more about your work and if you are interested in helping improve Trase:\", React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"type comments\",\n        id: \"comments\"\n      })), React.createElement(\"label\", {\n        htmlFor: \"email\"\n      }, \"If you would like to sign up for the Trase quarterly newsletter, please provide your email address:\", React.createElement(\"input\", {\n        type: \"email\",\n        placeholder: \"type email\",\n        id: \"email\"\n      })), React.createElement(\"p\", {\n        className: cx('tos', {\n          '-highlighted': this.state.showTOSWarning\n        }, {\n          'is-hidden': this.props.downloaded\n        })\n      }, React.createElement(\"label\", {\n        htmlFor: \"tos_check\"\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"tos_check\"\n      }), \"\\xA0* I agree to the\\xA0\", React.createElement(\"a\", {\n        rel: \"noopener noreferrer\",\n        target: \"_blank\",\n        href: \"/about/terms-of-use\"\n      }, \"Terms of use\"), ' ', \"(required field).\")), React.createElement(\"label\", {\n        className: \"submit\"\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: cx('download-button', {\n          'is-hidden': !this.props.downloaded\n        })\n      }, \"Submit\"), React.createElement(\"button\", {\n        type: \"submit\",\n        className: cx('download-button', {\n          'is-hidden': this.props.downloaded\n        })\n      }, React.createElement(\"svg\", {\n        className: \"icon icon-download\"\n      }, React.createElement(\"use\", {\n        xlinkHref: \"#icon-download\"\n      })), \"Download data\"))))));\n    }\n  }]);\n\n  return DataPortalForm;\n}(Component);\n\nDataPortalForm.propTypes = {\n  isFormVisible: PropTypes.bool,\n  closeForm: PropTypes.func,\n  downloadFile: PropTypes.func,\n  downloaded: PropTypes.bool\n};\nvar _default = DataPortalForm;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_typeof, \"_typeof\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/data-portal/data-portal-form/data-portal-form.component.jsx\");\n  reactHotLoader.register(_classCallCheck, \"_classCallCheck\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/data-portal/data-portal-form/data-portal-form.component.jsx\");\n  reactHotLoader.register(_defineProperties, \"_defineProperties\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/data-portal/data-portal-form/data-portal-form.component.jsx\");\n  reactHotLoader.register(_createClass, \"_createClass\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/data-portal/data-portal-form/data-portal-form.component.jsx\");\n  reactHotLoader.register(_possibleConstructorReturn, \"_possibleConstructorReturn\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/data-portal/data-portal-form/data-portal-form.component.jsx\");\n  reactHotLoader.register(_getPrototypeOf, \"_getPrototypeOf\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/data-portal/data-portal-form/data-portal-form.component.jsx\");\n  reactHotLoader.register(_inherits, \"_inherits\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/data-portal/data-portal-form/data-portal-form.component.jsx\");\n  reactHotLoader.register(_setPrototypeOf, \"_setPrototypeOf\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/data-portal/data-portal-form/data-portal-form.component.jsx\");\n  reactHotLoader.register(_assertThisInitialized, \"_assertThisInitialized\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/data-portal/data-portal-form/data-portal-form.component.jsx\");\n  reactHotLoader.register(DataPortalForm, \"DataPortalForm\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/data-portal/data-portal-form/data-portal-form.component.jsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/data-portal/data-portal-form/data-portal-form.component.jsx\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/data-portal/data-portal-form/data-portal-form.component.jsx"],"names":["DataPortalForm","Component","showTOSWarning","form","data","i","element","event","downloaded","downloadFile","closeForm","payload","v","dataSubmitBody","Object","fetch","method","body","newsletterSubscribeBody","getURLFromParams","id","elem","cx","isFormVisible","handleSubmit","PropTypes","bool"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/label-has-for,jsx-a11y/no-static-element-interactions,jsx-a11y/label-has-associated-control */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { getURLFromParams, POST_SUBSCRIBE_NEWSLETTER_URL } from '../../../utils/getURLFromParams';\nimport { COUNTRIES } from '../../../countries';\n\nimport './download-form.scss';\n\nclass DataPortalForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.formFieldWhiteList = [\n      'name',\n      'country',\n      'organisation',\n      'organisationType',\n      'dataUse',\n      'comments',\n      'email'\n    ];\n\n    this.state = {\n      showTOSWarning: false\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  getFormData(form) {\n    const data = {};\n    for (let i = 0; i < form.elements.length; i++) {\n      const element = form.elements[i];\n      if (element.tagName !== 'BUTTON') {\n        data[element.id] = element.type === 'checkbox' ? element.checked : element.value;\n      }\n    }\n    return data;\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { downloaded, downloadFile, closeForm } = this.props;\n    const data = this.getFormData(event.target);\n    const payload = {};\n\n    this.formFieldWhiteList.forEach(elem => {\n      if (data[elem] !== '') {\n        payload[elem] = data[elem];\n      }\n    });\n\n    if (!downloaded && !data.tos_check) {\n      this.setState({ showTOSWarning: true });\n      return;\n    }\n\n    payload.date = new Date().toString();\n\n    if (!downloaded) {\n      downloadFile();\n    }\n\n    // Check if we have user data, and if not, ask for it\n    if (Object.values(payload).filter(v => v !== '').length === 1) {\n      return;\n    }\n\n    const dataSubmitBody = new FormData();\n    Object.keys(payload).forEach(key => {\n      dataSubmitBody.append(key, payload[key]);\n    });\n\n    fetch(DATA_FORM_ENDPOINT, {\n      method: 'POST',\n      body: dataSubmitBody\n    });\n\n    if (payload.email) {\n      const newsletterSubscribeBody = new FormData();\n      newsletterSubscribeBody.append('email', payload.email);\n\n      fetch(getURLFromParams(POST_SUBSCRIBE_NEWSLETTER_URL), {\n        method: 'POST',\n        body: newsletterSubscribeBody\n      });\n    }\n\n    closeForm();\n  }\n\n  generateCountryList(id) {\n    return (\n      <datalist id={id}>\n        <option value=\"\">Select country</option>\n        {COUNTRIES.map(elem => (\n          <option key={elem}>{elem}</option>\n        ))}\n      </datalist>\n    );\n  }\n\n  render() {\n    return (\n      <div className={cx({ 'is-hidden': !this.props.isFormVisible })}>\n        <div className=\"veil -below-nav\" onClick={this.props.closeForm} />\n        <div className=\"c-modal -below-nav\">\n          <div className=\"content -white -big-margin\">\n            <form className=\"c-download-form\" onSubmit={this.handleSubmit}>\n              <p className=\"description\">\n                Thank you for your interest in downloading data from Trase! To help us better\n                understand how the data is currently being used and to improve the platform, we\n                would appreciate if you could tell us a bit about yourself and your work.\n              </p>\n              <p className={cx('missing', { 'is-hidden': !this.props.downloaded })}>\n                We&apos;d love to hear about how you use the data and how we could improve it.\n                Please fill in details below and click on &apos;submit&apos;:\n              </p>\n              <label htmlFor=\"name\">\n                Name:\n                <input type=\"text\" placeholder=\"type name\" id=\"name\" />\n              </label>\n\n              <label htmlFor=\"country\">\n                Country:\n                <input\n                  type=\"text\"\n                  placeholder=\"select or type country...\"\n                  id=\"country\"\n                  list=\"countriesList\"\n                />\n                {this.generateCountryList('countriesList')}\n              </label>\n\n              <label htmlFor=\"organisation\">\n                Organisation name:\n                <input type=\"text\" placeholder=\"type organisation name\" id=\"organisation\" />\n              </label>\n\n              <label htmlFor=\"organisationType\">\n                Select or type the option that best describes your organisation:\n                <input\n                  type=\"text\"\n                  placeholder=\"select or type...\"\n                  id=\"organisationType\"\n                  list=\"organisationTypeList\"\n                />\n                <datalist id=\"organisationTypeList\">\n                  <option>Company</option>\n                  <option>Financial institution</option>\n                  <option>Government agency</option>\n                  <option>Media</option>\n                  <option>Research organisation</option>\n                </datalist>\n              </label>\n\n              <label htmlFor=\"dataUse\">\n                How will you use the data?\n                <input\n                  type=\"text\"\n                  placeholder=\"select or type...\"\n                  id=\"dataUse\"\n                  list=\"dataUseList\"\n                />\n                <datalist id=\"dataUseList\">\n                  <option>Decision support</option>\n                  <option>Media and outreach</option>\n                  <option>Research</option>\n                </datalist>\n              </label>\n\n              <label htmlFor=\"comments\">\n                Please tell us more about your work and if you are interested in helping improve\n                Trase:\n                <input type=\"text\" placeholder=\"type comments\" id=\"comments\" />\n              </label>\n\n              <label htmlFor=\"email\">\n                If you would like to sign up for the Trase quarterly newsletter, please provide your\n                email address:\n                <input type=\"email\" placeholder=\"type email\" id=\"email\" />\n              </label>\n\n              <p\n                className={cx(\n                  'tos',\n                  { '-highlighted': this.state.showTOSWarning },\n                  { 'is-hidden': this.props.downloaded }\n                )}\n              >\n                <label htmlFor=\"tos_check\">\n                  <input type=\"checkbox\" id=\"tos_check\" />\n                  &nbsp;* I agree to the&nbsp;\n                  <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"/about/terms-of-use\">\n                    Terms of use\n                  </a>{' '}\n                  (required field).\n                </label>\n              </p>\n              <label className=\"submit\">\n                <button\n                  type=\"submit\"\n                  className={cx('download-button', { 'is-hidden': !this.props.downloaded })}\n                >\n                  Submit\n                </button>\n                <button\n                  type=\"submit\"\n                  className={cx('download-button', { 'is-hidden': this.props.downloaded })}\n                >\n                  <svg className=\"icon icon-download\">\n                    <use xlinkHref=\"#icon-download\" />\n                  </svg>\n                  Download data\n                </button>\n              </label>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDataPortalForm.propTypes = {\n  isFormVisible: PropTypes.bool,\n  closeForm: PropTypes.func,\n  downloadFile: PropTypes.func,\n  downloaded: PropTypes.bool\n};\n\nexport default DataPortalForm;\n"]}]}