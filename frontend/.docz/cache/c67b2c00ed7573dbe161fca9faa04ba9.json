{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/react-hot-loader/babel.js\"],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/world-map/world-map.selectors.js","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/world-map/world-map.selectors.js","mtime":1548840716968},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/.babelrc","mtime":1548840716937},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nimport { createSelector } from 'reselect';\nimport { COUNTRIES_COORDINATES } from 'scripts/countries';\nimport bbox from '@turf/bbox';\nimport lineString from 'turf-linestring';\nimport { getTopNodesKey } from 'react-components/explore/explore.actions';\n\nvar getSelectedContext = function getSelectedContext(state) {\n  return state.app.selectedContext;\n};\n\nvar getSelectedYears = function getSelectedYears(state) {\n  return state.app.selectedYears;\n};\n\nvar getTopNodes = function getTopNodes(state) {\n  return state.explore.topNodes;\n};\n\nexport var getOriginGeoId = createSelector(getSelectedContext, function (selectedContext) {\n  return selectedContext ? selectedContext.worldMap.geoId : null;\n});\nexport var getOriginCoordinates = createSelector(getOriginGeoId, function (originGeoId) {\n  return originGeoId ? COUNTRIES_COORDINATES[originGeoId] : null;\n});\nexport var getCountries = createSelector([getTopNodes, getSelectedContext, getSelectedYears], function (topNodes, selectedContext, selectedYears) {\n  var selectedContextId = selectedContext ? selectedContext.id : null;\n  var topNodesKey = getTopNodesKey.apply(void 0, [selectedContextId, 'country'].concat(_toConsumableArray(selectedYears)));\n  return topNodes[topNodesKey];\n});\nexport var getWorldMapFlows = createSelector([getOriginGeoId, getOriginCoordinates, getCountries], function (originGeoId, originCoordinates, countries) {\n  if (!originGeoId || !originCoordinates || !countries) {\n    return [];\n  }\n\n  var contextFlows = countries ? countries.filter(function (country) {\n    return country.geoId !== originGeoId;\n  }).sort(function (a, b) {\n    if (a.value < b.value) return -1;\n    if (a.value > b.value) return 1;\n    return 0;\n  }).map(function (country, index) {\n    return _objectSpread({}, country, {\n      strokeWidth: index + 1\n    });\n  }) : [];\n  var contextFlowsWithCoordinates = contextFlows.filter(function (f) {\n    return typeof f.coordinates !== 'undefined';\n  });\n\n  if (contextFlowsWithCoordinates.length !== contextFlows.length) {\n    console.warn('World map flows are missing geoids. Check your database.');\n  }\n\n  var _bbox = bbox(lineString(contextFlowsWithCoordinates.map(function (f) {\n    return f.coordinates;\n  }))),\n      _bbox2 = _slicedToArray(_bbox, 3),\n      minX = _bbox2[0],\n      maxX = _bbox2[2];\n\n  var medianX = (maxX + minX) / 2;\n  var originLeftOfBbox = originCoordinates[0] < medianX;\n  var pointOfControl = {\n    x: originLeftOfBbox ? minX - 10 : maxX + 10\n  };\n\n  var getCurveStyle = function getCurveStyle(destination) {\n    if (destination[0] < pointOfControl.x) {\n      // left\n      return 'forceDown';\n    } // right\n\n\n    return 'forceUp';\n  };\n\n  return contextFlowsWithCoordinates.map(function (destination) {\n    return _objectSpread({}, destination, {\n      curveStyle: getCurveStyle(destination.coordinates)\n    });\n  });\n});\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_slicedToArray, \"_slicedToArray\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/world-map/world-map.selectors.js\");\n  reactHotLoader.register(_nonIterableRest, \"_nonIterableRest\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/world-map/world-map.selectors.js\");\n  reactHotLoader.register(_iterableToArrayLimit, \"_iterableToArrayLimit\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/world-map/world-map.selectors.js\");\n  reactHotLoader.register(_arrayWithHoles, \"_arrayWithHoles\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/world-map/world-map.selectors.js\");\n  reactHotLoader.register(_objectSpread, \"_objectSpread\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/world-map/world-map.selectors.js\");\n  reactHotLoader.register(_defineProperty, \"_defineProperty\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/world-map/world-map.selectors.js\");\n  reactHotLoader.register(_toConsumableArray, \"_toConsumableArray\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/world-map/world-map.selectors.js\");\n  reactHotLoader.register(_nonIterableSpread, \"_nonIterableSpread\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/world-map/world-map.selectors.js\");\n  reactHotLoader.register(_iterableToArray, \"_iterableToArray\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/world-map/world-map.selectors.js\");\n  reactHotLoader.register(_arrayWithoutHoles, \"_arrayWithoutHoles\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/world-map/world-map.selectors.js\");\n  reactHotLoader.register(getSelectedContext, \"getSelectedContext\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/world-map/world-map.selectors.js\");\n  reactHotLoader.register(getSelectedYears, \"getSelectedYears\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/world-map/world-map.selectors.js\");\n  reactHotLoader.register(getTopNodes, \"getTopNodes\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/world-map/world-map.selectors.js\");\n  reactHotLoader.register(getOriginGeoId, \"getOriginGeoId\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/world-map/world-map.selectors.js\");\n  reactHotLoader.register(getOriginCoordinates, \"getOriginCoordinates\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/world-map/world-map.selectors.js\");\n  reactHotLoader.register(getCountries, \"getCountries\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/world-map/world-map.selectors.js\");\n  reactHotLoader.register(getWorldMapFlows, \"getWorldMapFlows\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/world-map/world-map.selectors.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/shared/world-map/world-map.selectors.js"],"names":["getSelectedContext","state","getSelectedYears","getTopNodes","getOriginGeoId","createSelector","selectedContext","getOriginCoordinates","originGeoId","COUNTRIES_COORDINATES","getCountries","selectedContextId","topNodesKey","getTopNodesKey","topNodes","getWorldMapFlows","contextFlows","countries","country","a","b","strokeWidth","index","contextFlowsWithCoordinates","f","console","minX","maxX","bbox","lineString","medianX","originLeftOfBbox","originCoordinates","pointOfControl","x","getCurveStyle","destination","curveStyle"],"mappings":"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","sourcesContent":["import { createSelector } from 'reselect';\nimport { COUNTRIES_COORDINATES } from 'scripts/countries';\nimport bbox from '@turf/bbox';\nimport lineString from 'turf-linestring';\nimport { getTopNodesKey } from 'react-components/explore/explore.actions';\n\nconst getSelectedContext = state => state.app.selectedContext;\nconst getSelectedYears = state => state.app.selectedYears;\nconst getTopNodes = state => state.explore.topNodes;\n\nexport const getOriginGeoId = createSelector(\n  getSelectedContext,\n  selectedContext => (selectedContext ? selectedContext.worldMap.geoId : null)\n);\n\nexport const getOriginCoordinates = createSelector(\n  getOriginGeoId,\n  originGeoId => (originGeoId ? COUNTRIES_COORDINATES[originGeoId] : null)\n);\n\nexport const getCountries = createSelector(\n  [getTopNodes, getSelectedContext, getSelectedYears],\n  (topNodes, selectedContext, selectedYears) => {\n    const selectedContextId = selectedContext ? selectedContext.id : null;\n    const topNodesKey = getTopNodesKey(selectedContextId, 'country', ...selectedYears);\n    return topNodes[topNodesKey];\n  }\n);\n\nexport const getWorldMapFlows = createSelector(\n  [getOriginGeoId, getOriginCoordinates, getCountries],\n  (originGeoId, originCoordinates, countries) => {\n    if (!originGeoId || !originCoordinates || !countries) {\n      return [];\n    }\n\n    const contextFlows = countries\n      ? countries\n          .filter(country => country.geoId !== originGeoId)\n          .sort((a, b) => {\n            if (a.value < b.value) return -1;\n            if (a.value > b.value) return 1;\n            return 0;\n          })\n          .map((country, index) => ({\n            ...country,\n            strokeWidth: index + 1\n          }))\n      : [];\n\n    const contextFlowsWithCoordinates = contextFlows.filter(\n      f => typeof f.coordinates !== 'undefined'\n    );\n\n    if (contextFlowsWithCoordinates.length !== contextFlows.length) {\n      console.warn('World map flows are missing geoids. Check your database.');\n    }\n\n    const [minX, , maxX] = bbox(lineString(contextFlowsWithCoordinates.map(f => f.coordinates)));\n    const medianX = (maxX + minX) / 2;\n    const originLeftOfBbox = originCoordinates[0] < medianX;\n    const pointOfControl = {\n      x: originLeftOfBbox ? minX - 10 : maxX + 10\n    };\n\n    const getCurveStyle = destination => {\n      if (destination[0] < pointOfControl.x) {\n        // left\n        return 'forceDown';\n      }\n      // right\n      return 'forceUp';\n    };\n\n    return contextFlowsWithCoordinates.map(destination => ({\n      ...destination,\n      curveStyle: getCurveStyle(destination.coordinates)\n    }));\n  }\n);\n"]}]}