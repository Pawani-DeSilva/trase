{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/react-hot-loader/babel.js\"],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-panel/dashboard-panel.component.jsx","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-panel/dashboard-panel.component.jsx","mtime":1548345115507},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/.babelrc","mtime":1548840716937},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport BlockSwitch from 'react-components/shared/block-switch/block-switch.component';\nimport SourcesPanel from 'react-components/dashboard-element/dashboard-panel/sources-panel.component';\nimport DestinationsPanel from 'react-components/dashboard-element/dashboard-panel/destinations-panel.component';\nimport CompaniesPanel from 'react-components/dashboard-element/dashboard-panel/companies-panel.component';\nimport CommoditiesPanel from 'react-components/dashboard-element/dashboard-panel/commodities-panel.component';\nimport DashboardModalFooter from 'react-components/dashboard-element/dashboard-modal-footer/dashboard-modal-footer.component';\nimport addApostrophe from 'utils/addApostrophe';\nimport 'scripts/react-components/dashboard-element/dashboard-panel/dashboard-panel.scss';\n\nvar DashboardPanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DashboardPanel, _Component);\n\n  function DashboardPanel() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DashboardPanel);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DashboardPanel)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"containerRef\", React.createRef());\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"clearFooterItem\", function (item) {\n      return _this.props.clearActiveItem(item.panel);\n    });\n\n    return _this;\n  }\n\n  _createClass(DashboardPanel, [{\n    key: \"getSnapshotBeforeUpdate\",\n    value: function getSnapshotBeforeUpdate() {\n      var container = this.containerRef.current;\n\n      if (container && container.scrollTop > 0) {\n        return container.scrollHeight - container.scrollTop;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      var container = this.containerRef.current;\n\n      if (snapshot && container) {\n        container.scrollTop = container.scrollHeight - snapshot;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          tabs = _this$props.tabs,\n          panels = _this$props.panels,\n          editMode = _this$props.editMode,\n          getMoreItems = _this$props.getMoreItems,\n          dirtyBlocks = _this$props.dirtyBlocks,\n          activePanelId = _this$props.activePanelId,\n          setActivePanel = _this$props.setActivePanel,\n          countriesPanel = _this$props.countriesPanel,\n          sourcesPanel = _this$props.sourcesPanel,\n          getSearchResults = _this$props.getSearchResults,\n          destinationsPanel = _this$props.destinationsPanel,\n          companiesPanel = _this$props.companiesPanel,\n          clearActiveItem = _this$props.clearActiveItem,\n          setActiveTab = _this$props.setActiveTab,\n          setActiveItem = _this$props.setActiveItem,\n          sources = _this$props.sources,\n          destinations = _this$props.destinations,\n          countries = _this$props.countries,\n          companies = _this$props.companies,\n          commodities = _this$props.commodities,\n          onContinue = _this$props.onContinue,\n          commoditiesPanel = _this$props.commoditiesPanel,\n          _setSearchResult = _this$props.setSearchResult,\n          dynamicSentenceParts = _this$props.dynamicSentenceParts,\n          loading = _this$props.loading;\n      return React.createElement(\"div\", {\n        className: \"c-dashboard-panel\"\n      }, React.createElement(\"div\", {\n        ref: this.containerRef,\n        className: \"dashboard-panel-content\"\n      }, React.createElement(\"h2\", {\n        className: \"dashboard-panel-title title -center -light\"\n      }, editMode ? 'Edit options' : 'Choose the options you want to add to the dashboard'), React.createElement(BlockSwitch, {\n        className: \"dashboard-panel-block-switch\",\n        blocks: panels,\n        selectBlock: setActivePanel,\n        activeBlockId: activePanelId,\n        dirtyBlocks: dirtyBlocks\n      }), activePanelId === 'sources' && React.createElement(SourcesPanel, {\n        page: sourcesPanel.page,\n        getMoreItems: getMoreItems,\n        setSearchResult: function setSearchResult(item) {\n          return _setSearchResult(item, activePanelId);\n        },\n        getSearchResults: getSearchResults,\n        loadingMoreItems: sourcesPanel.loadingItems,\n        loading: loading,\n        clearItems: function clearItems() {\n          return clearActiveItem(activePanelId);\n        },\n        activeCountryItem: countriesPanel.activeItem,\n        activeSourceTab: sourcesPanel.activeTab,\n        activeSourceItem: sourcesPanel.activeItem,\n        searchSources: !countriesPanel.activeItem ? countriesPanel.searchResults : sourcesPanel.searchResults,\n        tabs: tabs,\n        sources: sources[sourcesPanel.activeTab && sourcesPanel.activeTab.id] || [],\n        countries: countries,\n        onSelectCountry: function onSelectCountry(item) {\n          return setActiveItem(item, 'countries');\n        },\n        onSelectSourceTab: function onSelectSourceTab(item) {\n          return setActiveTab(item, activePanelId);\n        },\n        onSelectSourceValue: function onSelectSourceValue(item) {\n          return setActiveItem(item, activePanelId);\n        }\n      }), activePanelId === 'destinations' && React.createElement(DestinationsPanel, {\n        page: destinationsPanel.page,\n        getMoreItems: getMoreItems,\n        getSearchResults: getSearchResults,\n        searchDestinations: destinationsPanel.searchResults,\n        destinations: destinations,\n        onSelectDestinationValue: function onSelectDestinationValue(item) {\n          return setActiveItem(item, activePanelId);\n        },\n        loadingMoreItems: destinationsPanel.loadingItems,\n        loading: loading,\n        activeDestination: destinationsPanel.activeItem\n      }), activePanelId === 'companies' && React.createElement(CompaniesPanel, {\n        tabs: tabs,\n        page: companiesPanel.page,\n        getMoreItems: getMoreItems,\n        searchCompanies: companiesPanel.searchResults,\n        nodeTypeRenderer: DashboardPanel.countryNameNodeTypeRenderer,\n        setSearchResult: function setSearchResult(item) {\n          return _setSearchResult(item, activePanelId);\n        },\n        getSearchResults: getSearchResults,\n        loadingMoreItems: companiesPanel.loadingItems,\n        loading: loading,\n        companies: companies[companiesPanel.activeTab && companiesPanel.activeTab.id] || [],\n        onSelectNodeTypeTab: function onSelectNodeTypeTab(item) {\n          return setActiveTab(item, activePanelId);\n        },\n        onSelectCompany: function onSelectCompany(item) {\n          return setActiveItem(item, activePanelId);\n        },\n        activeNodeTypeTab: companiesPanel.activeTab,\n        activeCompany: companiesPanel.activeItem\n      }), activePanelId === 'commodities' && React.createElement(CommoditiesPanel, {\n        page: commoditiesPanel.page,\n        getMoreItems: getMoreItems,\n        loadingMoreItems: commoditiesPanel.loadingItems,\n        loading: loading,\n        commodities: commodities,\n        onSelectCommodity: function onSelectCommodity(item) {\n          return setActiveItem(item, activePanelId);\n        },\n        activeCommodity: commoditiesPanel.activeItem\n      })), dynamicSentenceParts && React.createElement(DashboardModalFooter, {\n        editMode: editMode,\n        isPanelFooter: true,\n        onContinue: onContinue,\n        clearItem: this.clearFooterItem,\n        dynamicSentenceParts: dynamicSentenceParts\n      }));\n    }\n  }], [{\n    key: \"countryNameNodeTypeRenderer\",\n    value: function countryNameNodeTypeRenderer(node) {\n      return \"\".concat(node.countryName + addApostrophe(node.countryName), \" \").concat(node.nodeType);\n    }\n  }]);\n\n  return DashboardPanel;\n}(Component);\n\nDashboardPanel.propTypes = {\n  countries: PropTypes.array,\n  companies: PropTypes.object,\n  getMoreItems: PropTypes.func,\n  commodities: PropTypes.array,\n  dirtyBlocks: PropTypes.object,\n  activePanelId: PropTypes.string,\n  sources: PropTypes.object,\n  tabs: PropTypes.array,\n  editMode: PropTypes.bool.isRequired,\n  loading: PropTypes.bool.isRequired,\n  commoditiesPanel: PropTypes.object,\n  panels: PropTypes.array.isRequired,\n  destinations: PropTypes.array.isRequired,\n  onContinue: PropTypes.func.isRequired,\n  setSearchResult: PropTypes.func.isRequired,\n  getSearchResults: PropTypes.func.isRequired,\n  dynamicSentenceParts: PropTypes.array,\n  setActiveTab: PropTypes.func.isRequired,\n  setActiveItem: PropTypes.func.isRequired,\n  clearActiveItem: PropTypes.func.isRequired,\n  setActivePanel: PropTypes.func.isRequired,\n  sourcesPanel: PropTypes.object.isRequired,\n  destinationsPanel: PropTypes.object.isRequired,\n  companiesPanel: PropTypes.object.isRequired,\n  countriesPanel: PropTypes.object.isRequired\n};\nvar _default = DashboardPanel;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_typeof, \"_typeof\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-panel/dashboard-panel.component.jsx\");\n  reactHotLoader.register(_classCallCheck, \"_classCallCheck\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-panel/dashboard-panel.component.jsx\");\n  reactHotLoader.register(_defineProperties, \"_defineProperties\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-panel/dashboard-panel.component.jsx\");\n  reactHotLoader.register(_createClass, \"_createClass\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-panel/dashboard-panel.component.jsx\");\n  reactHotLoader.register(_possibleConstructorReturn, \"_possibleConstructorReturn\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-panel/dashboard-panel.component.jsx\");\n  reactHotLoader.register(_getPrototypeOf, \"_getPrototypeOf\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-panel/dashboard-panel.component.jsx\");\n  reactHotLoader.register(_inherits, \"_inherits\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-panel/dashboard-panel.component.jsx\");\n  reactHotLoader.register(_setPrototypeOf, \"_setPrototypeOf\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-panel/dashboard-panel.component.jsx\");\n  reactHotLoader.register(_assertThisInitialized, \"_assertThisInitialized\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-panel/dashboard-panel.component.jsx\");\n  reactHotLoader.register(_defineProperty, \"_defineProperty\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-panel/dashboard-panel.component.jsx\");\n  reactHotLoader.register(DashboardPanel, \"DashboardPanel\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-panel/dashboard-panel.component.jsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-panel/dashboard-panel.component.jsx\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/dashboard-element/dashboard-panel/dashboard-panel.component.jsx"],"names":["DashboardPanel","Component","React","container","prevProps","prevState","snapshot","node","addApostrophe","item","tabs","panels","editMode","getMoreItems","dirtyBlocks","activePanelId","setActivePanel","countriesPanel","sourcesPanel","getSearchResults","destinationsPanel","companiesPanel","clearActiveItem","setActiveTab","setActiveItem","sources","destinations","countries","companies","commodities","onContinue","commoditiesPanel","setSearchResult","dynamicSentenceParts","loading","activeItem","PropTypes","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport BlockSwitch from 'react-components/shared/block-switch/block-switch.component';\nimport SourcesPanel from 'react-components/dashboard-element/dashboard-panel/sources-panel.component';\nimport DestinationsPanel from 'react-components/dashboard-element/dashboard-panel/destinations-panel.component';\nimport CompaniesPanel from 'react-components/dashboard-element/dashboard-panel/companies-panel.component';\nimport CommoditiesPanel from 'react-components/dashboard-element/dashboard-panel/commodities-panel.component';\nimport DashboardModalFooter from 'react-components/dashboard-element/dashboard-modal-footer/dashboard-modal-footer.component';\nimport addApostrophe from 'utils/addApostrophe';\n\nimport 'scripts/react-components/dashboard-element/dashboard-panel/dashboard-panel.scss';\n\nclass DashboardPanel extends Component {\n  containerRef = React.createRef();\n\n  getSnapshotBeforeUpdate() {\n    const container = this.containerRef.current;\n    if (container && container.scrollTop > 0) {\n      return container.scrollHeight - container.scrollTop;\n    }\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const container = this.containerRef.current;\n    if (snapshot && container) {\n      container.scrollTop = container.scrollHeight - snapshot;\n    }\n  }\n\n  static countryNameNodeTypeRenderer(node) {\n    return `${node.countryName + addApostrophe(node.countryName)} ${node.nodeType}`;\n  }\n\n  clearFooterItem = item => this.props.clearActiveItem(item.panel);\n\n  render() {\n    const {\n      tabs,\n      panels,\n      editMode,\n      getMoreItems,\n      dirtyBlocks,\n      activePanelId,\n      setActivePanel,\n      countriesPanel,\n      sourcesPanel,\n      getSearchResults,\n      destinationsPanel,\n      companiesPanel,\n      clearActiveItem,\n      setActiveTab,\n      setActiveItem,\n      sources,\n      destinations,\n      countries,\n      companies,\n      commodities,\n      onContinue,\n      commoditiesPanel,\n      setSearchResult,\n      dynamicSentenceParts,\n      loading\n    } = this.props;\n    return (\n      <div className=\"c-dashboard-panel\">\n        <div ref={this.containerRef} className=\"dashboard-panel-content\">\n          <h2 className=\"dashboard-panel-title title -center -light\">\n            {editMode ? 'Edit options' : 'Choose the options you want to add to the dashboard'}\n          </h2>\n          <BlockSwitch\n            className=\"dashboard-panel-block-switch\"\n            blocks={panels}\n            selectBlock={setActivePanel}\n            activeBlockId={activePanelId}\n            dirtyBlocks={dirtyBlocks}\n          />\n          {activePanelId === 'sources' && (\n            <SourcesPanel\n              page={sourcesPanel.page}\n              getMoreItems={getMoreItems}\n              setSearchResult={item => setSearchResult(item, activePanelId)}\n              getSearchResults={getSearchResults}\n              loadingMoreItems={sourcesPanel.loadingItems}\n              loading={loading}\n              clearItems={() => clearActiveItem(activePanelId)}\n              activeCountryItem={countriesPanel.activeItem}\n              activeSourceTab={sourcesPanel.activeTab}\n              activeSourceItem={sourcesPanel.activeItem}\n              searchSources={\n                !countriesPanel.activeItem\n                  ? countriesPanel.searchResults\n                  : sourcesPanel.searchResults\n              }\n              tabs={tabs}\n              sources={sources[sourcesPanel.activeTab && sourcesPanel.activeTab.id] || []}\n              countries={countries}\n              onSelectCountry={item => setActiveItem(item, 'countries')}\n              onSelectSourceTab={item => setActiveTab(item, activePanelId)}\n              onSelectSourceValue={item => setActiveItem(item, activePanelId)}\n            />\n          )}\n          {activePanelId === 'destinations' && (\n            <DestinationsPanel\n              page={destinationsPanel.page}\n              getMoreItems={getMoreItems}\n              getSearchResults={getSearchResults}\n              searchDestinations={destinationsPanel.searchResults}\n              destinations={destinations}\n              onSelectDestinationValue={item => setActiveItem(item, activePanelId)}\n              loadingMoreItems={destinationsPanel.loadingItems}\n              loading={loading}\n              activeDestination={destinationsPanel.activeItem}\n            />\n          )}\n          {activePanelId === 'companies' && (\n            <CompaniesPanel\n              tabs={tabs}\n              page={companiesPanel.page}\n              getMoreItems={getMoreItems}\n              searchCompanies={companiesPanel.searchResults}\n              nodeTypeRenderer={DashboardPanel.countryNameNodeTypeRenderer}\n              setSearchResult={item => setSearchResult(item, activePanelId)}\n              getSearchResults={getSearchResults}\n              loadingMoreItems={companiesPanel.loadingItems}\n              loading={loading}\n              companies={companies[companiesPanel.activeTab && companiesPanel.activeTab.id] || []}\n              onSelectNodeTypeTab={item => setActiveTab(item, activePanelId)}\n              onSelectCompany={item => setActiveItem(item, activePanelId)}\n              activeNodeTypeTab={companiesPanel.activeTab}\n              activeCompany={companiesPanel.activeItem}\n            />\n          )}\n          {activePanelId === 'commodities' && (\n            <CommoditiesPanel\n              page={commoditiesPanel.page}\n              getMoreItems={getMoreItems}\n              loadingMoreItems={commoditiesPanel.loadingItems}\n              loading={loading}\n              commodities={commodities}\n              onSelectCommodity={item => setActiveItem(item, activePanelId)}\n              activeCommodity={commoditiesPanel.activeItem}\n            />\n          )}\n        </div>\n        {dynamicSentenceParts && (\n          <DashboardModalFooter\n            editMode={editMode}\n            isPanelFooter\n            onContinue={onContinue}\n            clearItem={this.clearFooterItem}\n            dynamicSentenceParts={dynamicSentenceParts}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nDashboardPanel.propTypes = {\n  countries: PropTypes.array,\n  companies: PropTypes.object,\n  getMoreItems: PropTypes.func,\n  commodities: PropTypes.array,\n  dirtyBlocks: PropTypes.object,\n  activePanelId: PropTypes.string,\n  sources: PropTypes.object,\n  tabs: PropTypes.array,\n  editMode: PropTypes.bool.isRequired,\n  loading: PropTypes.bool.isRequired,\n  commoditiesPanel: PropTypes.object,\n  panels: PropTypes.array.isRequired,\n  destinations: PropTypes.array.isRequired,\n  onContinue: PropTypes.func.isRequired,\n  setSearchResult: PropTypes.func.isRequired,\n  getSearchResults: PropTypes.func.isRequired,\n  dynamicSentenceParts: PropTypes.array,\n  setActiveTab: PropTypes.func.isRequired,\n  setActiveItem: PropTypes.func.isRequired,\n  clearActiveItem: PropTypes.func.isRequired,\n  setActivePanel: PropTypes.func.isRequired,\n  sourcesPanel: PropTypes.object.isRequired,\n  destinationsPanel: PropTypes.object.isRequired,\n  companiesPanel: PropTypes.object.isRequired,\n  countriesPanel: PropTypes.object.isRequired\n};\n\nexport default DashboardPanel;\n"]}]}