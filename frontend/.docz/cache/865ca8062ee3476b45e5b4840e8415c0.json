{"remainingRequest":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\",[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],[\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/react-hot-loader/babel.js\"],\"env\":{\"production\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"transform-react-remove-prop-types\",\"lodash\"]},\"test\":{\"presets\":[[\"@babel/env\",{\"useBuiltIns\":\"entry\"}],\"@babel/preset-react\"],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-object-rest-spread\",\"@babel/plugin-transform-exponentiation-operator\",[\"@babel/plugin-proposal-class-properties\",{\"spec\":true}],\"@babel/plugin-transform-modules-commonjs\",[\"module-resolver\",{\"alias\":{\"scripts\":\"./scripts\",\"actions\":\"./scripts/actions\",\"utils\":\"./scripts/utils\",\"reducers\":\"./scripts/reducers\",\"store\":\"./scripts/store\",\"components\":\"./scripts/components\",\"containers\":\"./scripts/containers\",\"constants\":\"./scripts/constants\",\"router\":\"./scripts/router\",\"react-components\":\"./scripts/react-components\",\"named-maps\":\"./scripts/named-maps\"}}]]}},\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profile-root/profile-root.actions.js","dependencies":[{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profile-root/profile-root.actions.js","mtime":1548424841363},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/.babelrc","mtime":1548840716937},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport { GET_NODES_WITH_SEARCH_URL, getURLFromParams } from 'utils/getURLFromParams';\nimport isEmpty from 'lodash/isEmpty';\nexport var SET_PROFILE_SEARCH_TERM = 'SET_PROFILE_SEARCH_TERM';\nexport var LOAD_PROFILE_SEARCH_RESULTS = 'LOAD_PROFILE_SEARCH_RESULTS';\nexport var SET_PROFILE_ROOT_ERROR_MESSAGE = 'SET_PROFILE_ROOT_ERROR_MESSAGE';\nexport var goToNodeProfilePage = function goToNodeProfilePage(node, _ref) {\n  var year = _ref.year;\n  return function (dispatch) {\n    return dispatch({\n      type: 'profileNode',\n      payload: {\n        query: {\n          nodeId: node.id,\n          contextId: node.contextId,\n          year: year\n        },\n        profileType: node.profile\n      }\n    });\n  };\n};\nexport function resetProfileSearchResults() {\n  return {\n    type: SET_PROFILE_SEARCH_TERM,\n    payload: {\n      term: '',\n      results: []\n    }\n  };\n}\nexport var searchNodeWithTerm = function searchNodeWithTerm(searchTerm, _ref2) {\n  var contextId = _ref2.contextId;\n  return function (dispatch) {\n    var nodeResultsURL = getURLFromParams(GET_NODES_WITH_SEARCH_URL, {\n      query: searchTerm,\n      context_id: contextId,\n      profile_only: true\n    });\n\n    if (isEmpty(searchTerm)) {\n      dispatch(resetProfileSearchResults());\n      return;\n    }\n\n    dispatch({\n      type: SET_PROFILE_SEARCH_TERM,\n      payload: {\n        term: searchTerm,\n        isLoading: true\n      }\n    });\n    fetch(nodeResultsURL).then(function (response) {\n      if (response.ok) {\n        return response.json();\n      }\n\n      return Promise.reject(new Error(response.statusText));\n    }).then(function (results) {\n      if (!results) return;\n      dispatch({\n        type: LOAD_PROFILE_SEARCH_RESULTS,\n        payload: results.data\n      });\n    }).catch(function (reason) {\n      console.error('Error loading profile search nodes', reason);\n      dispatch({\n        type: SET_PROFILE_ROOT_ERROR_MESSAGE,\n        payload: {\n          errorMessage: reason.message\n        }\n      });\n    });\n  };\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(SET_PROFILE_SEARCH_TERM, \"SET_PROFILE_SEARCH_TERM\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profile-root/profile-root.actions.js\");\n  reactHotLoader.register(LOAD_PROFILE_SEARCH_RESULTS, \"LOAD_PROFILE_SEARCH_RESULTS\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profile-root/profile-root.actions.js\");\n  reactHotLoader.register(SET_PROFILE_ROOT_ERROR_MESSAGE, \"SET_PROFILE_ROOT_ERROR_MESSAGE\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profile-root/profile-root.actions.js\");\n  reactHotLoader.register(goToNodeProfilePage, \"goToNodeProfilePage\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profile-root/profile-root.actions.js\");\n  reactHotLoader.register(resetProfileSearchResults, \"resetProfileSearchResults\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profile-root/profile-root.actions.js\");\n  reactHotLoader.register(searchNodeWithTerm, \"searchNodeWithTerm\", \"/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profile-root/profile-root.actions.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/rodrigo/WorkWorkWorkWorkWork/trase/frontend/scripts/react-components/profile-root/profile-root.actions.js"],"names":["SET_PROFILE_SEARCH_TERM","LOAD_PROFILE_SEARCH_RESULTS","SET_PROFILE_ROOT_ERROR_MESSAGE","goToNodeProfilePage","year","dispatch","type","payload","query","nodeId","node","contextId","profileType","profile","term","results","searchNodeWithTerm","nodeResultsURL","getURLFromParams","context_id","profile_only","isEmpty","resetProfileSearchResults","isLoading","fetch","response","Promise","data","console","errorMessage","reason","message"],"mappings":";;;;;;AAAA,SAAA,yBAAA,EAAA,gBAAA,QAAA,wBAAA;AACA,OAAA,OAAA,MAAA,gBAAA;AAEA,OAAO,IAAMA,uBAAuB,GAA7B,yBAAA;AACP,OAAO,IAAMC,2BAA2B,GAAjC,6BAAA;AACP,OAAO,IAAMC,8BAA8B,GAApC,gCAAA;AAEP,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAA,IAAA,EAAA,IAAA,EAAA;AAAA,MAASC,IAAT,GAAA,IAAA,CAAA,IAAA;AAAA,SAAoB,UAAA,QAAA,EAAQ;AAAA,WAC7DC,QAAQ,CAAC;AACPC,MAAAA,IAAI,EADG,aAAA;AAEPC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE;AACLC,UAAAA,MAAM,EAAEC,IAAI,CADP,EAAA;AAELC,UAAAA,SAAS,EAAED,IAAI,CAFV,SAAA;AAGLN,UAAAA,IAAI,EAAJA;AAHK,SADA;AAMPQ,QAAAA,WAAW,EAAEF,IAAI,CAACG;AANX;AAFF,KAAD,CADqD;AAA5B,GAAA;AAA5B,CAAA;AAaP,OAAO,SAAA,yBAAA,GAAqC;AAC1C,SAAO;AACLP,IAAAA,IAAI,EADC,uBAAA;AAELC,IAAAA,OAAO,EAAE;AAAEO,MAAAA,IAAI,EAAN,EAAA;AAAYC,MAAAA,OAAO,EAAE;AAArB;AAFJ,GAAP;AAID;AAED,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAA,UAAA,EAAA,KAAA,EAAA;AAAA,MAAeL,SAAf,GAAA,KAAA,CAAA,SAAA;AAAA,SAA+B,UAAA,QAAA,EAAY;AAC3E,QAAMM,cAAc,GAAGC,gBAAgB,CAAA,yBAAA,EAA4B;AACjEV,MAAAA,KAAK,EAD4D,UAAA;AAEjEW,MAAAA,UAAU,EAFuD,SAAA;AAGjEC,MAAAA,YAAY,EAAE;AAHmD,KAA5B,CAAvC;;AAMA,QAAIC,OAAO,CAAX,UAAW,CAAX,EAAyB;AACvBhB,MAAAA,QAAQ,CAACiB,yBAATjB,EAAQ,CAARA;AACA;AACD;;AAEDA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EADG,uBAAA;AAEPC,MAAAA,OAAO,EAAE;AAAEO,QAAAA,IAAI,EAAN,UAAA;AAAoBS,QAAAA,SAAS,EAAE;AAA/B;AAFF,KAAD,CAARlB;AAKAmB,IAAAA,KAAK,CAALA,cAAK,CAALA,CAAAA,IAAAA,CACQ,UAAA,QAAA,EAAY;AAChB,UAAIC,QAAQ,CAAZ,EAAA,EAAiB;AACf,eAAOA,QAAQ,CAAf,IAAOA,EAAP;AACD;;AACD,aAAOC,OAAO,CAAPA,MAAAA,CAAe,IAAA,KAAA,CAAUD,QAAQ,CAAxC,UAAsB,CAAfC,CAAP;AALJF,KAAAA,EAAAA,IAAAA,CAOQ,UAAA,OAAA,EAAW;AACf,UAAI,CAAJ,OAAA,EAAc;AAEdnB,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EADG,2BAAA;AAEPC,QAAAA,OAAO,EAAEQ,OAAO,CAACY;AAFV,OAAD,CAARtB;AAVJmB,KAAAA,EAAAA,KAAAA,CAeS,UAAA,MAAA,EAAU;AACfI,MAAAA,OAAO,CAAPA,KAAAA,CAAAA,oCAAAA,EAAAA,MAAAA;AACAvB,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EADG,8BAAA;AAEPC,QAAAA,OAAO,EAAE;AAAEsB,UAAAA,YAAY,EAAEC,MAAM,CAACC;AAAvB;AAFF,OAAD,CAAR1B;AAjBJmB,KAAAA;AAjBgC,GAAA;AAA3B,CAAA;;;;;;;;;;;;0BAxBMxB,uB;0BACAC,2B;0BACAC,8B;0BAEAC,mB;0BAaN,yB;0BAOMa,kB","sourcesContent":["import { GET_NODES_WITH_SEARCH_URL, getURLFromParams } from 'utils/getURLFromParams';\nimport isEmpty from 'lodash/isEmpty';\n\nexport const SET_PROFILE_SEARCH_TERM = 'SET_PROFILE_SEARCH_TERM';\nexport const LOAD_PROFILE_SEARCH_RESULTS = 'LOAD_PROFILE_SEARCH_RESULTS';\nexport const SET_PROFILE_ROOT_ERROR_MESSAGE = 'SET_PROFILE_ROOT_ERROR_MESSAGE';\n\nexport const goToNodeProfilePage = (node, { year }) => dispatch =>\n  dispatch({\n    type: 'profileNode',\n    payload: {\n      query: {\n        nodeId: node.id,\n        contextId: node.contextId,\n        year\n      },\n      profileType: node.profile\n    }\n  });\n\nexport function resetProfileSearchResults() {\n  return {\n    type: SET_PROFILE_SEARCH_TERM,\n    payload: { term: '', results: [] }\n  };\n}\n\nexport const searchNodeWithTerm = (searchTerm, { contextId }) => dispatch => {\n  const nodeResultsURL = getURLFromParams(GET_NODES_WITH_SEARCH_URL, {\n    query: searchTerm,\n    context_id: contextId,\n    profile_only: true\n  });\n\n  if (isEmpty(searchTerm)) {\n    dispatch(resetProfileSearchResults());\n    return;\n  }\n\n  dispatch({\n    type: SET_PROFILE_SEARCH_TERM,\n    payload: { term: searchTerm, isLoading: true }\n  });\n\n  fetch(nodeResultsURL)\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error(response.statusText));\n    })\n    .then(results => {\n      if (!results) return;\n\n      dispatch({\n        type: LOAD_PROFILE_SEARCH_RESULTS,\n        payload: results.data\n      });\n    })\n    .catch(reason => {\n      console.error('Error loading profile search nodes', reason);\n      dispatch({\n        type: SET_PROFILE_ROOT_ERROR_MESSAGE,\n        payload: { errorMessage: reason.message }\n      });\n    });\n};\n"]}]}